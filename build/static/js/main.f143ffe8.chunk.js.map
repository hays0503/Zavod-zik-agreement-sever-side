{"version":3,"sources":["modules/Error404.js","images/duck.jpg","config/constants.js","core/Header1.js","modules/Login.js","core/modal/ModalInsert.js","core/modal/ModalUpdate.js","core/TitleMenu.js","core/TableContainer.js","core/functions/getColumnSearchTextProps.js","core/functions/test.js","components/adminPanel/pages/UsersPage.js","components/adminPanel/pages/DocumentStatusesPage.js","core/IndependentSelect.js","components/adminPanel/pages/DocumentRoutesPage.js","components/adminPanel/pages/PositionsPage.js","components/adminPanel/pages/FormSettingsPage.js","components/adminPanel/AdminPanel.js","components/account/Account.js","components/DocumentControl/SiderMenu.js","components/DocumentControl/modals/ModalInsert.js","components/DocumentControl/modals/ModalUpdate.js","components/DocumentControl/tableContainers/TableContainer.js","components/DocumentControl/modals/UploadFile.js","components/DocumentControl/pages/Orders/forms/1/Insert1.js","components/DocumentControl/pages/Orders/forms/2/Insert2.js","components/DocumentControl/pages/Orders/forms/3/Insert3.js","components/DocumentControl/pages/Orders/forms/4/Insert4.js","components/DocumentControl/pages/Orders/forms/5/Insert5.js","components/DocumentControl/pages/Orders/gql/1/gql1.js","components/DocumentControl/pages/Orders/gql/2/gql2.js","components/DocumentControl/pages/Orders/gql/3/gql3.js","components/DocumentControl/pages/Orders/gql/4/gql4.js","components/DocumentControl/pages/Orders/gql/5/gql5.js","components/DocumentControl/dialogs/SelectReplacementDialog.js","components/DocumentControl/pages/Orders/forms/1/Update1.js","components/DocumentControl/pages/Orders/forms/2/Update2.js","components/DocumentControl/pages/Orders/forms/3/Update3.js","components/DocumentControl/pages/Orders/forms/4/Update4.js","components/DocumentControl/pages/Orders/forms/5/Update5.js","components/DocumentControl/pages/Orders/Orders.js","components/DocumentControl/tableContainers/TableContainerIsRead.js","components/DocumentControl/pages/RevisedPageUser/forms/1/dialogs/FromUserEditToApproveConfirm.js","components/DocumentControl/pages/RevisedPageUser/common/DeleteFile.js","components/DocumentControl/pages/RevisedPageUser/forms/1/Update1.js","components/DocumentControl/pages/RevisedPageUser/forms/2/dialogs/FromUserEditToApproveConfirm.js","components/DocumentControl/pages/RevisedPageUser/forms/2/Update2.js","components/DocumentControl/pages/RevisedPageUser/forms/3/dialogs/FromUserEditToApproveConfirm.js","components/DocumentControl/pages/RevisedPageUser/forms/3/Update3.js","components/DocumentControl/pages/RevisedPageUser/forms/4/dialogs/FromUserEditToApproveConfirm.js","components/DocumentControl/pages/RevisedPageUser/forms/4/Update4.js","components/DocumentControl/pages/RevisedPageUser/forms/5/dialogs/FromUserEditToApproveConfirm.js","components/DocumentControl/pages/RevisedPageUser/forms/5/Update5.js","components/DocumentControl/pages/RevisedPageUser/RevisedPageUser.js","core/print/reports/test/TestPrint.js","core/print/Print.js","components/DocumentControl/pages/ApprovedPageUser/forms/1/Update1.js","components/DocumentControl/pages/ApprovedPageUser/forms/2/Update2.js","components/DocumentControl/pages/ApprovedPageUser/forms/3/Update3.js","components/DocumentControl/pages/ApprovedPageUser/forms/4/Update4.js","components/DocumentControl/pages/ApprovedPageUser/forms/5/Update5.js","components/DocumentControl/pages/ApprovedPageUser/ApprovedPageUser.js","components/DocumentControl/pages/RejectedDocumentsUser/forms/1/Update1.js","components/DocumentControl/pages/RejectedDocumentsUser/forms/2/Update2.js","components/DocumentControl/pages/RejectedDocumentsUser/forms/3/Update3.js","components/DocumentControl/pages/RejectedDocumentsUser/forms/4/Update4.js","components/DocumentControl/pages/RejectedDocumentsUser/forms/5/Update5.js","components/DocumentControl/pages/RejectedDocumentsUser/RejectedDocumentsUser.js","components/DocumentControl/pages/OnApprovalDocuments/forms/1/dialogs/ApproveConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/1/dialogs/RejectConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/1/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/1/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/1/UpdateTask1.js","components/DocumentControl/dialogs/TasksAddDialog.js","components/DocumentControl/pages/OnApprovalDocuments/tableContainers/TasksTableContainer.js","components/DocumentControl/pages/OnApprovalDocuments/modals/TaskModalUpdate.js","components/DocumentControl/pages/OnApprovalDocuments/forms/1/Update1.js","components/DocumentControl/pages/OnApprovalDocuments/forms/2/dialogs/ApproveConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/2/dialogs/RejectConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/2/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/2/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/dialogs/TasksAddDialogs2.js","components/DocumentControl/pages/OnApprovalDocuments/forms/2/UpdateTask2.js","components/DocumentControl/pages/OnApprovalDocuments/forms/2/Update2.js","components/DocumentControl/pages/OnApprovalDocuments/forms/3/dialogs/ApproveConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/3/dialogs/RejectConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/3/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/3/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/dialogs/TasksAddDialog3.js","components/DocumentControl/pages/OnApprovalDocuments/forms/3/UpdateTask3.js","components/DocumentControl/pages/OnApprovalDocuments/forms/3/Update3.js","components/DocumentControl/pages/OnApprovalDocuments/forms/4/dialogs/ApproveConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/4/dialogs/RejectConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/4/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/4/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/dialogs/TasksAddDialog4.js","components/DocumentControl/pages/OnApprovalDocuments/forms/4/UpdateTask4.js","components/DocumentControl/pages/OnApprovalDocuments/forms/4/Update4.js","components/DocumentControl/pages/OnApprovalDocuments/forms/5/dialogs/ApproveConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/5/dialogs/RejectConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/5/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/OnApprovalDocuments/forms/5/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/dialogs/TasksAddDialog5.js","components/DocumentControl/pages/OnApprovalDocuments/forms/5/UpdateTask5.js","components/DocumentControl/pages/OnApprovalDocuments/forms/5/Update5.js","components/DocumentControl/pages/OnApprovalDocuments/OnApprovalDocuments.js","components/DocumentControl/pages/OnApprovalDocumentsList/forms/1/Update1.js","components/DocumentControl/pages/OnApprovalDocumentsList/forms/2/Update2.js","components/DocumentControl/pages/OnApprovalDocumentsList/forms/3/Update3.js","components/DocumentControl/pages/OnApprovalDocumentsList/forms/4/Update4.js","components/DocumentControl/pages/OnApprovalDocumentsList/forms/5/Update5.js","components/DocumentControl/pages/OnApprovalDocumentsList/OnApprovalDocumentsList.js","components/DocumentControl/pages/ForExecutionInbox/modals/ModalUpdate.js","components/DocumentControl/pages/ForExecutionInbox/tableContainers/TableContainer.js","components/DocumentControl/pages/ForExecutionInbox/forms/1/Update1.js","components/DocumentControl/pages/ForExecutionInbox/forms/2/Update2.js","components/DocumentControl/pages/ForExecutionInbox/forms/3/Update3.js","components/DocumentControl/pages/ForExecutionInbox/forms/4/Update4.js","components/DocumentControl/pages/ForExecutionInbox/forms/5/Update5.js","components/DocumentControl/pages/ForExecutionInbox/ForExecutionInbox.js","components/DocumentControl/pages/XAdminPageAll/forms/1/dialogs/ApproveConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/1/dialogs/RejectConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/1/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/1/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/1/Update1.js","components/DocumentControl/pages/XAdminPageAll/forms/2/dialogs/ApproveConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/2/dialogs/RejectConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/2/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/2/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/2/Update2.js","components/DocumentControl/pages/XAdminPageAll/forms/3/dialogs/ApproveConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/3/dialogs/RejectConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/3/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/3/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/3/Update3.js","components/DocumentControl/pages/XAdminPageAll/forms/4/dialogs/ApproveConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/4/dialogs/RejectConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/4/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/4/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/4/Update4.js","components/DocumentControl/pages/XAdminPageAll/forms/5/dialogs/ApproveConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/5/dialogs/RejectConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/5/dialogs/ReturnStepBackConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/5/dialogs/ReturnToSenderConfirm.js","components/DocumentControl/pages/XAdminPageAll/forms/5/Update5.js","components/DocumentControl/pages/XAdminPageAll/AdminPageAll.js","components/DocumentControl/pages/RejectedDocuments.js","components/DocumentControl/DocumentControl.js","components/DocumentSearch/common/Header1.js","components/DocumentSearch/modals/ModalUpdate.js","components/DocumentSearch/tableContainers/TableContainer.js","core/getColumnSearchTextProps.js","core/test.js","components/DocumentSearch/gql/gqlMain.js","components/DocumentSearch/forms/1/Update1.js","components/DocumentSearch/forms/2/Update2.js","components/DocumentSearch/forms/3/Update3.js","components/DocumentSearch/forms/4/Update4.js","components/DocumentSearch/forms/5/Update5.js","components/DocumentSearch/pages/Search/Search.js","components/DocumentSearch/DocumentSearch.js","index.js","core/functions.js"],"names":["Error404","status","title","subTitle","extra","type","to","constants","debug","port","host","window","SERVER_DATA","graphql","path","Header","Layout","useBreakpoint","Grid","Header1","React","memo","user","screens","history","useHistory","pathname","useLocation","className","style","padding","justify","align","paddingLeft","flex","color","backIcon","ArrowLeftOutlined","onBack","push","sm","shape","size","icon","UserOutlined","marginRight","direction","width","overlay","admin","Item","danger","onClick","textAlign","CrownOutlined","a","document","createElement","target","href","click","ReadOutlined","technicalDepartment","location","LogoutOutlined","placement","trigger","e","preventDefault","fontSize","username","loginGQL","gql","Login","useState","setUser","handlerMutation","useMutation","login","loading","data","useEffect","variables","requestOptions","method","headers","Headers","Accept","body","JSON","stringify","fetch","then","response","url","console","log","Form","useForm","form","height","name","onFinish","onFinishFailed","errorInfo","gutter","rules","required","message","placeholder","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","htmlType","ModalInsert","GQL","InsertForm","props","setVisible","insert","resetFields","PlusCircleOutlined","onOk","submit","onCancel","cancelText","okText","centered","maskClosable","destroyOnClose","confirmLoading","values","exemplar","save","ModalUpdate","UpdateForm","visibleModalUpdate","viewMode","setViewMode","table","global","id","selectedRowKeys","handlerQuery","loadingOne","refetch","update","loadingUpdate","disabled","length","EyeOutlined","footer","spinning","initialValues","TitleMenu","buttons","map","item","index","margin","TableContainer","setSelectedRowKeys","itemKeys","records","filter","i","minHeight","columns","dict","dataSource","scroll","y","minX","bordered","onRow","record","rowIndex","event","key","onDoubleClick","pagination","pageSize","showSizeChanger","rowClassName","getColumnSearchTextProps","dataIndex","searchInput","render","text","searchText","searchedColumn","handleSearch","selectedKeys","confirm","handleReset","clearFilters","filterDropdown","setSelectedKeys","ref","node","value","onChange","onPressEnter","marginBottom","display","SearchOutlined","filterIcon","filtered","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","withoutWordWrap","minWidth","whiteSpace","overflow","textOverflow","withoutWordWrapWithTooltip","test","object","filters","tooltip","children","textRender","getProps","test1","users","options","all","ORDER_BY","fetchPolicy","one","subscription","delete","positions","UsersPage","useUser","remove","loadingRemove","positionsData","refetchPositions","list","access","fio","email","positionName","obj","tableProps","WorkersWorkerdForm","onConfirm","Number","log_username","QuestionCircleOutlined","DeleteOutlined","password","accesses","domain_username","state","setState","setFieldsValue","scrollToFirstError","autoComplete","onValuesChange","changedValues","allValues","Object","assign","label","labelCol","span","whitespace","valuePropName","shouldUpdate","hidden","PositionsTransfer","mockData","description","showSearch","titles","targetKeys","nextTargetKeys","moveKeys","showSelectAll","onSelectChange","sourceSelectedKeys","targetSelectedKeys","listStyle","filterOption","inputValue","option","indexOf","locale","itemUnit","itemsUnit","notFoundContent","image","Empty","PRESENTED_IMAGE_SIMPLE","searchPlaceholder","document_statuses","DocumentStatusesPage","keys","DocumentStatusesForm","isuseforreport","IndependentSelect","query","clear","optionFilterProp","Option","field","CloseOutlined","document_routes","DocumentRoutesPage","DocumentRoutesForm","panelAddButton","useRef","status_in_process","status_cancelled","status_finished","routes","List","fields","add","fieldKey","LabeledValue","prevState","old","step","DocumentStatusesTransfer","SubstitutesTransfer","MinusCircleOutlined","marginLeft","block","PlusOutlined","current","ArrowRightOutlined","FormOutlined","CloseSquareOutlined","DocumentPositionsPage","usersData","refetchUsers","count","DocumentPositionsForm","PositionsPermissionsTree","autoExpandParent","setAutoExpandParent","expandedKeys","setExpandedKeys","checkable","onExpand","onCheck","checkedKeys","treeData","forms","FormSettingsPage","FormSettingsForm","route","settings","TextArea","rows","Content","Sider","withRouter","split","slice","theme","breakpoint","collapsedWidth","mode","defaultSelectedKeys","position","top","marginTop","TeamOutlined","bottom","component","updateUserPassword","versionCheck","Account","setPassword","password2","setPassword2","load","setLoad","getUser","onCompleted","onError","error","dataPassword","loadingMutation","errorMutation","useQuery","versionData","notification","duration","application","platform_version","database_version","SubMenu","Menu","SiderMenu","collapsedState","setCollapsedState","t1","t2","t3","con","setCon","con1","setCon1","testLogs","testSub","tasksLogs","tasksSub","document_logs","is_read","user_id","subData","revised","el","approved","rejected","onaproval","useSubscription","onSubscriptionData","subscriptionData","notifyMe","countF","document_tasks_logs","setHeaderTitle","collapsible","collapsed","onCollapse","defaultOpenKeys","DatabaseOutlined","documentControl","revisedUser","approvedUser","rejectedUser","onApproval","onApprovalList","SafetyCertificateOutlined","forExecutionInbox","CarryOutOutlined","Step","Steps","GQL2","GQL3","GQL4","GQL5","Form1","Form2","Form3","Form4","Form5","secondModalVisible","setSecondModalVisible","thirdModalVisible","setThirdModalVisible","fourthModalVisible","setFourthModalVisible","fifthModalVisible","setFifthModalVisible","sixthModalVisible","setsixthModalVisible","routeData","setRouteData","formRouteSelect","route_id","setRoutesList","handleCancel","dataRoutes","refetchRoutes","routesList","status_id","form2","form3","form4","form5","insert2","loading2","insert3","loading3","insert4","loading4","insert5","uploadDocuments","loading5","files","filePromises","file","Promise","resolve","reject","reader","FileReader","onload","dataFile","result","fileName","onerror","readAsDataURL","originFileObj","fileInfos","cRef","form5RouteData","setFields","errors","statuses","base64","fileList","docs","position_names","positionId","onFinish2","onFinish3","onFinish4","onFinish5","route_data","insertComment","insertSignature","deleteSignature","deleteFile","comments","documentTasks","UpdateForm2","UpdateForm3","UpdateForm4","UpdateForm5","visibleModalUpdate2","visible2","setVisible2","visibleModalUpdate3","visible3","setVisible3","visibleModalUpdate4","visible4","setVisible4","visibleModalUpdate5","visible5","setVisible5","modalCancelHandler","modalEnableEditHandler","Modal","variables1","variables2","variables3","variables4","variables5","data2","refetch2","data3","refetch3","data4","refetch4","data5","refetch5","tasksVariables","document_tasks","document_id","user_id_created","dataTasks","refetchTasks","documentTasksList","is_cancelled","note","deadline","date_created","fio_created","user_id_receiver","fio_receiver","task_statuses","document_tasks_files","findIndex","commentText","setCommentText","commentVariables","document_comments","dataComments","refetchComments","commentsList","comment","date","dataComment","handleComment","HandleCommentOnChange","change","setStep","setStatus","dataSignature","showInfoMessageRouteUnavailable","info","handleRouteReturnToSender","handleStatusCancelled","HandleDeleteFile","fileDelete","document_files","testRef","HandleComment","handleRouteForward","routeFinishIndex","documents","routeCurrentIndex","signatures","signature","handleRouteBackward","handleRouteFromUserEditToApprove","handleRouteForward2","handleRouteBackward2","handleRouteFromUserEditToApprove2","initialValues2","handleRouteForward3","handleRouteBackward3","handleRouteFromUserEditToApprove3","initialValues3","handleRouteForward4","handleRouteBackward4","handleRouteFromUserEditToApprove4","initialValues4","handleRouteForward5","handleRouteBackward5","handleRouteFromUserEditToApprove5","initialValues5","Dragger","Upload","UploadFile","beforeUpload","content","destroy","LIST_IGNORE","InboxOutlined","Insert1","price","data_one","supllier","subject","date_modified","pattern","showUploadList","action","multiple","maxCount","success","Insert2","price_pattern","data_agreement_list","currency_price","executor_name_division","sider_signatures_date","received_from_counteragent_date","radioState","setRadioState","Group","radioValue","Insert3","data_agreement_list_production","currency","executor_phone_number","counteragent_contacts","Insert4","data_agreement_list_internal_needs","Insert5","data_custom","remark","gql1","gql2","gql3","gql4","gql5","SelectReplacementDialog","updateDocumentRoutePosition","replacement","tmpPosName","tmpIndex","substitutes","stepCount","labelAlign","Update1","Link","Typography","Title","setStepCount","OpenDocument","tmp","json","download","dataset","fileid","link","data_file","filename","xs","md","lg","formatDate","date_signature","labelPlacement","tmpD","getDiffHours","Date","reason","userPosition","Update2","Update3","Update4","Update5","stepsDirection","responsive","Orders","positionsVariable","userVariable","route_step","step_count","step_name","sorter","b","localeCompare","sortDirections","setIsReadTrue","readTrue","FromUserEditToApproveConfirm","reasonText","dataProps","confirmText","DeleteFile","splice","RevisedPageUser","onVisibilityChange","visibilityState","useLayoutEffect","addEventListener","listFiltered","localStorage","TableContainerIsRead","TestPrint","forwardRef","parse","sessionStorage","Print","componentRef","handlePrint","useReactToPrint","cloneNode","PrintElem","appendChild","agreement","ApprovedPageUser","RejectedDocumentsUser","ApproveConfirm","setConfirmText","userId","userFio","userName","RejectConfirm","rejectVisible","setRejectVisible","ReturnStepBackConfirm","ReturnToSenderConfirm","tasksFilesMap","task_files","document_options","report","TasksAddDialog","DocumentTasks","CheckboxGroup","Checkbox","setPopconfirmInModalVisible","closable","recepient","taskData","getDDMMYYYHHmm","_d","parseInt","wrapperCol","labelInValue","format","showTime","dateString","defaultChecked","Fragment","TasksTableContainer","setTaskIsReadTrue","task","simple","TaskModalUpdate","documentVariables","documentData","refetchData","Panel","Collapse","setReasonText","callback","defaultActiveKey","header","UpdateTask1","TasksAddDialog2","UpdateTask2","TasksAddDialog3","UpdateTask3","TasksAddDialog4","UpdateTask4","TasksAddDialog5","UpdateTask5","OnApprovalDocuments","taskRefetch","tasks","tasks_done","user_info","tasks_count","setCountManager","OnApprovalDocumentsList","approved_by_me","documentData2","refetchData2","documentData3","refetchData3","documentData4","refetchData4","documentData5","refetchData5","ForExecutionInbox","loadingTasks","AdminPageAll","RejectedDocuments","DocumentsFormUpdate","DocumentsFormUpdate2","Blob","FileImageOutlined","headerTitle","countManager","countFunction","setCountFunction","setValue","prev","orders","stateSetter","accessRedirect","exact","AdminAllPage","gqlMain","Select","Search","DatePicker","RangePicker","setVariables","set_filters","currentTableData","setCurrentTableData","counteragent_name","searchVariables","setSearchVariables","getDocuments","dateFrom","dateTo","date1","date2","getExcel","getDDMMYYY","dateFormat","paddingRight","currentDataSource","DocumentSearch","documentSearch","search","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","errorLink","graphQLErrors","networkError","operation","locations","operationName","authLink","setContext","_","token","getItem","authorization","splitLink","definition","getMainDefinition","kind","concat","client","ApolloClient","ApolloLink","from","cache","InMemoryCache","documentControlP","DesktopOutlined","documentReportP","BarChartOutlined","documentHistoryP","ClockCircleOutlined","documentSearchP","StartPage","paddingTop","transform","documentReport","documentHistory","App","DocumentControl","AdminPanel","ReactDOM","ApolloProvider","ru_RU","getElementById","MergeRecursive","obj1","obj2","p","constructor","checkObject","request","eval","auth","subscribe","setSubscribe","reqQuery","subscribeToMore","updateQuery","fn","promissOK","isAccessed","some","authMe","positionNames","position_accesses","role_id","isDocumentStatusChangeAllowed","isItemStatusChangeAllowed","adminDepartment","Component","blob","elm","URL","createObjectURL","setAttribute","today","dd","getDate","mm","getMonth","yyyy","getFullYear","hours","getHours","minutes","getMinutes","padTo2Digits","num","String","padStart","getFirstMonthDate","anydate","today_tmp","getTime","getTimezoneOffset","myDate","setHours","setMonth","setDate","timestamp","d","diff","Math","abs","round","Notification","permission","notify","notif_image","requireInteraction","close","requestPermission","catch","err","sendAgentNotification","address"],"mappings":"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","file":"static/js/main.f143ffe8.chunk.js","sourcesContent":["import {Button, Result} from \"antd\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle='Упс, страница не найдена или нет доступа.'\r\n            extra={<Button type=\"primary\"><NavLink to='/'>На главную</NavLink></Button>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Error404;","export default __webpack_public_path__ + \"static/media/duck.dcaac10b.jpg\";","const  constants = {\r\n    debug: false,\r\n    port: 8445,\r\n    host: window.SERVER_DATA,\r\n    graphql: {\r\n        path: '/graphql'\r\n    },\r\n}\r\n\r\nexport default constants;","import {\r\n    CrownOutlined,\r\n    LogoutOutlined,\r\n    ArrowLeftOutlined, \r\n    UserOutlined, \r\n    ReadOutlined,\r\n    BellFilled\r\n} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n// import '../index.css';\r\nimport { Grid, Dropdown, Menu, Col, Layout, Row, Space, PageHeader, Avatar, Popover, Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n// import notification from \"./img/notification.png\"\r\n\r\nconst { Header } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nlet Header1 = React.memo(({ title, user, ...props }) => {\r\n    const screens = useBreakpoint();\r\n    let history = useHistory();\r\n\r\n    let { pathname } = useLocation();\r\n    const text = <span>Title</span>;\r\n    const content = (\r\n        <div>\r\n            <p>Content</p>\r\n            <p>Content</p>\r\n        </div>\r\n    );\r\n    return <div>\r\n        <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}>\r\n            <Row justify=\"space-between\" align=\"middle\" style={{ paddingLeft: 46 }}>\r\n                <Col flex=\"auto\" style={{ color: \"c40c46\" }}>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n                        // onBack={() => null}\r\n                        backIcon={<ArrowLeftOutlined style={{ color: \"white\" }} />}\r\n                        onBack={pathname === '/' ? null : () => { history.push('/') }}\r\n                        title={<div style={{ color: \"white\" }}>Согласование договоров</div>}\r\n\r\n                    // subTitle=\"This is a subtitle\"\r\n                    />\r\n                </Col>\r\n                {screens.sm ? <Col flex=\"auto\">\r\n                    <h1 style={{ color: 'white' }}>{title}</h1>\r\n                </Col> : <></>}\r\n\r\n                {/*<Col>\r\n                    <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                        <span className='notificationDot'></span>\r\n                        <BellFilled className='notification' />\r\n                         <Avatar shape=\"square\" size=\"small\" icon={<BellOutlined className='notification'/>} /> \r\n                    </Popover>\r\n                </Col>*/}\r\n                <Col><Avatar shape=\"square\" size=\"small\" icon={<UserOutlined />} /></Col>\r\n\r\n                <Col flex=\"70px\" style={{ marginRight: \"30px\" }}>\r\n                    <Space direction=\"vertical\" align=\"center\" style={{ width: '100%' }}>\r\n\r\n                        {/*<Button type=\"primary\"><a href=\"/logout\">Выйти</a></Button>*/}\r\n                        <Dropdown overlay={<Menu>\r\n                            {user.admin &&\r\n                                <Menu.Item danger onClick={() => { history.push('/admin/') }} style={{ textAlign: 'center' }}>\r\n                                    <CrownOutlined />ADMIN\r\n                                </Menu.Item>}\r\n\r\n                            {user.admin && <Menu.Item danger onClick={() => {\r\n\r\n                                let a = document.createElement('a');\r\n                                a.target = '_blank';\r\n                                a.title = 'IUPC-WEB';\r\n                                a.href = '/help/admin';\r\n                                a.click();\r\n                            }} style={{ textAlign: 'center' }}><ReadOutlined />Справка</Menu.Item>}\r\n\r\n                            {user.technicalDepartment && !user.admin && <Menu.Item danger onClick={() => {\r\n\r\n                                let a = document.createElement('a');\r\n                                a.target = '_blank';\r\n                                a.title = 'ZIK-СКУД';\r\n                                a.href = '/help/hr';\r\n                                a.click();\r\n                            }} style={{ textAlign: 'center' }}><ReadOutlined />Справка</Menu.Item>}\r\n\r\n                            <Menu.Item danger onClick={() => { window.location.href = '/account/' }} style={{ textAlign: 'center' }}><UserOutlined />Аккаунт</Menu.Item>\r\n                            <Menu.Item danger onClick={() => { window.location.href = '/logout/' }} style={{ textAlign: 'center' }}><LogoutOutlined />Выйти</Menu.Item>\r\n                        </Menu>} placement=\"bottomCenter\" trigger={['click']}>\r\n                            <a className=\"ant-dropdown-link userName\" onClick={e => e.preventDefault()} style={{ fontSize: 21 }}>\r\n                                {user.username}\r\n                            </a>\r\n                        </Dropdown>\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Header>\r\n    </div>\r\n});\r\n\r\nexport default Header1;","import { Form, Input, Button, Row, Col,Space } from 'antd';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport 'antd/dist/antd.less';\r\nimport React, {useEffect, useState} from 'react'\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport {handlerMutation} from \"../core/functions\";\r\nimport constants from \"../config/constants\";\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport \"./style.css\";\r\n\r\nconst loginGQL = gql`\r\n    mutation login($user: JSON) {\r\n        login(user: $user){\r\n            username\r\n        }\r\n    }`;\r\nconst Login = () => {\r\n    let [user, setUser] = useState();\r\n    const [login, { loading, data }] = handlerMutation(useMutation(loginGQL))();\r\n    useEffect(() => {\r\n        if (user) {\r\n            login({ variables: { user }})\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: new Headers({ Accept: 'application/json', 'Content-Type': 'application/json' }),\r\n                body: JSON.stringify(user)\r\n            };\r\n            fetch('https://'+constants.host+':'+constants.port+'/login', requestOptions)\r\n                .then((response) => {\r\n                    if (response.url != window.location.href) {\r\n                        window.location.href = response.url\r\n                    } else {\r\n                        console.log(response);\r\n                    }\r\n                });\r\n        }\r\n    }, [data]);\r\n    const onFinish = (values) => {\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Row justify=\"center\" align=\"middle\" style={{ height: \"95vh\"}}>\r\n            <Col >\r\n                <Form\r\n                    form={form}\r\n                    name=\"basic\"\r\n                    onFinish={setUser}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                <Row gutter={16}>\r\n                    <Col>\r\n                    <div className='authorizationHeader'>АВТОРИЗАЦИЯ</div>\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input className='loginFormName' placeholder=\"Имя пользователя\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password className='loginFormPassword' placeholder=\"Пароль\" iconRender={visible => (visible ? <EyeTwoTone style={{color:'#fff'}} className=\"loginIcons\"/> : <EyeInvisibleOutlined style={{color:'#fff'}} className=\"loginIcons\"/>)} />\r\n                    </Form.Item>\r\n                    <Form.Item className='loginFormItem'>\r\n                        <Button htmlType=\"submit\" loading={loading} className='login_btn'>\r\n                            Войти\r\n                        </Button>\r\n                    </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n\t\t\r\n    );\r\n};\r\n\r\n\r\nexport default Login;\r\n","import { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Button, Form, Modal } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { handlerMutation } from '../functions';\r\n\r\n\r\n\r\nlet ModalInsert = React.memo(({ GQL, InsertForm, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const [insert, { loading }] = handlerMutation(useMutation(GQL.insert), () => { setVisible(false); form.resetFields() })();\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={() => { setVisible(true) }}\r\n            >\r\n                <PlusCircleOutlined />Добавить\r\n            </Button>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible}\r\n                onOk={() => { form.submit() }}\r\n                onCancel={() => { setVisible(false) }}\r\n                cancelText='Отмена'\r\n                okText='Сохранить'\r\n\r\n                centered\r\n                width={props.width?props.width:450}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                confirmLoading={loading ? loading : false}\r\n            >\r\n                <InsertForm\r\n                    form={form}\r\n                    onFinish={(values) => { let variables = {}; variables[GQL.exemplar] = values; insert({ variables }) }}\r\n                    setVisible={setVisible}\r\n                    save={() => { form.submit() }}\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\nexport default ModalInsert;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Button, Form, Modal, Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { handlerQuery } from '../../core/functions';\r\nimport { handlerMutation } from '../functions';\r\n\r\nlet ModalUpdate = React.memo(({ GQL, UpdateForm, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    const [visible, setVisible] = props.visibleModalUpdate;\r\n    const [viewMode, setViewMode] = useState(true);\r\n\r\n    let variables = {}; variables[GQL.table] = { global: { id: `= ${props.selectedRowKeys[0]}` } };\r\n    const { loading: loadingOne, data, refetch } = handlerQuery(GQL, 'one', { variables })();\r\n\r\n    useEffect(() => { if (data) { form.resetFields() } }, [data]);\r\n    useEffect(() => { if (visible) { refetch() } }, [visible]);\r\n    window.setVisible = setVisible;\r\n\r\n    const [update, { loading: loadingUpdate }] = handlerMutation(useMutation(GQL.update), () => { setVisible(false); setViewMode(true) })();\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                disabled={props.selectedRowKeys.length !== 1}\r\n                onClick={() => { setVisible(true) }}\r\n            >\r\n                <EyeOutlined />Просмотр\r\n            </Button>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible}\r\n\r\n                centered\r\n                width={props.width?props.width:450}\r\n                onOk={() => { form.submit() }}\r\n                onCancel={() => { setVisible(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setVisible(false); setViewMode(true) }}>Отмена</Button>,\r\n                    viewMode ?\r\n                        props.update && <Button key=\"setViewMode\" type=\"primary\" onClick={() => { setViewMode(false) }}>Редактировать</Button> :\r\n                        <Button key=\"update\" type=\"primary\" loading={loadingUpdate} onClick={() => { form.submit() }}>Сохранить</Button>\r\n                    \r\n                ]}\r\n            >\r\n                {/*{<div style={{ position: 'fixed', zIndex: '100' }}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        disabled={props.selectedRowKeys.length !== 1}\r\n                        onClick={() => { setVisible(true) }}\r\n                        className=\"form-button\"\r\n                    >\r\n                        <EyeOutlined />Просмотр\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        disabled={props.selectedRowKeys.length !== 1}\r\n                        onClick={() => { setVisible(true) }}\r\n                        className=\"form-button\"\r\n                    >\r\n                        <EyeOutlined />Просмотр\r\n                    </Button>\r\n                </div>}*/}\r\n                <Spin spinning={loadingOne}><UpdateForm\r\n                    form={form}\r\n                    onFinish={(values) => { let variables = {}; variables[GQL.exemplar] = values; update({ variables }) }}\r\n                    initialValues={data}\r\n                    disabled={viewMode}\r\n                    setVisible={setVisible}\r\n                    setViewMode={setViewMode}\r\n                    save={() => { form.submit() }}\r\n                /></Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ModalUpdate;\r\n\r\n //?data[`${GQL.table}TEST`][0] : data","import { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { Col, Row, Tag } from 'antd';\r\nimport React from 'react';\r\n\r\n\r\nlet TitleMenu = React.memo((props) => {\r\n    let buttons = props.buttons ? props.buttons.map((item, index) => {\r\n        return (\r\n            <Col key={`button${index}`}>\r\n                {item}\r\n            </Col>\r\n        )\r\n    }) : [];\r\n    return (\r\n        <Row justify=\"end\" align=\"middle\" gutter={[8, 8]}>\r\n            <Col flex=\"auto\">\r\n                <h1 style={{ margin: \"0 0 0 30px\" }}>{props.title}</h1>\r\n            </Col>\r\n            {buttons}\r\n        </Row>\r\n    )\r\n});\r\n\r\nexport default TitleMenu;\r\n\r\n//{ (props.selectedRowKeys.length !== 0) ? <Col flex=\"auto\"><Tag icon={<ExclamationCircleOutlined />} color=\"warning\">Выбранно строк: {props.selectedRowKeys.length}</Tag></Col> : null }\r\n","\r\nimport { Table } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nlet TableContainer = React.memo((props) => {\r\n    let [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n    let itemKeys = [];\r\n\r\n    if (!props.loading) {\r\n        itemKeys = props.data.records.map((item) => {\r\n            return item.id\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSelectedRowKeys(selectedRowKeys.filter((item) => {\r\n            for (var i = 0; i < itemKeys.length; i++) {\r\n                if (itemKeys[i] == item) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }));\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                className='sd-tables-row-hover'\r\n                loading={props.loading}\r\n                style={{minHeight: 168}}\r\n                // bordered={true}\r\n                columns={props.data.dict}\r\n                dataSource={props.data.records}\r\n                scroll={{ y: 'calc(100vh - 231px)', minX: 500 }}\r\n                size='small'\r\n                title={props.title ? () => (props.title({ selectedRowKeys: selectedRowKeys })) : null}\r\n                bordered={props.bordered}\r\n                onRow={(record, rowIndex) => {\r\n                    return {\r\n                        onClick: event => { setSelectedRowKeys([record.key]) },\r\n                        onDoubleClick: event => { props.visibleModalUpdate[1](true) }\r\n                    }\r\n                }}\r\n                pagination={{\r\n                    // simple: true,\r\n                    pageSize: 50,\r\n\t\t\t\t\t//defaultCurrent=6, - to check both commented\r\n\t\t\t\t\t//total={props.data.records.length},\r\n                    showSizeChanger: false\r\n                }}\r\n                rowClassName={(record, index) => {\r\n                    if (record.key === selectedRowKeys[0]) {\r\n                        return 'ant-table-row ant-table-row-level-0 statusSelected';\r\n                    }\r\n                    return 'ant-table-row ant-table-row-level-0';\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TableContainer\r\n","import {Button, Input, Space} from \"antd\";\r\nimport {SearchOutlined} from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport React from \"react\";\r\n\r\nconst getColumnSearchTextProps = (dataIndex, placeholder, render = (text)=>{return text}) => {\r\n    let searchInput;\r\n    let searchText = '';\r\n    let searchedColumn = '';\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        searchText = selectedKeys[0];\r\n        searchedColumn = dataIndex;\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        searchText = '';\r\n    };\r\n\r\n    return {\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        searchInput = node;\r\n                    }}\r\n                    placeholder={placeholder}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Найти\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Сброс\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: (text, record) =>\r\n            searchedColumn === dataIndex ? (\r\n                render(<Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />, record)\r\n            ) : (\r\n                render(text, record)\r\n            ),\r\n    }};\r\n\r\nexport default getColumnSearchTextProps;","import getColumnSearchTextProps from \"./getColumnSearchTextProps\";\r\nimport React from \"react\";\r\nimport {Tooltip} from \"antd\";\r\n\r\nlet withoutWordWrap = (minWidth = 10) =>{\r\n    return text =>\r\n        <div style={{ whiteSpace:'pre',overflow: 'hidden', minWidth: minWidth -16, textOverflow: 'ellipsis'}}>{text}</div>\r\n}\r\nlet withoutWordWrapWithTooltip = (minWidth = 10) =>{\r\n    return text =>\r\n        <Tooltip title={text} color={'grey'}>\r\n            <div style={{ whiteSpace:'pre',overflow: 'hidden', minWidth: minWidth -16, textOverflow: 'ellipsis'}}>{text}</div>\r\n        </Tooltip>\r\n}\r\n\r\n\r\nlet test1 = ({title, dataIndex,  width,  render = (text) => {return text}, filters, onFilter,type, tooltip, children, ...object }) => {\r\n    if (children) {\r\n        return {title, dataIndex,  width,  render, filters, onFilter,type, tooltip, children, ...object };\r\n    }\r\n    let textRender = withoutWordWrap;\r\n    if (tooltip) {\r\n        textRender = withoutWordWrapWithTooltip;\r\n    }\r\n\r\n    const getProps = (type) => {\r\n        switch (type) {\r\n            case 'search':\r\n                return getColumnSearchTextProps(dataIndex, title, (text, record)=>{ return textRender(width)(render(text, record))})\r\n            case 'filter':\r\n                return {\r\n\r\n                }\r\n            default:\r\n                return {\r\n                    render : (text, record)=>{return textRender(width)(render(text, record))}\r\n                }\r\n        }\r\n    }\r\n    return {\r\n        title: withoutWordWrap(width)(title),\r\n        dataIndex,\r\n        width,\r\n        filters,\r\n        onFilter,\r\n        ...object,\r\n        ...getProps(type)\r\n    }\r\n}\r\n\r\nconst test = (columns) => {\r\n\r\n    return columns.map((object)=>{\r\n        return test1(object)\r\n    })\r\n};\r\n\r\nexport default test;","import {\r\n    DeleteOutlined,\r\n    QuestionCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Col, Form, Input, Popconfirm, Row, Tree, Divider, Checkbox, Tag, Transfer, Empty } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {handlerMutation, handlerQuery, useUser} from '../../../core/functions';\r\nimport ModalInsert from '../../../core/modal/ModalInsert';\r\nimport ModalUpdate from '../../../core/modal/ModalUpdate';\r\nimport TitleMenu from '../../../core/TitleMenu';\r\nimport TableContainer from \"../../../core/TableContainer\";\r\nimport test from \"../../../core/functions/test\";\r\n\r\nconst modalFormWidth=650;\r\n\r\n//конфигуратор запросов graphql\r\nlet users = {\r\n    exemplar: 'user',\r\n    table: 'users',\r\n    options: {\r\n        all: {\r\n            variables: {\r\n                users: { global: { ORDER_BY: ['username asc'] } }\r\n            },\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    password\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n    },\r\n    insert: gql`\r\n        mutation insertUser($user: JSON) {\r\n            insertUser(user: $user) {\r\n                message\r\n                type\r\n            }\r\n        }\r\n    `,\r\n    update: gql`\r\n        mutation updateUser($user: JSON) {\r\n            updateUser(user: $user) {\r\n                message\r\n                type\r\n            }\r\n        }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteUser($user: JSON) {\r\n            deleteUser(user: $user) {\r\n                message\r\n                type\r\n            }\r\n        }\r\n    `\r\n\r\n}\r\n\r\nlet positions = {\r\n    exemplar: 'positions',\r\n    table: 'positions',\r\n    options: {\r\n        all: {\r\n            /*variables: {\r\n               controller_addresses: { global: {ORDER_BY: ['id DESC']}}\r\n           },*/\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query positions ($positions: JSON) {\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query positions($positions: JSON) {\r\n                positions(positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription positions ($positions: JSON){\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    },\r\n    insert: gql`\r\n        mutation insertPosition($positions: JSON) {\r\n            insertPosition(positions: $positions){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n    update: gql`\r\n        mutation updatetPosition($positions: JSON) {\r\n            updatetPosition(positions: $positions){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n    delete: gql`\r\n        mutation deletePosition($positions: JSON) {\r\n            deletePosition(positions: $positions){\r\n                message\r\n            }\r\n        }\r\n    `\r\n}\r\n\r\n//регистрация\r\nlet UsersPage = React.memo((props) => {\r\n    let user = useUser();\r\n    const visibleModalUpdate = useState(false);\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(users.delete))();\r\n\r\n\r\n    const { loading, data, refetch } = handlerQuery(users, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const { loading:loadingPositions, data:positionsData, refetch:refetchPositions } = handlerQuery(positions, 'all')();\r\n    useEffect(() => { refetchPositions() }, []);\r\n\r\n    //Лист выдачи данных\r\n    let list = (data && data.users != null) ? data.users.map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            username: item.username,\r\n            access: item.admin ? 'АДМИНИСТРАТОР' : 'ПОЛЬЗОВАТЕЛЬ',\r\n            positions: item.positions,\r\n            fio: item.fio,\r\n            email: item.email,\r\n            positionName: positionsData.positions.filter(e => e.id == item.positions).map(obj => obj.name)[0]\r\n        }\r\n    }) : [];\r\n    //console.log('list', list)\r\n    //console.log('positionsData', positionsData)\r\n    //Шапка таблицы\r\n    let dict = test([\r\n        {\r\n            title: 'Логин',\r\n            dataIndex: 'username',\r\n            width: 100, tooltip: true\r\n        }, {\r\n            title: 'Роль',\r\n            dataIndex: 'access',\r\n            align: 'center',\r\n            width: 100, render:(text, record)=>{\r\n                switch (record.access) {\r\n                    case 'АДМИНИСТРАТОР':\r\n                        return <Tag color='green'>{text}</Tag>\r\n                    case 'ПОЛЬЗОВАТЕЛЬ':\r\n                        return <Tag color='geekblue'>{text}</Tag>\r\n                    default:\r\n                        return text\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Должность',\r\n            dataIndex: 'positionName',\r\n            width: 150, tooltip: true\r\n        },\r\n    ]);\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            title='Редактирование пользователя'\r\n            buttons={[\r\n                <ModalInsert title='Добавление пользователя' GQL={users} InsertForm={WorkersWorkerdForm} width={modalFormWidth}/>,\r\n                <ModalUpdate visibleModalUpdate={visibleModalUpdate} title='Редактирование пользователя' width={modalFormWidth}\r\n                    selectedRowKeys={tableProps.selectedRowKeys} GQL={users} UpdateForm={WorkersWorkerdForm} update={true} width={700} />,\r\n                <Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => {let variables = {}; variables[users.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username:user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 1}><DeleteOutlined />Удалить</Button>\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainer\r\n            data={{ dict, records: list }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            bordered={true}\r\n        />\r\n\t)\r\n});\r\n\r\nlet WorkersWorkerdForm = React.memo((props) => {\r\n\tlet user = useUser();\r\n    const [state, setState] = useState({\r\n        username: '',\r\n        password: '',\r\n        admin: false,\r\n        accesses: [],\r\n        positions: [],\r\n        domain_username:'',\r\n        fio: '',\r\n        email:'',\r\n\t\tlog_username:user.username\r\n    });\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.users[0].id,\r\n                username: props.initialValues.users[0].username,\r\n                password: props.initialValues.users[0].password,\r\n                admin: props.initialValues.users[0].admin,\r\n                accesses: props.initialValues.users[0].accesses,\r\n                positions: props.initialValues.users[0].positions,\r\n                domain_username: props.initialValues.users[0].domain_username,\r\n                fio: props.initialValues.users[0].fio,\r\n                email: props.initialValues.users[0].email,\r\n\t\t\t\tlog_username:user.username\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log(values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"WorkersWorkerdForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <Row justify=\"center\">\r\n                <Col flex=\"auto\" >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        label= 'Имя пользователя'\r\n                        labelCol={{ span: 24 }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input disabled={props.disabled} placeholder=\"Имя пользователя\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"domain_username\"\r\n                        label= 'Логин домена'\r\n                        labelCol={{ span: 24 }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input disabled={props.disabled} placeholder=\"Логин домена\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label='Электронная почта для извещений'\r\n                        labelCol={{ span: 24 }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input disabled={props.disabled} placeholder=\"Почта\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"fio\"\r\n                        label= 'Ф.И.О инициалы для подписи'\r\n                        labelCol={{ span: 24 }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input disabled={props.disabled} placeholder=\"Ф.И.О инициалы для подписи\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label= 'Пароль'\r\n                        labelCol={{ span: 24 }}\r\n                        rules={[\r\n                            {\r\n                                required: !props.initialValues,\r\n                                message: 'Необходимо для заполнения!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password disabled={props.disabled} placeholder=\"Пароль\" className=\"accountInput\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"admin\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                type: 'boolean',\r\n                            },\r\n                        ]}\r\n                        shouldUpdate\r\n\r\n                    >\r\n                        <Checkbox disabled={props.disabled}>Администратор</Checkbox>\r\n                    </Form.Item>\r\n                    {state.admin ? null : <Divider>Должности</Divider>}\r\n                    <Form.Item\r\n                        name='positions'\r\n                        rules={[\r\n                            {\r\n                                type: 'array',\r\n                                required: !state.admin,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                        hidden={state.admin}\r\n                    >\r\n                        <PositionsTransfer disabled={props.disabled}/>\r\n                    </Form.Item>\r\n\t\t\t\t\t<Form.Item\r\n                name=\"log_username\"\r\n\t\t\t\thidden={true}\r\n            >\r\n                <Input disabled={props.disabled}/>\r\n            </Form.Item>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n        </Form>\r\n    )\r\n});\r\n\r\n\r\nlet PositionsTransfer = React.memo((props) => {\r\n\r\n    const modalFormWidth = 650;\r\n\r\n    const { loading, data, refetch } = handlerQuery(positions, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [selectedKeys, setSelectedKeys] = useState([]);\r\n    let handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n        props.onChange(nextTargetKeys);\r\n    };\r\n\r\n    let handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n        setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n        console.log(selectedKeys);\r\n    };\r\n\r\n    let filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\r\n\r\n    let mockData = []\r\n    if (!loading) {\r\n        mockData = data.positions.map((item) => {\r\n            return {\r\n                id: item.id,\r\n                key: item.id,\r\n                title: item.name,\r\n                description: item.name\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Transfer\r\n                dataSource={mockData}\r\n                showSearch={true}\r\n                titles={['Все', 'Выбранные']}\r\n                targetKeys={props.value ? props.value : []}\r\n                selectedKeys={selectedKeys}\r\n                onChange={handleChange}\r\n                showSelectAll={false}\r\n                onSelectChange={handleSelectChange}\r\n                render={item => item.title}\r\n                listStyle={{ width: modalFormWidth / 2.2 }}\r\n                style={{ marginBottom: 16 }}\r\n\r\n                filterOption={filterOption}\r\n\r\n                locale={{\r\n                    itemUnit: \"\",\r\n                    itemsUnit: \"\",\r\n                    notFoundContent: <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Нет данных\" />,\r\n                    searchPlaceholder: \"Статус\"\r\n                }}\r\n                disabled={props.disabled}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nlet MyTree = React.memo((props) => {\r\n\r\n    const [autoExpandParent, setAutoExpandParent] = useState(true);\r\n    const [expandedKeys, setExpandedKeys] = useState([]);\r\n\r\n    const treeData = [\r\n        {\r\n            title: \"Входящие\",\r\n            key: \"/document-control-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/document-control-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/document-control-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/document-control-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/document-control-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/document-control-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/document-control-p/item-status-change\"\r\n                },\r\n            ]\r\n                },\r\n        {\r\n            title: \"Отчеты\",\r\n            key: \"/document-report-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/document-report-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/document-report-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/document-report-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/document-report-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/document-report-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/document-report-p/item-status-change\"\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            title: \"История\",\r\n            key: \"/document-hitory-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/document-hitory-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/document-hitory-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/document-hitory-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/document-hitory-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/document-hitory-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/document-hitory-p/item-status-change\"\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            title: \"Поиск\",\r\n            key: \"/document-search-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/document-search-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/document-search-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/document-search-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/document-search-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/document-search-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/document-search-p/item-status-change\"\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            title: \"Администрация\",\r\n            key: \"/admin-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/admin-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/admin-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/admin-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/admin-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/admin-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/admin-p/item-status-change\"\r\n                },\r\n            ]\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n        <Tree\r\n            checkable\r\n            onExpand={(expandedKeys) => {\r\n                    setExpandedKeys(expandedKeys);\r\n                    setAutoExpandParent(false);\r\n            }}\r\n            expandedKeys={expandedKeys}\r\n            autoExpandParent={autoExpandParent}\r\n            onCheck={(values) => { props.onChange(values) }}\r\n            checkedKeys={props.value }\r\n            treeData={treeData}\r\n            disabled={props.disabled}\r\n        />\r\n        );\r\n});\r\n\r\nexport default UsersPage;","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Form, Input, Popconfirm } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../core/functions';\r\nimport ModalInsert from '../../../core/modal/ModalInsert';\r\nimport ModalUpdate from '../../../core/modal/ModalUpdate';\r\nimport TableContainer from '../../../core/TableContainer';\r\nimport TitleMenu from '../../../core/TitleMenu';\r\nimport test from \"../../../core/functions/test\";\r\n\r\nlet document_statuses = {\r\n    exemplar: 'document_statuses',\r\n    table: 'document_statuses',\r\n    options: {\r\n        all: {\r\n\t\t\t /*variables: {\r\n                controller_addresses: { global: {ORDER_BY: ['id DESC']}}\r\n            },*/\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query document_statuses ($document_statuses: JSON) {\r\n                document_statuses (document_statuses: $document_statuses) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query document_statuses($document_statuses: JSON) {\r\n                document_statuses(document_statuses: $document_statuses) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription document_statuses ($document_statuses: JSON){\r\n                document_statuses (document_statuses: $document_statuses) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    },\r\n    insert: gql`\r\n        mutation insertDocumentStatus($document_statuses: JSON) {\r\n            insertDocumentStatus(document_statuses: $document_statuses){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n    update: gql`\r\n        mutation updateDocumentStatus($document_statuses: JSON) {\r\n            updateDocumentStatus(document_statuses: $document_statuses){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n\tdelete: gql`\r\n        mutation deleteDocumentStatus($document_statuses: JSON) {\r\n            deleteDocumentStatus(document_statuses: $document_statuses){\r\n                message\r\n            }\r\n        }\r\n    `\r\n}\r\n\r\n\r\nlet DocumentStatusesPage = React.memo((props) => {\r\n\tlet user = useUser();\r\n    const visibleModalUpdate = useState(false);\r\n\t\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(document_statuses.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(document_statuses, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            name: item.name\r\n        }\r\n    }) : [];\r\n    let dict = test([\r\n        { title: 'ID', dataIndex: 'id', width: '15px', type:'search', tooltip: true },\r\n        { title: 'Название', dataIndex: 'name', width: '150px', type:'search', tooltip: true }\r\n    ]);\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            title='Редактирование статусов документов'\r\n            buttons={[\r\n                <ModalInsert title='Добавление статуса' GQL={document_statuses} InsertForm={DocumentStatusesForm} />,\r\n                <ModalUpdate visibleModalUpdate={visibleModalUpdate} title='Редактирование статуса' selectedRowKeys={tableProps.selectedRowKeys} GQL={document_statuses} UpdateForm={DocumentStatusesForm} update={true} />,\r\n\t\t\t\t<Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[document_statuses.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 1}><DeleteOutlined />Удалить</Button>\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainer\r\n            data={{ dict, records: list }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n        />\r\n    )\r\n});\r\n\r\nlet DocumentStatusesForm = React.memo((props) => {\r\n\tlet user = useUser();\r\n  const [state, setState] = useState({\r\n\t\tisuseforreport:false,\r\n\t\tlog_username:user.username\r\n    });\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_statuses[0].id,\r\n                name: props.initialValues.document_statuses[0].name,\r\n\t\t\t    log_username:state.log_username\r\n\t\t\t});\r\n\t\t}\r\n    }, [props.initialValues]);\r\n\t\r\n\tlet onFinish = (values) => {\r\n        props.onFinish(state)\r\n    }\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentStatusesForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n            \r\n        >\r\n            <Form.Item\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Название статуса документа\" />\r\n            </Form.Item>\r\n\t\t\t<Form.Item\r\n                name=\"log_username\"\r\n\t\t\t\thidden={true}\r\n            >\r\n                <Input disabled={props.disabled}/>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default DocumentStatusesPage;","import { CloseOutlined } from '@ant-design/icons';\r\nimport { Button, Select, Row, Col } from 'antd';\r\nimport React, { useEffect } from 'react';\r\nimport { handlerQuery } from './functions';\r\n\r\nlet IndependentSelect = React.memo(({ query, placeholder, clear, ...props }) => {\r\n    const { loading, data, refetch } = handlerQuery(query, 'all')();\r\n    useEffect(() => { refetch() }, [])\r\n\r\n    //make sure below the select value are the same from DB (i.e. int==int, bigint==bigint)\r\n    \r\n    return (\r\n        <Row justify='space-between'>\r\n            <Col flex='auto'>\r\n                <Select\r\n                    style={clear ? { width: 100 + \"%\" } : null}\r\n                    placeholder={placeholder}\r\n\r\n                    loading={loading}\r\n                    showSearch\r\n                    optionFilterProp=\"children\"\r\n                    filterOption\r\n                    {...props}\r\n                >\r\n\t\t\t\t\t<Select.Option key={null} value={null}></Select.Option>\r\n                    {data ? data[Object.keys(data)[0]].map((item) => {\r\n                        return (\r\n                            <Select.Option key={item.id} value={item.id}>\r\n                                {item[Object.keys(item).filter((field) => {\r\n                                    return (field !== 'id' && field !== '__typename')\r\n                                })[0]]}\r\n                            </Select.Option>)\r\n                    }) : []}\r\n                </Select>\r\n            </Col>\r\n\r\n            {clear ? <Col><Button style={{padding: 5}} type='dashed' onClick={() => { props.onChange(null) }}><CloseOutlined /></Button></Col> : null}\r\n        </Row>\r\n    )\r\n});\r\n\r\nexport default IndependentSelect;","import { DeleteOutlined, QuestionCircleOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Form, Input, Popconfirm, Transfer, Empty, Space, Checkbox, Row, Col } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../core/functions';\r\nimport ModalInsert from '../../../core/modal/ModalInsert';\r\nimport ModalUpdate from '../../../core/modal/ModalUpdate';\r\nimport IndependentSelect from '../../../core/IndependentSelect';\r\nimport TableContainer from '../../../core/TableContainer';\r\nimport TitleMenu from '../../../core/TitleMenu';\r\nimport test from \"../../../core/functions/test\";\r\n\r\n\r\nimport { ArrowRightOutlined, FormOutlined, CloseSquareOutlined } from '@ant-design/icons';  //quick actions panel icon\r\n\r\nlet document_routes = {\r\n    exemplar: 'document_routes',\r\n    table: 'document_routes',\r\n    options: {\r\n        all: {\r\n            /*variables: {\r\n               controller_addresses: { global: {ORDER_BY: ['id DESC']}}\r\n           },*/\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query document_routes ($document_routes: JSON) {\r\n                document_routes (document_routes: $document_routes) {\r\n                    id\r\n                    name\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                    routes\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query document_routes($document_routes: JSON) {\r\n                document_routes(document_routes: $document_routes) {\r\n                    id\r\n                    name\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                    routes\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription document_routes ($document_routes: JSON){\r\n                document_routes (document_routes: $document_routes) {\r\n                    id\r\n                    name\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                    routes\r\n                }\r\n            }\r\n        `\r\n    },\r\n    insert: gql`\r\n        mutation insertDocumentRoute($document_routes: JSON) {\r\n            insertDocumentRoute(document_routes: $document_routes){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n    update: gql`\r\n        mutation updateDocumentRoute($document_routes: JSON) {\r\n            updateDocumentRoute(document_routes: $document_routes){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteDocumentRoute($document_routes: JSON) {\r\n            deleteDocumentRoute(document_routes: $document_routes){\r\n                message\r\n            }\r\n        }\r\n    `\r\n};\r\n\r\nlet document_statuses = {\r\n    exemplar: 'document_statuses',\r\n    table: 'document_statuses',\r\n    options: {\r\n        all: {\r\n            fetchPolicy: 'cache-only'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query document_statuses ($document_statuses: JSON) {\r\n                document_statuses (document_statuses: $document_statuses) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription document_statuses ($document_statuses: JSON){\r\n                document_statuses (document_statuses: $document_statuses) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    }\r\n};\r\n\r\nlet positions = {\r\n    exemplar: 'positions',\r\n    table: 'positions',\r\n    options: {\r\n        all: {\r\n            /*variables: {\r\n               controller_addresses: { global: {ORDER_BY: ['id DESC']}}\r\n           },*/\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query positions ($positions: JSON) {\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query positions($positions: JSON) {\r\n                positions(positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription positions ($positions: JSON){\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    }\r\n}\r\n\r\nlet DocumentRoutesPage = React.memo((props) => {\r\n\tlet user = useUser();\r\n    const visibleModalUpdate = useState(false);\r\n\t\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(document_routes.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(document_routes, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            name: item.name\r\n        }\r\n    }) : [];\r\n    let dict = test([\r\n        { title: 'ID', dataIndex: 'id', width: '15px', type:'search', tooltip: true },\r\n        { title: 'Название', dataIndex: 'name', width: '150px', type:'search', tooltip: true }\r\n    ]);\r\n    \r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            title='Редактирование маршрутов документа'\r\n            buttons={[\r\n                <ModalInsert title='Добавление маршрута' GQL={document_routes} InsertForm={DocumentRoutesForm} width={750} />,\r\n                <ModalUpdate visibleModalUpdate={visibleModalUpdate} title='Редактирование маршрута' selectedRowKeys={tableProps.selectedRowKeys}\r\n                    GQL={document_routes} UpdateForm={DocumentRoutesForm} update={true} width={750} />,\r\n\t\t\t\t<Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[document_routes.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 1}><DeleteOutlined />Удалить</Button>\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <TableContainer\r\n            data={{ dict, records: list }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            />\r\n        </>\r\n    )\r\n});\r\n\r\nlet DocumentRoutesForm = React.memo((props) => {\r\n    let user = useUser();\r\n    const panelAddButton = useRef();\r\n  const [state, setState] = useState({\r\n\t\tisuseforreport:false,\r\n\t\tlog_username:user.username\r\n    });\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state); console.log('props top',state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_routes[0].id,\r\n                name: props.initialValues.document_routes[0].name,\r\n                status_in_process: props.initialValues.document_routes[0].status_in_process,\r\n                status_cancelled: props.initialValues.document_routes[0].status_cancelled,\r\n                status_finished: props.initialValues.document_routes[0].status_finished,\r\n                routes: props.initialValues.document_routes[0].routes,\r\n\t\t\t    log_username:state.log_username\r\n            });\r\n            //console.log('props.initialValues routes',props.initialValues)\r\n\t\t}\r\n    }, [props.initialValues]);\r\n\t\r\n\tlet onFinish = (values) => {\r\n        props.onFinish(state)\r\n        //console.log('-------------------------------------------', values);\r\n        //console.log('===========================================', state);\r\n    }\r\n    return (\r\n        <>\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentRoutesForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <Form.Item\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Название маршрута документа\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_in_process\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <IndependentSelect disabled={props.disabled} placeholder=\"Статус в процессе\" title=\"Статус в процессе\" query={document_statuses} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_cancelled\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <IndependentSelect disabled={props.disabled} placeholder=\"Статус - отклонён\" title=\"Статус - отклонён\" query={document_statuses} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_finished\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <IndependentSelect disabled={props.disabled} placeholder=\"Статус - завершён\" title=\"Статус - завершён\" query={document_statuses} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n                <Input disabled={props.disabled} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.List name=\"routes\">\r\n                {(fields, { add, remove }) => (\r\n                    <>\r\n                        {fields.map((field) => (\r\n                            <Space\r\n                                key={field.key}\r\n                                style={{ display: \"flex\", marginBottom: 40 }}\r\n                                align=\"baseline\"\r\n                            >\r\n                                <Row gutter={20}>\r\n                                    <Col span={24}>\r\n                                        Участник №: <b>{field.name + 1}</b>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            name={[field.name, \"positionId\"]}\r\n                                            fieldKey={[field.fieldKey, \"positionId\"]}\r\n                                        >\r\n                                            <IndependentSelect\r\n                                                disabled={props.disabled}\r\n                                                placeholder=\"Должность\"\r\n                                                title=\"Должность\"\r\n                                                query={positions}\r\n                                                onChange={(value, LabeledValue) => {\r\n                                                    //console.log('setFieldsValue', fields)\r\n                                                    setState(prevState => {\r\n                                                        let old = Object.assign({}, prevState);\r\n                                                        console.log('field.fieldKey',field.fieldKey)\r\n                                                        old.routes[field.name].positionName = LabeledValue.children;\r\n                                                        old.routes[field.name].step = field.name+1;\r\n                                                        return old\r\n                                                    })\r\n                                                    //console.log('setFieldsValue value', value, LabeledValue)\r\n                                                    //console.log('setFieldsValue state', state)\r\n                                                    //console.log('setFieldsValue initialValues', props.initialValues)\r\n                                                }} />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            name={[field.name, \"step\"]}\r\n                                            fieldKey={[field.fieldKey, \"step\"]}\r\n                                            hidden={true}\r\n                                        >\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            name={[field.name, \"positionName\"]}\r\n                                            fieldKey={[field.fieldKey, \"positionName\"]}\r\n                                            hidden={true}\r\n                                        >\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            name={[field.name, \"isExecutor\"]}\r\n                                            fieldKey={[field.fieldKey, \"isExecutor\"]}\r\n                                            valuePropName=\"checked\"\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'boolean',\r\n                                                    required: false,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Checkbox disabled={props.disabled}>Исполнитель?</Checkbox>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label=\"Выбранные статусы:\"\r\n                                            name={[field.name, \"statuses\"]}\r\n                                            fieldKey={[field.fieldKey, \"statuses\"]}\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'array',\r\n                                                    required: false,\r\n                                                    message: 'Необходимо выбрать хотябы одну!'\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <DocumentStatusesTransfer disabled={props.disabled} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label=\"Заменяющие лица:\"\r\n                                            name={[field.name, \"substitutes\"]}\r\n                                            fieldKey={[field.fieldKey, \"substitutes\"]}\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'array',\r\n                                                    required: false,\r\n                                                    message: 'Необходимо выбрать хотябы одну!'\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <SubstitutesTransfer disabled={props.disabled} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <i>Убрать</i>\r\n                                        <MinusCircleOutlined onClick={() => remove(field.name)} disabled={props.disabled} style={{ marginLeft: 5 }} />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Space>\r\n                        ))}\r\n                        <Form.Item>\r\n                            <Button\r\n                                type=\"dashed\"\r\n                                onClick={() => add()}\r\n                                disabled={props.disabled}\r\n                                block\r\n                                icon={<PlusOutlined />}\r\n                                ref={panelAddButton}\r\n                            >\r\n                                Добавить участника\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </>\r\n                )}\r\n            </Form.List>\r\n            </Form>\r\n            <Row className='on-approval-from-buttons-wrap'>\r\n                <Col span={24} className='on-approval-form-buttons-container'>\r\n                    <Button\r\n                        disabled={props.disabled}\r\n                        style={{ marginRight: '5px' }}\r\n                        onClick={() => { panelAddButton.current.click() }}\r\n                        icon={<ArrowRightOutlined />} />\r\n                    <span style={{ marginRight: '5px' }}>\r\n                        {props.setViewMode ?\r\n                            <Button\r\n                                onClick={() => { props.setViewMode(false) }}\r\n                                title='Редактировать'\r\n                                icon={<FormOutlined />} />\r\n                            : <Popconfirm\r\n                                title=\"Вы уверены?\"\r\n                                onConfirm={() => { props.save() }}\r\n                                okText=\"Да\"\r\n                                cancelText=\"Нет\"\r\n                                icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                            >\r\n                                <Button\r\n                                    title='Сохранить'\r\n                                    icon={<DeleteOutlined />} />\r\n                            </Popconfirm>\r\n                            }\r\n                    </span>\r\n                    <span style={{ marginRight: '5px' }}>\r\n                        <Button\r\n                            onClick={() => { props.setVisible(false); props.setViewMode(true) }}\r\n                            title='Отмена' icon={<CloseSquareOutlined />} />\r\n                    </span>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n});\r\n\r\n\r\nlet DocumentStatusesTransfer = React.memo((props) => {\r\n\r\n    const modalFormWidth = 650;\r\n\r\n    const { loading, data, refetch } = handlerQuery(document_statuses, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [selectedKeys, setSelectedKeys] = useState([]);\r\n    let handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n        props.onChange(nextTargetKeys);\r\n    };\r\n\r\n    let handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n        setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n        console.log(selectedKeys);\r\n    };\r\n\r\n    let filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\r\n\r\n    let mockData = []\r\n    if (!loading) {\r\n        mockData = data.document_statuses.map((item) => {\r\n            return {\r\n                id: item.id,\r\n                key: item.id,\r\n                title: item.name,\r\n                description: item.name\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Transfer\r\n                dataSource={mockData}\r\n                titles={['Все', 'Выбранные']}\r\n                targetKeys={props.value ? props.value : []}\r\n                selectedKeys={selectedKeys}\r\n                onChange={handleChange}\r\n                showSelectAll={false}\r\n                onSelectChange={handleSelectChange}\r\n                render={item => item.title}\r\n                listStyle={{ width: modalFormWidth / 2.2 }}\r\n                style={{ marginBottom: 16 }}\r\n\r\n                filterOption={filterOption}\r\n\r\n                locale={{\r\n                    itemUnit: \"\",\r\n                    itemsUnit: \"\",\r\n                    notFoundContent: <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Нет данных\" />,\r\n                    searchPlaceholder: \"Статус\"\r\n                }}\r\n                disabled={props.disabled}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nlet SubstitutesTransfer = React.memo((props) => {\r\n\r\n    const modalFormWidth = 650;\r\n\r\n    const { loading, data, refetch } = handlerQuery(positions, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [selectedKeys, setSelectedKeys] = useState([]);\r\n    let handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n        props.onChange(nextTargetKeys);\r\n    };\r\n\r\n    let handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n        setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n        console.log(selectedKeys);\r\n    };\r\n\r\n    let filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\r\n\r\n    let mockData = []\r\n    if (!loading) {\r\n        mockData = data.positions.map((item) => {\r\n            return {\r\n                id: item.id,\r\n                key: item.id,\r\n                title: item.name,\r\n                description: item.name\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Transfer\r\n                dataSource={mockData}\r\n                titles={['Все', 'Выбранные']}\r\n                targetKeys={props.value ? props.value : []}\r\n                selectedKeys={selectedKeys}\r\n                onChange={handleChange}\r\n                showSelectAll={false}\r\n                onSelectChange={handleSelectChange}\r\n                render={item => item.title}\r\n                listStyle={{ width: modalFormWidth / 2.2 }}\r\n                style={{ marginBottom: 16 }}\r\n\r\n                filterOption={filterOption}\r\n\r\n                locale={{\r\n                    itemUnit: \"\",\r\n                    itemsUnit: \"\",\r\n                    notFoundContent: <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Нет данных\" />,\r\n                    searchPlaceholder: \"Позиция\"\r\n                }}\r\n                disabled={props.disabled}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nexport default DocumentRoutesPage;","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Form, Input, Popconfirm, Tree } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../core/functions';\r\nimport ModalInsert from '../../../core/modal/ModalInsert';\r\nimport ModalUpdate from '../../../core/modal/ModalUpdate';\r\nimport TableContainer from '../../../core/TableContainer';\r\nimport TitleMenu from '../../../core/TitleMenu';\r\nimport test from \"../../../core/functions/test\";\r\n\r\nlet users = {\r\n    exemplar: 'user',\r\n    table: 'users',\r\n    options: {\r\n        all: {\r\n            variables: {\r\n                users: { global: { ORDER_BY: ['username asc'] } }\r\n            },\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    password\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                }\r\n            }\r\n        `\r\n    },\r\n    insert: gql`\r\n        mutation insertUser($user: JSON) {\r\n            insertUser(user: $user) {\r\n                message\r\n                type\r\n            }\r\n        }\r\n    `,\r\n    update: gql`\r\n        mutation updateUser($user: JSON) {\r\n            updateUser(user: $user) {\r\n                message\r\n                type\r\n            }\r\n        }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteUser($user: JSON) {\r\n            deleteUser(user: $user) {\r\n                message\r\n                type\r\n            }\r\n        }\r\n    `\r\n\r\n}\r\n\r\nlet positions = {\r\n    exemplar: 'positions',\r\n    table: 'positions',\r\n    options: {\r\n        all: {\r\n            variables: {\r\n                positions: { global: { ORDER_BY: ['name asc'] } }\r\n            },\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query positions ($positions: JSON) {\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                    accesses\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query positions($positions: JSON) {\r\n                positions(positions: $positions) {\r\n                    id\r\n                    name\r\n                    accesses\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription positions ($positions: JSON){\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                    accesses\r\n                }\r\n            }\r\n        `\r\n    },\r\n    insert: gql`\r\n        mutation insertPosition($positions: JSON) {\r\n            insertPosition(positions: $positions){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n    update: gql`\r\n        mutation updatePosition($positions: JSON) {\r\n            updatePosition(positions: $positions){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n\tdelete: gql`\r\n        mutation deletePosition($positions: JSON) {\r\n            deletePosition(positions: $positions){\r\n                message\r\n            }\r\n        }\r\n    `\r\n}\r\n\r\n\r\nlet DocumentPositionsPage = React.memo((props) => {\r\n\tlet user = useUser();\r\n    const visibleModalUpdate = useState(false);\r\n\t\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(positions.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(positions, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const { loading:loadingUsers, data:usersData, refetch:refetchUsers } = handlerQuery(users, 'all')();\r\n    useEffect(() => { refetchUsers() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            name: item.name,\r\n            accesses: item.accesses,\r\n            count: usersData?.users?.filter(e => e.positions == item.id).length\r\n        }\r\n    }) : [];\r\n    //console.log('list', list, usersData)\r\n    let dict = test([\r\n        { title: 'ID', dataIndex: 'id', width: '15px', type:'search', tooltip: true },\r\n        { title: 'Название', dataIndex: 'name', width: '150px', type: 'search', tooltip: true },\r\n        { title: 'Кол-во польз.', dataIndex: 'count', width: '50px', tooltip: true }\r\n    ]);\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            title='Редактирование должностей'\r\n            buttons={[\r\n                <ModalInsert title='Добавление должности' GQL={positions} InsertForm={DocumentPositionsForm} />,\r\n                <ModalUpdate visibleModalUpdate={visibleModalUpdate} title='Редактирование должности' selectedRowKeys={tableProps.selectedRowKeys} GQL={positions} UpdateForm={DocumentPositionsForm} update={true} />,\r\n\t\t\t\t<Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[positions.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 1}><DeleteOutlined />Удалить</Button>\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainer\r\n            data={{ dict, records: list }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n        />\r\n    )\r\n});\r\n\r\nlet DocumentPositionsForm = React.memo((props) => {\r\n\tlet user = useUser();\r\n  const [state, setState] = useState({\r\n\t\tlog_username:user.username\r\n    });\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.positions[0].id,\r\n                name: props.initialValues.positions[0].name,\r\n                accesses: props.initialValues.positions[0].accesses,\r\n\t\t\t    log_username:state.log_username\r\n\t\t\t});\r\n\t\t}\r\n    }, [props.initialValues]);\r\n\t\r\n\tlet onFinish = (values) => {\r\n        props.onFinish(state)\r\n    }\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentPositionsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n            \r\n        >\r\n            <Form.Item\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Название должности\" />\r\n            </Form.Item>\r\n            <h3>Назначение доступа:</h3>\r\n            <Form.Item\r\n                name='accesses'\r\n                rules={[\r\n                    {\r\n                        type: 'array',\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!'\r\n                    },\r\n                ]}\r\n            >\r\n                <PositionsPermissionsTree disabled={props.disabled} />\r\n            </Form.Item>\r\n\t\t\t<Form.Item\r\n                name=\"log_username\"\r\n\t\t\t\thidden={true}\r\n            >\r\n                <Input disabled={props.disabled}/>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nlet PositionsPermissionsTree = React.memo((props) => {\r\n\r\n    const [autoExpandParent, setAutoExpandParent] = useState(true);\r\n    const [expandedKeys, setExpandedKeys] = useState([]);\r\n\r\n    const treeData = [\r\n        {\r\n            title: \"Договора\",\r\n            key: \"/document-control-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/document-control-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/document-control-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/document-control-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/document-control-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/document-control-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/document-control-p/item-status-change\"\r\n                },\r\n                {\r\n                    title: \"Мои договора\",\r\n                    key: \"/document-control-p/orders-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/orders-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"На доработку\",\r\n                    key: \"/document-control-p/reviseduser-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/reviseduser-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Исполненные\",\r\n                    key: \"/document-control-p/approveduser-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/approveduser-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Отклоненные\",\r\n                    key: \"/document-control-p/rejecteduser-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/rejecteduser-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"На подпись\",\r\n                    key: \"/document-control-p/on-approval-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/on-approval-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Подписанные\",\r\n                    key: \"/document-control-p/on-approval-list-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/on-approval-list-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"На исполнение\",\r\n                    key: \"/document-control-p/for-execution-inbox-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/for-execution-inbox-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Все утвеждённые\",\r\n                    key: \"/document-control-p/approved-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/approved-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Все отклоеннённые\",\r\n                    key: \"/document-control-p/rejected-p\",\r\n                    children: [\r\n                        {\r\n                            title: \"Просмотр\",\r\n                            key: \"/document-control-p/rejected-p/select\"\r\n                        }\r\n                    ]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            title: \"Отчеты\",\r\n            key: \"/document-report-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/document-report-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/document-report-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/document-report-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/document-report-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/document-report-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/document-report-p/item-status-change\"\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            title: \"История\",\r\n            key: \"/document-hitory-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/document-hitory-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/document-hitory-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/document-hitory-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/document-hitory-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/document-hitory-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/document-hitory-p/item-status-change\"\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            title: \"Поиск\",\r\n            key: \"/document-search-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/document-search-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/document-search-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/document-search-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/document-search-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/document-search-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/document-search-p/item-status-change\"\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            title: \"Администрация\",\r\n            key: \"/admin-p\",\r\n            children: [\r\n                {\r\n                    title: \"Просмотр\",\r\n                    key: \"/admin-p/select\"\r\n                },\r\n                {\r\n                    title: \"Добавление\",\r\n                    key: \"/admin-p/insert\"\r\n                },\r\n                {\r\n                    title: \"Изменение\",\r\n                    key: \"/admin-p/update\"\r\n                },\r\n                {\r\n                    title: \"Удаление\",\r\n                    key: \"/admin-p/delete\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса документа\",\r\n                    key: \"/admin-p/document-status-change\"\r\n                },\r\n                {\r\n                    title: \"Изменение статуса элементов\",\r\n                    key: \"/admin-p/item-status-change\"\r\n                },\r\n            ]\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n        <Tree\r\n            checkable\r\n            onExpand={(expandedKeys) => {\r\n                setExpandedKeys(expandedKeys);\r\n                setAutoExpandParent(false);\r\n            }}\r\n            expandedKeys={expandedKeys}\r\n            autoExpandParent={autoExpandParent}\r\n            onCheck={(values) => { props.onChange(values) }}\r\n            checkedKeys={props.value}\r\n            treeData={treeData}\r\n            disabled={props.disabled}\r\n        />\r\n    );\r\n});\r\n\r\nexport default DocumentPositionsPage;","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Form, Input, Popconfirm } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../core/functions';\r\nimport ModalInsert from '../../../core/modal/ModalInsert';\r\nimport ModalUpdate from '../../../core/modal/ModalUpdate';\r\nimport TableContainer from '../../../core/TableContainer';\r\nimport IndependentSelect from '../../../core/IndependentSelect';\r\nimport TitleMenu from '../../../core/TitleMenu';\r\nimport test from \"../../../core/functions/test\";\r\n\r\nlet forms = {\r\n    exemplar: 'forms',\r\n    table: 'forms',\r\n    options: {\r\n        all: {\r\n            /*variables: {\r\n               controller_addresses: { global: {ORDER_BY: ['id DESC']}}\r\n           },*/\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query forms ($forms: JSON) {\r\n                forms (forms: $forms) {\r\n                    id\r\n                    name\r\n                    route\r\n                    settings\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query forms($forms: JSON) {\r\n                forms(forms: $forms) {\r\n                    id\r\n                    name\r\n                    route\r\n                    settings\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription forms ($forms: JSON){\r\n                forms (forms: $forms) {\r\n                    id\r\n                    name\r\n                    route\r\n                    settings\r\n                }\r\n            }\r\n        `\r\n    },\r\n    insert: gql`\r\n        mutation insertForm($forms: JSON) {\r\n            insertForm(forms: $forms){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n    update: gql`\r\n        mutation updateForm($forms: JSON) {\r\n            updateForm(forms: $forms){\r\n                message\r\n            }\r\n        }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteForm($forms: JSON) {\r\n            deleteForm(forms: $forms){\r\n                message\r\n            }\r\n        }\r\n    `\r\n};\r\n\r\nlet document_routes = {\r\n    exemplar: 'document_routes',\r\n    table: 'document_routes',\r\n    options: {\r\n        all: {\r\n            /*variables: {\r\n               controller_addresses: { global: {ORDER_BY: ['id DESC']}}\r\n           },*/\r\n            fetchPolicy: 'cache-only'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query document_routes ($document_routes: JSON) {\r\n                document_routes (document_routes: $document_routes) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription document_routes ($document_routes: JSON){\r\n                document_routes (document_routes: $document_routes) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    }\r\n};\r\n\r\n\r\nlet FormSettingsPage = React.memo((props) => {\r\n\tlet user = useUser();\r\n    const visibleModalUpdate = useState(false);\r\n\t\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(forms.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(forms, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            name: item.name\r\n        }\r\n    }) : [];\r\n    let dict = test([\r\n        { title: 'ID', dataIndex: 'id', width: '15px', type:'search', tooltip: true },\r\n        { title: 'Название', dataIndex: 'name', width: '150px', type:'search', tooltip: true }\r\n    ]);\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            title='Редактирование настроек форм'\r\n            buttons={[\r\n                <ModalInsert title='Добавление формы' GQL={forms} InsertForm={FormSettingsForm} />,\r\n                <ModalUpdate visibleModalUpdate={visibleModalUpdate} title='Редактирование формы' selectedRowKeys={tableProps.selectedRowKeys} GQL={forms} UpdateForm={FormSettingsForm} update={true} />,\r\n\t\t\t\t<Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[forms.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 1}><DeleteOutlined />Удалить</Button>\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainer\r\n            data={{ dict, records: list }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n        />\r\n    )\r\n});\r\n\r\nlet FormSettingsForm = React.memo((props) => {\r\n\tlet user = useUser();\r\n  const [state, setState] = useState({\r\n\t\tisuseforreport:false,\r\n\t\tlog_username:user.username\r\n    });\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.forms[0].id,\r\n                name: props.initialValues.forms[0].name,\r\n                route: props.initialValues.forms[0].route,\r\n                settings: JSON.stringify(props.initialValues.forms[0].settings),\r\n\t\t\t    log_username:state.log_username\r\n\t\t\t});\r\n\t\t}\r\n    }, [props.initialValues]);\r\n\t\r\n\tlet onFinish = (values) => {\r\n        props.onFinish(state)\r\n    }\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"FormSettingsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n            \r\n        >\r\n            <Form.Item\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Название формы\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <IndependentSelect disabled={props.disabled} placeholder=\"Маршрут\" title=\"Маршрут\" query={document_routes} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"settings\"\r\n                label='Настройки'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.TextArea rows={4} disabled={props.disabled} placeholder=\"Настройки\" />\r\n            </Form.Item>\r\n\t\t\t<Form.Item\r\n                name=\"log_username\"\r\n\t\t\t\thidden={true}\r\n            >\r\n                <Input disabled={props.disabled}/>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default FormSettingsPage;","import {\r\nTeamOutlined\r\n} from '@ant-design/icons';\r\nimport {Divider, Layout, Menu} from 'antd';\r\nimport React from 'react';\r\nimport {NavLink, Redirect, Route, useLocation, withRouter} from 'react-router-dom';\r\nimport {useUser} from \"../../core/functions\";\r\nimport Header1 from \"../../core/Header1\";\r\n\r\nimport UsersPage from './pages/UsersPage';\r\nimport DocumentStatusesPage from './pages/DocumentStatusesPage';\r\nimport DocumentRoutesPage from './pages/DocumentRoutesPage';\r\nimport DocumentPositionsPage from './pages/PositionsPage';\r\nimport FormSettingsPage from './pages/FormSettingsPage';\r\n\r\n\r\n\r\nconst { Content, Sider } = Layout;\r\n//const [\r\n//    ttt,\r\n//    { loading: mutationLoading, error: mutationError, data },\r\n//] = useMutation(GET_GREETING);\r\n//useEffect(() => {\r\n//    ttt();\r\n//}, []);\r\n//console.log(mutationLoading);\r\n//console.log(mutationError);\r\n//console.log(data);\r\n\r\nlet AdminPanel = (props) => {\r\n    let {pathname} = useLocation();\r\n    let user = useUser();\r\n\r\n    let path = props.location.pathname.split('/').slice(1);\r\n    if (pathname === '/admin/' || pathname === '/admin') {\r\n        if (user.username) {\r\n            return <Redirect to='/admin/registration'/> ;\r\n        }\r\n        if (user.username) {\r\n            return <Redirect to='/admin/positions-page' />;\r\n        }\r\n        if (user.username) {\r\n            return <Redirect to='/admin/document-statuses-page'/> ;\r\n        }\r\n        if (user.username) {\r\n            return <Redirect to='/admin/document-routes-page' />;\r\n        }\r\n        if (user.username) {\r\n            return <Redirect to='/admin/forms-settings-page' />;\r\n        }\r\n    }\r\n    console.log(path, pathname);\r\n\r\n    return (\r\n        <Layout className=\"main-layout\">\r\n            <Header1 title={'Модуль Администратора'} user={user}/>\r\n            <Layout>\r\n                <Sider theme=\"dark\"\r\n                       breakpoint=\"lg\"\r\n                       collapsedWidth=\"0\"\r\n                       className='ant-layout-sider'\r\n                >\r\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={pathname} style={{height:'100%'}}  className=\"adminSider\">\r\n                        <Divider style={{position:'absolute', margin: 0, top: 0}}/>\r\n                        <Menu.Item style={{marginTop: 2, marginBottom: 2}} key=\"/admin/registration\" icon={<TeamOutlined />}><NavLink to=\"/admin/registration\">Пользователи</NavLink></Menu.Item>\r\n                        <Divider style={{ margin: 0 }} />\r\n                        <Menu.Item style={{ marginTop: 2, marginBottom: 2 }} key=\"/admin/positions-page\" icon={<TeamOutlined />}><NavLink to=\"/admin/positions-page\">Должности</NavLink></Menu.Item>\r\n                        <Divider style={{ margin: 0 }} />\r\n                        <Menu.Item style={{ marginTop: 2, marginBottom: 2 }} key=\"/admin/document-statuses-page\" icon={<TeamOutlined />}><NavLink to=\"/admin/document-statuses-page\">Статусы документов</NavLink></Menu.Item>\r\n                        <Divider style={{ margin: 0 }} />\r\n                        <Menu.Item style={{ marginTop: 2, marginBottom: 2 }} key=\"/admin/document-routes-page\" icon={<TeamOutlined />}><NavLink to=\"/admin/document-routes-page\">Маршруты документов</NavLink></Menu.Item>\r\n                        <Divider style={{ margin: 0 }} />\r\n                        <Menu.Item style={{ marginTop: 2, marginBottom: 2 }} key=\"/admin/forms-settings-page\" icon={<TeamOutlined />}><NavLink to=\"/admin/forms-settings-page\">Настройки форм</NavLink></Menu.Item>\r\n                        <Divider style={{ margin: 0 }} />\r\n                        <Divider style={{position:'absolute', margin: 0, bottom: 0}}/>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout className=\"content-layout\">\r\n                <Content>\r\n                    <div className=\"site-layout-background\" style={{ minHeight: 360 }}>\r\n                            <Route path=\"/admin/registration\" component={UsersPage} />\r\n                            <Route path=\"/admin/positions-page\" component={DocumentPositionsPage} />\r\n                            <Route path=\"/admin/document-statuses-page\" component={DocumentStatusesPage} />\r\n                            <Route path=\"/admin/document-routes-page\" component={DocumentRoutesPage} />\r\n                            <Route path=\"/admin/forms-settings-page\" component={FormSettingsPage} />\r\n                    </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withRouter(AdminPanel);","import {\r\nEyeInvisibleOutlined, EyeTwoTone\r\n} from '@ant-design/icons';\r\n\r\nimport { gql, useMutation, useQuery } from '@apollo/client';\r\nimport { Divider,\r\nInput,\r\nLayout,\r\nButton,\r\nSpace,\r\nnotification,\r\nStatistic} from 'antd';\r\nimport Header1 from \"../../core/Header1\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport {useUser} from '../../core/functions';\r\n\r\nconst { Sider, Content} = Layout;\r\n\r\n//конфигуратор запросов graphql\r\n\r\nconst updateUserPassword = gql`\r\n  mutation updatePassword(\r\n    $username: String\r\n    $password: String\r\n  ) {\r\n    updatePassword(username: $username, password: $password) {\r\n\t  username\r\n      password\r\n\t  \r\n    }\r\n  }\r\n`;\r\n\r\nconst versionCheck = gql`\r\n\tquery application($application: JSON){\r\n  application(application: $application){\r\n    platform_version,\r\n    database_version\r\n  }\r\n}`; \r\n\r\nlet Account = React.memo((props) => {\r\n\tconst [password, setPassword] = useState();\r\n\tconst [password2, setPassword2] = useState();\r\n\tconst [oldpassword, setOldPassword] = useState(\"1447\");\r\n\tconst [load, setLoad] = useState();\r\n\t\r\n\tconst getUser = useUser();\r\n\tconst username=getUser.username;\t\r\n\r\n    const [dataPassword, { loading:loadingMutation, error:errorMutation }] = useMutation(updateUserPassword, {\r\n\t\tonCompleted: (data) => console.log(\"Data from mutation\", data),\r\n\t\tonError: (error) => console.error(\"Error creating a post\", error)\r\n\t});\r\n\t\r\n\tconst { loading, data:versionData, refetch } = useQuery(versionCheck);\r\n\r\n\t        useEffect(() => {\r\n            if (!loadingMutation) {\r\n                if (errorMutation) {\r\n                    notification['error']({ message: (error) => error, duration: 0, placement: 'topLeft'  })\r\n                }\r\n            }\r\n        }, [errorMutation]);\r\n\t\t\r\n\t\tuseEffect(() => {\r\n            if (!loadingMutation) {\r\n                if (load===\"0\") {\r\n                    notification['info']({ message: \"Пароль изменён\", duration: 0, placement: 'topLeft'  });\r\n\t\t\t\t\tsetLoad(\"1\");\r\n\t\t\t\t\tconsole.log(load);\r\n                }\r\n            }\r\n        }, [(data)=>data,load]);\r\n\t\r\n  \r\n  \tlet handlerPasswordChange = () => {\r\n\t\tif (password===password2 && password.length>0 && password2.length>0) {\r\n\t\t\tsetLoad(\"0\");\r\n    dataPassword({ variables: { username,password} });\r\n\t\t}\r\n\t\telse {\r\n\t\tnotification['error']({ message: \"Пароли не совпадают или не введены\", duration: 0, placement: 'topLeft'  })\r\n\t\t}\r\n  }\r\n  \r\n   \tlet handlerInput1 = (e) => {\r\n    setPassword(e.target.value);\r\n\tconsole.log(password)\r\n  }\r\n  \r\n   \tlet handlerInput2 = (e) => {\r\n\tsetPassword2(e.target.value)\r\n\tconsole.log(password2)\r\n  }\r\n  \r\n    let handlerInput3 = (e) => {\r\n\tsetOldPassword(e.target.value)\r\n\tconsole.log(oldpassword)\r\n  }\r\n  \r\n    return (\r\n\t\t\t<>\r\n            <Layout>\r\n                <Header1 title={'Аккаунт'} user={getUser}/>\r\n                <Layout>\r\n                    <Sider theme=\"dark\" style={{color:\"#fff\"}}\r\n                    >\r\n                        <Divider style={{margin: '0 0 7px 0', top: 0}}/>\r\n\t\t\t\t\t\t<h1 style={{color:\"#fff\"}}>Настройки аккаунта</h1>\r\n\t\t\t\t\t\t<Statistic title=\"Версия платформы\" value={(versionData && versionData.application && versionData.application[0]!=null) ? versionData.application[0].platform_version :null}/>\r\n\t\t\t\t\t\t<Statistic title=\"Версия БД\" value={(versionData && versionData.application && versionData.application[0]!=null) ? versionData.application[0].database_version :null}/>\r\n\t\t\t\t\t\t</Sider>\r\n\t\t\t\t\t\t<Content>\r\n\t\t\t\t\t\t<Space direction=\"vertical\">\t\r\n\t\t\t\t\t\t<h1> Функция смены пароля </h1>\t\t\t\t\t \r\n\t\t\t\t\t\t<h1> Введите новый пароль 2 раза </h1>\t\t\t\t\t \r\n\t\t\t\t\t\t\t<Input.Password placeholder=\"Введите новый пароль\" value={password} onChange={handlerInput1} className=\"accountInput\" iconRender={visible => (visible ? <EyeTwoTone className='accountEyeTwoTone' style={{color:\"#2C3E50\" }}/> : <EyeInvisibleOutlined className='accountEyeTwoTone' style={{color:\"#2C3E50\" }}/>)}/>\r\n\t\t\t\t\t\t\t<Input.Password onChange={handlerInput2} value={password2}\r\n\t\t\t\t\t\t\t  placeholder=\"Введите новый пароль\"\r\n\t\t\t\t\t\t\t  iconRender={visible => (visible ? <EyeTwoTone className='accountEyeTwoTone' style={{color:\"#2C3E50\" }}/> : <EyeInvisibleOutlined className='accountEyeTwoTone' style={{color:\"#2C3E50\" }}/>)}\r\n\t\t\t\t\t\t\t  className=\"accountInput\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button onClick={handlerPasswordChange}>Сменить пароль</Button>\r\n\t\t\t\t\t\t  </Space>\r\n\t\t\t\t\t   \r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n\t)\r\n});\r\n\r\n\r\nexport default Account;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Menu, Layout, Badge\r\n} from 'antd';\r\nimport {\r\n    DatabaseOutlined,\r\n    CarryOutOutlined,\r\n    SafetyCertificateOutlined\r\n} from '@ant-design/icons';\r\nimport { gql, useQuery,useSubscription } from '@apollo/client';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useUser, notifyMe, sendAgentNotification } from '../../core/functions';\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n//import { Context } from \"../../core/Context\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nlet SiderMenu = (props) => {\r\n    const location = useLocation()\r\n    const user = useUser();\r\n    const { pathname } = location\r\n\r\n    const [collapsedState, setCollapsedState] = useState(false);\r\n\r\n    const [con, setCon] = useState({ t1: 2, t2: 3, t3: 3 });\r\n    const [con1, setCon1] = useState({});\r\n\r\n\r\n    //subscription try\r\n    const testLogs = gql`\r\n\tquery document_logs($document_logs: JSON){\r\n        document_logs(document_logs: $document_logs){\r\n            id\r\n            document_id\r\n            is_read\r\n            user_id\r\n            type\r\n        }\r\n    }`;\r\n    let testSub = gql`\r\n        subscription document_logs ($document_logs: JSON){\r\n            document_logs(document_logs: $document_logs){\r\n                id\r\n                document_id\r\n                is_read\r\n                user_id\r\n                type\r\n            }\r\n        }`;\r\n\r\n    //tasks logs gql\r\n    const tasksLogs = gql`\r\n\tquery document_tasks_logs($document_tasks_logs: JSON){\r\n        document_tasks_logs(document_tasks_logs: $document_tasks_logs){\r\n            id\r\n            task_id\r\n            is_read\r\n            user_id\r\n            type\r\n        }\r\n    }`;\r\n    let tasksSub = gql`\r\n        subscription document_tasks_logs ($document_tasks_logs: JSON){\r\n            document_tasks_logs(document_tasks_logs: $document_tasks_logs){\r\n                id\r\n                task_id\r\n                is_read\r\n                user_id\r\n                type\r\n            }\r\n        }`;\r\n\r\n    const { loading, data, refetch } = useQuery(testLogs, {\r\n        variables: { document_logs: { global: { is_read: '=false', user_id: '=' + user.id, ORDER_BY: ['date'] } } },\r\n        onCompleted: (data) => {\r\n            let subData = {};\r\n            subData.revised = data.document_logs.filter(el => { return el.type == 4 && el.is_read == false }).length;\r\n            subData.approved = data.document_logs.filter(el => { return el.type == 1 && el.is_read == false }).length;\r\n            subData.rejected = data.document_logs.filter(el => { return el.type == 3 && el.is_read == false }).length;\r\n            subData.onaproval = data.document_logs.filter(el => { return el.type == 2 && el.is_read == false }).length;\r\n            setCon(subData);\r\n        }\r\n    });\r\n\r\n    const {data:countData,loading:countLoading} = useSubscription(testSub, {\r\n            variables: { document_logs: { global: { is_read: '=false', user_id:'='+user.id, ORDER_BY: ['date'] } } },\r\n            onSubscriptionData: ({ subscriptionData: { data } }) => {\r\n                let subData = {};\r\n                subData.revised = data.document_logs.filter(el => { return el.type == 4 && el.is_read==false}).length;\r\n                subData.approved = data.document_logs.filter(el => { return el.type == 1 && el.is_read == false }).length;\r\n                subData.rejected = data.document_logs.filter(el => { return el.type == 3 && el.is_read == false }).length;\r\n                subData.onaproval = data.document_logs.filter(el => { return el.type == 2 && el.is_read == false }).length;\r\n                //console.log('testSub', data);\r\n                //console.log('testSub2', subData);\r\n                setCon(subData);\r\n                if (subData.revised > 0 || subData.approved > 0 || subData.rejected > 0 || subData.onaproval > 0) {\r\n                    //sendAgentNotification(user.email);\r\n                    notifyMe('Есть новые входящие сообщения.');\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        (() => {\r\n            props.countF(setCon);\r\n            console.log('setCon applied')\r\n        })();\r\n    }, []);\r\n\r\n    //tasks logs part\r\n    const { loading: taskLoading, data: taskData, refetch: taskRefetch } = useQuery(tasksLogs, {\r\n        variables: { document_tasks_logs: { global: { is_read: '=false', user_id: '=' + user.id, ORDER_BY: ['date'] } } },\r\n        onCompleted: (data) => {\r\n            console.log('tasks query',data)\r\n            setCon1(data.document_tasks_logs.length);\r\n        }\r\n    });\r\n\r\n    const { data: countData1, loading: countLoading1 } = useSubscription(tasksSub, {\r\n        variables: { document_tasks_logs: { global: { is_read: '=false', user_id: '=' + user.id, ORDER_BY: ['date'] } } },\r\n        onSubscriptionData: ({ subscriptionData: { data } }) => {\r\n            setCon1(data.document_tasks_logs.length);\r\n            console.log('tasks sub', data)\r\n            if (con1 > 0 ) {\r\n                //sendAgentNotification(user.email);\r\n                notifyMe('Есть новые входящие сообщения.');\r\n            }\r\n        }\r\n    }\r\n    );\r\n\r\n    useEffect(() => {\r\n        switch (pathname) {\r\n            case '/document-control/orders':\r\n                props.setHeaderTitle('Созданные мною')\r\n                break;\r\n            case '/document-control/reviseduser':\r\n                props.setHeaderTitle('На доработку')\r\n                break;\r\n            case '/document-control/approveduser':\r\n                props.setHeaderTitle('Исполненные')\r\n                break;\r\n            case '/document-control/rejecteduser':\r\n                props.setHeaderTitle('Отклонённые')\r\n                break;\r\n            case '/document-control/on-approval':\r\n                props.setHeaderTitle('Входящие')\r\n                break;\r\n            case '/document-control/on-approval-list':\r\n                props.setHeaderTitle('Подписанные мною')\r\n                break;\r\n            case '/document-control/approved':\r\n                props.setHeaderTitle('Все документы')\r\n                break;\r\n            case '/document-control/rejected':\r\n                props.setHeaderTitle('Все отклонённые')\r\n                break;\r\n            case '/document-control/for-execution-inbox':\r\n                props.setHeaderTitle('На исполнение')\r\n                break;\r\n        }\r\n    }, [pathname])\r\n\r\n    const onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        setCollapsedState(collapsed);\r\n    };\r\n\r\n    return (\r\n        <Sider\r\n            theme=\"dark\"\r\n            collapsible collapsed={collapsedState}\r\n            onCollapse={onCollapse}\r\n        >\r\n            <Menu\r\n                defaultSelectedKeys={pathname}\r\n                className=\"siderMenu\"\r\n                mode=\"inline\"\r\n                defaultOpenKeys={['User', 'onApproval', 'Admin']}\r\n            >\r\n                <SubMenu key=\"User\" icon={<DatabaseOutlined />} title='Мои документы'>\r\n                {user.documentControl.insert ?\r\n                    <Menu.Item key=\"/document-control/orders\">\r\n                        <Link to={'/document-control/orders'}>Созданные мною</Link>\r\n                    </Menu.Item>\r\n                        : null}\r\n                {user.documentControl.revisedUser.select ?\r\n                    <Menu.Item key={\"/document-control/reviseduser\"}>\r\n                            <NavLink to={'/document-control/reviseduser'}>На доработку <sup><Badge count={con.revised}/></sup></NavLink>\r\n                    </Menu.Item>\r\n                    : null}\r\n                {user.documentControl.approvedUser.select ?\r\n                    <Menu.Item key={\"/document-control/approveduser\"}>\r\n                            <NavLink to={'/document-control/approveduser'}>Исполненные <sup><Badge count={con.approved} /></sup></NavLink>\r\n                    </Menu.Item>\r\n                    : null}\r\n                {user.documentControl.rejectedUser.select ?\r\n                        <Menu.Item key={\"/document-control/rejecteduser\"}>\r\n                            <Link to={'/document-control/rejecteduser'}>Отклонённые <sup><Badge count={con.rejected} /></sup></Link>\r\n                    </Menu.Item>\r\n                        : null}\r\n                </SubMenu>\r\n                {user.documentControl.onApproval.select || user.documentControl.onApprovalList.select ?\r\n                <SubMenu key=\"onApproval\" icon={<SafetyCertificateOutlined />} title='Подписание'>\r\n                {user.documentControl.onApproval.select ?\r\n                    <Menu.Item key=\"/document-control/on-approval\">\r\n                                <Link to={'/document-control/on-approval'}>Входящие<sup><Badge count={con.onaproval} /></sup></Link>\r\n                    </Menu.Item>\r\n                    : null}\r\n                        {user.documentControl.onApprovalList.select ?\r\n                    <Menu.Item key=\"/document-control/on-approval-list\">\r\n                        <Link to={'/document-control/on-approval-list'}>Подписанные мною</Link>\r\n                    </Menu.Item>\r\n                    : null}\r\n                    </SubMenu>\r\n                    : null}\r\n                {user.documentControl.forExecutionInbox.select ?\r\n                    <SubMenu key=\"forExecution\" icon={<SafetyCertificateOutlined />} title='Исполнение'>\r\n                        {user.documentControl.forExecutionInbox.select ?\r\n                            <Menu.Item key=\"/document-control/for-execution-inbox\">\r\n                                <Link to={'/document-control/for-execution-inbox'}>Входящие<sup><Badge count={con1} /></sup></Link>\r\n                            </Menu.Item>\r\n                            : null}\r\n                    </SubMenu>\r\n                    : null}\r\n                {user.documentControl.approved.select || user.documentControl.rejected.select ?\r\n                    <SubMenu key=\"Admin\" icon={<CarryOutOutlined />} title='Список (Админ)'>\r\n                        {user.documentControl.approved.select ?\r\n                    <Menu.Item key={\"/document-control/approved\"}>\r\n                        <NavLink to={'/document-control/approved'}>Все документы</NavLink>\r\n                            </Menu.Item> : null}\r\n                {user.documentControl.rejected.select ?\r\n                    <Menu.Item key={\"/document-control/rejected\"}>\r\n                        <Link to={'/document-control/rejected'}>Все отклонённые</Link>\r\n                            </Menu.Item> : null}\r\n                    </SubMenu>\r\n                    : null}\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}\r\n\r\nexport default SiderMenu;","import { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { useMutation,useQuery } from '@apollo/client';\r\nimport { Button, Form, Modal, Steps, Divider, Input, Row, Col } from 'antd';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { handlerMutation, useUser } from '../../../core/functions';\r\n\r\nimport { gql} from '@apollo/client';\r\nimport IndependentSelect from '../../../core/IndependentSelect';\r\n\r\nlet document_routes = {\r\n    exemplar: 'document_routes',\r\n    table: 'document_routes',\r\n    options: {\r\n        all: {\r\n            /*variables: {\r\n               controller_addresses: { global: {ORDER_BY: ['id DESC']}}\r\n           },*/\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query document_routes ($document_routes: JSON) {\r\n                document_routes (document_routes: $document_routes) {\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query document_routes($document_routes: JSON) {\r\n                document_routes(document_routes: $document_routes) {\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription document_routes ($document_routes: JSON){\r\n                document_routes (document_routes: $document_routes) {\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n            }\r\n        `\r\n    }\r\n};\r\n\r\nlet positions = {\r\n    exemplar: 'positions',\r\n    table: 'positions',\r\n    options: {\r\n        all: {\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n            query positions ($positions: JSON) {\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `,\r\n        one: gql`\r\n            query positions($positions: JSON) {\r\n                positions(positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: gql`\r\n            subscription positions ($positions: JSON){\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n    }\r\n}\r\n\r\nconst { Step } = Steps;\r\n\r\nlet ModalInsert = React.memo(({ GQL, GQL2, GQL3, GQL4, GQL5, Form1, Form2, Form3, Form4, Form5, ...props }) => {\r\n\r\n    const [secondModalVisible, setSecondModalVisible] = useState(false);\r\n    const [thirdModalVisible, setThirdModalVisible] = useState(false);\r\n    const [fourthModalVisible, setFourthModalVisible] = useState(false)\r\n    const [fifthModalVisible, setFifthModalVisible] = useState(false)\r\n    const [sixthModalVisible, setsixthModalVisible] = useState(false)\r\n    const [routeData, setRouteData] = useState();\r\n    const [state, setState] = useState({        \r\n    });\r\n\r\n    const user = useUser();\r\n\r\n    const [formRouteSelect] = Form.useForm();\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (visible && state.route_id != null) {\r\n            formRouteSelect.resetFields();\r\n            setState({ route_id: null });\r\n            setRoutesList([{ positionName: 'Тип договора не выбран.' }]);\r\n        }\r\n    }, [visible]);\r\n\r\n    //modal handling\r\n    const showModalForm1 = () => {\r\n        setSecondModalVisible(true);\r\n    };\r\n    const showModalForm2 = () => {\r\n        setThirdModalVisible(true);\r\n    };\r\n    const showModalForm3 = () => {\r\n        setFourthModalVisible(true);\r\n    };\r\n    const showModalForm4 = () => {\r\n        setFifthModalVisible(true);\r\n    };\r\n    const showModalForm5 = () => {\r\n        setsixthModalVisible(true);\r\n    };\r\n    const handleOk = () => {\r\n        if (state.route_id != null) {\r\n            if(state.route_id == 10){\r\n                setVisible(false)\r\n                showModalForm1();\r\n            }\r\n            if(state.route_id == 24){\r\n                setVisible(false)\r\n                showModalForm2();\r\n            }\r\n            if(state.route_id == 26){\r\n                setVisible(false)\r\n                showModalForm3();\r\n            }\r\n            if(state.route_id == 27){\r\n                setVisible(false)\r\n                showModalForm4();\r\n            }\r\n            if (state.route_id == 29) {\r\n                formRouteSelect.submit();\r\n                setVisible(false)\r\n                showModalForm5();\r\n            }\r\n        }\r\n        else formRouteSelect.setFields([\r\n            {\r\n                name: 'route_id',\r\n                errors: ['Не выбран маршрут'],\r\n            }\r\n        ])\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setSecondModalVisible(false);\r\n        setThirdModalVisible(false)\r\n        setFourthModalVisible(false)\r\n        setFifthModalVisible(false);\r\n        setsixthModalVisible(false);\r\n    };\r\n\r\n    //routes manipulation\r\n    const { loading: loadingRoutes, data: dataRoutes, refetch: refetchRoutes } = useQuery(document_routes.select.all, {\r\n        variables: {\r\n            document_routes: {\r\n                global: {\r\n                    id: `=${state.route_id}`,\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (state.route_id != null) {\r\n            refetchRoutes();\r\n            console.log('stateEffect',dataRoutes,state)\r\n        }\r\n    }, [state]);\r\n    let [routesList,setRoutesList]= useState([{positionName:'Тип договора не выбран.'}])\r\n    let routesMap = []\r\n    useEffect(() => {\r\n        if (dataRoutes && dataRoutes[Object.keys(dataRoutes)[0]] != null && state.route_id > 0) {\r\n            console.log('dataRoutes', dataRoutes)\r\n            form.setFieldsValue({\r\n                route_id: dataRoutes.document_routes[0].id,\r\n                step: 1,\r\n                status_id: dataRoutes.document_routes[0].status_in_process\r\n            })\r\n            form2.setFieldsValue({\r\n                route_id: dataRoutes.document_routes[0].id,\r\n                step: 1,\r\n                status_id: dataRoutes.document_routes[0].status_in_process\r\n            })\r\n            form3.setFieldsValue({\r\n                route_id: dataRoutes.document_routes[0].id,\r\n                step: 1,\r\n                status_id: dataRoutes.document_routes[0].status_in_process\r\n            })\r\n            form4.setFieldsValue({\r\n                route_id: dataRoutes.document_routes[0].id,\r\n                step: 1,\r\n                status_id: dataRoutes.document_routes[0].status_in_process\r\n            })\r\n            form5.setFieldsValue({\r\n                route_id: dataRoutes.document_routes[0].id,\r\n                step: 1,\r\n                status_id: dataRoutes.document_routes[0].status_in_process\r\n            })\r\n            setRoutesList(routesMap = (dataRoutes.document_routes[0].routes != undefined )? dataRoutes.document_routes[0].routes.map((item)=>{\r\n                return{\r\n                    positionName:item.positionName\r\n                }\r\n            }) :[])\r\n            setRouteData(dataRoutes.document_routes[0].routes.filter((el) => { return el.step == 1 }))\r\n        }\r\n    }, [dataRoutes]);\r\n\r\n\r\n    const [form] = Form.useForm();\r\n    const [form2] = Form.useForm();\r\n    const [form3] = Form.useForm();\r\n    const [form4] = Form.useForm();\r\n    const [form5] = Form.useForm();\r\n\r\n    const [insert, { loading }] = handlerMutation(useMutation(GQL.insert), () => { setSecondModalVisible(false); form.resetFields() })();\r\n    const [insert2, { loading2 }] = handlerMutation(useMutation(GQL2.insert), () => { setThirdModalVisible(false); form2.resetFields() })();\r\n    const [insert3, { loading3 }] = handlerMutation(useMutation(GQL3.insert), () => { setFourthModalVisible(false); form3.resetFields() })();\r\n    const [insert4, { loading4 }] = handlerMutation(useMutation(GQL4.insert), () => { setFifthModalVisible(false); form4.resetFields() })();\r\n    const [insert5, { loading5 }] = handlerMutation(useMutation(GQL5.insert), () => { setsixthModalVisible(false); form5.resetFields() })();\r\n\r\n    //------------------files upload func\r\n    let uploadDocuments = async (files) => {\r\n\r\n        console.log(files)\r\n        const filePromises = files.map((file) => {\r\n            // Return a promise per file\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = async (e) => {\r\n                    resolve({ dataFile: e.target.result, fileName: file.name })\r\n                };\r\n                reader.onerror = (error) => {\r\n                    reject(error);\r\n                };\r\n                reader.readAsDataURL(file.originFileObj);\r\n            });\r\n        });\r\n\r\n        // Wait for all promises to be resolved\r\n        const fileInfos = await Promise.all(filePromises);\r\n\r\n        console.log('COMPLETED');\r\n\r\n        // Profit\r\n        return fileInfos;\r\n    };\r\n\r\n    const cRef = useRef('displayNone')\r\n\r\n    let form5RouteData = useRef()\r\n    // let routeStatus = { \"statuses\": [\"5\", \"4\", \"2\", \"7\"] }\r\n    \r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={() => { setVisible(true) }}\r\n            >\r\n                <PlusCircleOutlined />Создать\r\n            </Button>\r\n            <Modal\r\n                title=\"Выберите тип договора:\"\r\n                onOk={handleOk}\r\n                visible={visible}\r\n                onCancel={() => { setVisible(false) }}\r\n            >\r\n                <Form\r\n                    form={formRouteSelect}\r\n                    name=\"Route_select\"\r\n                    onFinish={(values) => {\r\n                        form5RouteData.current = values.routes\r\n                        console.log('ROUTE 5', values)\r\n                    }}\r\n                    onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('state', state) }}\r\n                >\r\n                    <Form.Item\r\n                        name=\"route_id\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо выбрать маршрут!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <IndependentSelect placeholder=\"Тип договора\" title=\"Выберите тип договора:\" query={document_routes} />\r\n                    </Form.Item>\r\n                    <Divider type={'horizontal'} />\r\n                    <div className='font-form-header marginTop marginBottom'>\r\n                        <label>Маршрут:</label>\r\n                    </div>\r\n                    <Steps size=\"small\" current={0} direction=\"vertical\">\r\n                        {\r\n                            routesList.map((item) => {\r\n                                if (routesList.length == 4) {\r\n                                    cRef.current = 'displayBlock'\r\n                                } else {\r\n                                    cRef.current = 'displayNone'\r\n                                    return (\r\n                                        <Step title={user.admin ? item.positionName + ' - ' + user.username : item.positionName} />\r\n                                    )\r\n                                }\r\n                            })\r\n\r\n                        }\r\n                    </Steps>\r\n                    <div className={cRef.current}>\r\n                        <span className='marginBottom displayBlock'>Для создания нового маршрута, укажите все необходимые должности в нужном порядке</span>\r\n                        <Form.List name=\"routes\">\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    {fields.map((field) => (\r\n                                        <>\r\n                                            <Row>\r\n                                                <Col span={19}>\r\n                                                    <span className='displayFlex'>\r\n                                                        <p className='anotherFormSelectCount'>{field.name + 1}. </p>\r\n\r\n                                                        <Form.Item\r\n                                                            {...field}\r\n                                                            name={[field.name, \"positionId\"]}\r\n                                                            fieldKey={[field.fieldKey, \"positionId\"]}\r\n                                                            className='anotherForm'\r\n                                                        >\r\n                                                            <IndependentSelect\r\n                                                                disabled={props.disabled}\r\n                                                                placeholder=\"Должность\"\r\n                                                                title=\"Должность\"\r\n                                                                query={positions}\r\n                                                                onChange={(value, LabeledValue) => {\r\n                                                                    setState(prevState => {\r\n                                                                        let old = Object.assign({}, prevState);\r\n                                                                        console.log('field.fieldKey', field.fieldKey)\r\n                                                                        old.routes[field.name].positionName = LabeledValue.children;\r\n                                                                        old.routes[field.name].step = field.name + 1;\r\n                                                                        old.routes[field.name].statuses = [\"5\", \"4\", \"2\", \"7\"]\r\n                                                                        return old\r\n                                                                    })\r\n                                                                }}\r\n                                                            />\r\n                                                        </Form.Item>\r\n                                                    </span>\r\n                                                </Col>\r\n                                                <Col span={5}>\r\n                                                    <i style={{ marginLeft: \"20px\" }}>Убрать</i>\r\n                                                    <MinusCircleOutlined onClick={() => {remove(field.name)}} disabled={props.disabled} style={{ marginLeft: 5 }} />\r\n                                                </Col>\r\n\r\n                                                <Form.Item\r\n                                                    {...field}\r\n                                                    name={[field.name, \"step\"]}\r\n                                                    fieldKey={[field.fieldKey, \"step\"]}\r\n                                                    hidden={true}\r\n                                                >\r\n                                                </Form.Item>\r\n                                                <Form.Item\r\n                                                    {...field}\r\n                                                    name={[field.name, \"positionName\"]}\r\n                                                    fieldKey={[field.fieldKey, \"positionName\"]}\r\n                                                    hidden={true}\r\n                                                >\r\n                                                </Form.Item>\r\n                                                <Form.Item\r\n                                                    {...field}\r\n                                                    name={[field.name, \"statuses\"]}\r\n                                                    fieldKey={[field.fieldKey, \"statuses\"]}\r\n                                                    hidden={true}\r\n                                                >\r\n                                                </Form.Item>\r\n                                            </Row>\r\n                                        </>\r\n                                    ))}\r\n                                    <Button\r\n                                        type=\"dashed\"\r\n                                        onClick={() => {add()}}\r\n                                        disabled={props.disabled}\r\n                                        block\r\n                                    >\r\n                                        Добавить участника\r\n                                    </Button>\r\n                                </>\r\n                            )}\r\n                        </Form.List>\r\n                    </div>\r\n                </Form>\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={secondModalVisible}\r\n                onOk={() => { form.submit() }}\r\n                onCancel={handleCancel}\r\n                cancelText='Отмена'\r\n                okText='Отправить на согласование'\r\n\r\n                centered\r\n                width={props.width ? props.width : 450}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                confirmLoading={loading ? loading : false}\r\n            >\r\n                <Form1\r\n                    form={form}\r\n                    onFinish={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = [];\r\n                        if (values?.files?.fileList) {\r\n                            await uploadDocuments(values.files.fileList).then(result => {\r\n                                base64 = result\r\n                            });\r\n                        };\r\n                        values.docs = base64 ? base64 : [];\r\n                        values.user_id = user.id;\r\n                        values.username = user.username;\r\n                        values.position = user.position_names[0];\r\n                        values.is_read = false;\r\n                        values.fio = user.fio;\r\n                        values.positionId = routeData[0].positionId\r\n                        console.log('TEST', variables)\r\n                        // console.log('TEST', Object.assign(variables,))\r\n                        variables[GQL.exemplar] = values;\r\n                        // console.log('variables------------------------------',variables)\r\n                        insert({ variables })\r\n                    }}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={thirdModalVisible}\r\n                onOk={() => { form2.submit() }}\r\n                onCancel={handleCancel}\r\n                cancelText='Отмена'\r\n                okText='Отправить на согласование'\r\n\r\n                centered\r\n                width={props.width ? props.width : 450}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                confirmLoading={loading ? loading : false}\r\n            >\r\n                <Form2\r\n                    form2={form2}\r\n                    onFinish2={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = []\r\n                        await uploadDocuments(values.files.fileList).then(result => {\r\n                            base64 = result\r\n                        })\r\n                        values.docs = base64;\r\n                        values.user_id = user.id;\r\n                        values.username = user.username;\r\n                        values.position = user.position_names[0];\r\n                        values.is_read = false;\r\n                        values.fio = user.fio;\r\n                        values.positionId = routeData[0].positionId\r\n                        console.log('TEST', variables)\r\n                        // console.log('TEST', Object.assign(variables,))\r\n                        variables[GQL2.exemplar] = values;\r\n                        insert2({ variables })\r\n\r\n                    }}\r\n                />\r\n                \r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={fourthModalVisible}\r\n                onOk={() => { form3.submit() }}\r\n                onCancel={handleCancel}\r\n                cancelText='Отмена'\r\n                okText='Отправить на согласование'\r\n\r\n                centered\r\n                width={props.width ? props.width : 450}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                confirmLoading={loading ? loading : false}\r\n            >\r\n                <Form3\r\n                    form3={form3}\r\n                    onFinish3={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = []\r\n                        await uploadDocuments(values.files.fileList).then(result => {\r\n                            base64 = result\r\n                        })\r\n                        values.docs = base64;\r\n                        values.user_id = user.id;\r\n                        values.username = user.username;\r\n                        values.position = user.position_names[0];\r\n                        values.is_read = false;\r\n                        values.fio = user.fio;\r\n                        values.positionId = routeData[0].positionId\r\n                        console.log('TEST', variables)\r\n                        // console.log('TEST', Object.assign(variables,))\r\n                        variables[GQL3.exemplar] = values;\r\n                        insert3({ variables })\r\n\r\n                    }}\r\n                />\r\n                \r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={fifthModalVisible}\r\n                onOk={() => { form4.submit() }}\r\n                onCancel={handleCancel}\r\n                cancelText='Отмена'\r\n                okText='Отправить на согласование'\r\n\r\n                centered\r\n                width={props.width ? props.width : 450}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                confirmLoading={loading ? loading : false}\r\n            >\r\n                <Form4\r\n                    form4={form4}\r\n                    onFinish4={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = []\r\n                        await uploadDocuments(values.files.fileList).then(result => {\r\n                            base64 = result\r\n                        })\r\n                        values.docs = base64;\r\n                        values.user_id = user.id;\r\n                        values.username = user.username;\r\n                        values.position = user.position_names[0];\r\n                        values.is_read = false;\r\n                        values.fio = user.fio;\r\n                        values.positionId = routeData[0].positionId\r\n                        console.log('TEST', variables)\r\n                        // console.log('TEST', Object.assign(variables,))\r\n                        variables[GQL4.exemplar] = values;\r\n                        insert4({ variables })\r\n\r\n                    }}\r\n                />\r\n                \r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={sixthModalVisible}\r\n                onOk={() => { form5.submit() }}\r\n                onCancel={handleCancel}\r\n                cancelText='Отмена'\r\n                okText='Отправить на согласование'\r\n\r\n                centered\r\n                width={props.width ? props.width : 450}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                confirmLoading={loading ? loading : false}\r\n            >\r\n                <Form5\r\n                    form5={form5}\r\n                    onFinish5={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = []\r\n                        await uploadDocuments(values.files.fileList).then(result => {\r\n                            base64 = result\r\n                        })\r\n                        values.route_data = form5RouteData.current\r\n                        values.docs = base64;\r\n                        values.user_id = user.id;\r\n                        values.username = user.username;\r\n                        values.position = user.position_names[0];\r\n                        values.is_read = false;\r\n                        values.fio = user.fio;\r\n                        values.positionId = routeData[0].positionId\r\n                        console.log('TEST', variables)\r\n                        // console.log('TEST', Object.assign(variables,))\r\n                        variables[GQL5.exemplar] = values;\r\n                        insert5({ variables })\r\n\r\n                    }}\r\n                />\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\nexport default ModalInsert;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { useMutation, useQuery, gql } from '@apollo/client';\r\nimport { Button, Form, Modal, message } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../core/functions';\r\n\r\nimport GenericPdfDownloader from \"../../../core/util/CanvasToHtml\";\r\n\r\nconst insertComment = gql`\r\n       mutation insertComment($comment: JSON) {\r\n        insertComment(comment: $comment) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nconst insertSignature = gql`\r\n       mutation insertSignature($signature: JSON) {\r\n        insertSignature(signature: $signature) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nconst deleteSignature = gql`\r\n       mutation deleteSignature($signature: JSON) {\r\n        deleteSignature(signature: $signature) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nconst deleteFile = gql`\r\n        mutation deleteFile($document_files :JSON){\r\n            deleteFile(document_files:$document_files){\r\n                type\r\n                message\r\n            }\r\n        }`\r\n\r\nconst comments = gql`\r\n        query document_comments($document_comments: JSON) {\r\n            document_comments(document_comments:$document_comments) {\r\n                id\r\n                comment\r\n                document_id\r\n                user_id\r\n                position\r\n                username\r\n                fio\r\n                date\r\n            }\r\n        }\r\n    `;\r\n\r\nconst documentTasks = gql`\r\n        query document_tasks($document_tasks: JSON){\r\n            document_tasks(document_tasks:$document_tasks){\r\n                id\r\n                document_id\r\n                status\r\n                is_cancelled\r\n                note\r\n                deadline\r\n                date_created\r\n                user_id_created\r\n                fio_created\r\n                user_id_receiver\r\n                fio_receiver\r\n                route_id\r\n                document_options\r\n                document_tasks_files{\r\n                    id\r\n                    filename\r\n                    data_file\r\n                    task_id\r\n                }\r\n                document_tasks_logs{\r\n                    id\r\n                    task_id\r\n                    is_read\r\n                    type\r\n                    user_id\r\n                }\r\n                task_statuses{\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        }\r\n`\r\n\r\n\r\n\r\nlet ModalUpdate = React.memo(({ GQL, GQL2, GQL3, GQL4, GQL5, UpdateForm, UpdateForm2, UpdateForm3, UpdateForm4, UpdateForm5, ...props }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [form2] = Form.useForm();\r\n    const [form3] = Form.useForm();\r\n    const [form4] = Form.useForm();\r\n    const [form5] = Form.useForm();\r\n\r\n    const [visible, setVisible] = props.visibleModalUpdate ? props.visibleModalUpdate : [];\r\n    const [visible2, setVisible2] = props.visibleModalUpdate2 ? props.visibleModalUpdate2 : [];\r\n    const [visible3, setVisible3] = props.visibleModalUpdate3 ? props.visibleModalUpdate3 : [];\r\n    const [visible4, setVisible4] = props.visibleModalUpdate4 ? props.visibleModalUpdate4 : [];\r\n    const [visible5, setVisible5] = props.visibleModalUpdate5 ? props.visibleModalUpdate5 : [];\r\n    const [viewMode, setViewMode] = useState(true);\r\n\r\n    const user = useUser();\r\n\r\n    //-------modal handling\r\n    let modalCancelHandler = () => {\r\n        setVisible(false); setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false)\r\n        setViewMode(true)\r\n    }\r\n\r\n    let modalEnableEditHandler = () => {\r\n        setViewMode(false);\r\n    }\r\n\r\n    const { confirm } = Modal;\r\n    function showSendConfirm() {\r\n        confirm({\r\n            title: 'Вы действительно хотите отправить документ?',\r\n            content: `test`,\r\n            okText: 'Отправить',\r\n            cancelText: 'Отмена',\r\n            onOk() { },\r\n            onCancel() { },\r\n        });\r\n    }\r\n\r\n    //---------------------------------------------------------------------------data view handling\r\n    let variables1 = {}; variables1[GQL.table] = GQL.table ? { global: { id: `= ${props.selectedRowKeys[0]}` } } : {};\r\n    let variables2 = {}; variables2[GQL2.table] = GQL2.table ? { global: { id: `= ${props.selectedRowKeys[0]}` } } : {};\r\n    let variables3 = {}; variables3[GQL3?.table ? GQL3.table : {}] = { global: { id: `= ${props.selectedRowKeys[0]}` } };\r\n    let variables4 = {}; variables4[GQL4?.table ? GQL4.table : {}] = { global: { id: `= ${props.selectedRowKeys[0]}` } };\r\n    let variables5 = {}; variables5[GQL5?.table ? GQL5.table : {}] = { global: { id: `= ${props.selectedRowKeys[0]}` } };\r\n\r\n    const { loading: loadingOne, data, refetch } = handlerQuery(GQL, 'one', { variables1 })();\r\n    const { loading: loadingTwo, data: data2, refetch: refetch2 } = handlerQuery(GQL2, 'one', { variables2 })();\r\n    const { loading: loadingThree, data: data3, refetch: refetch3 } = handlerQuery(GQL3, 'one', { variables3 })();\r\n    const { loading: loadingFour, data: data4, refetch: refetch4 } = handlerQuery(GQL4, 'one', { variables4 })();\r\n    const { loading: loadingFive, data: data5, refetch: refetch5 } = handlerQuery(GQL5, 'one', { variables5 })();\r\n\r\n    useEffect(() => { if (data) { form.resetFields() } }, [data]);\r\n    useEffect(() => { if (data2) { form2.resetFields() } }, [data2]);\r\n    useEffect(() => { if (data3) { form3.resetFields() } }, [data3]);\r\n    useEffect(() => { if (data4) { form4.resetFields() } }, [data4]);\r\n    useEffect(() => { if (data5) { form5.resetFields() } }, [data5]);\r\n\r\n    useEffect(() => { if (visible) { refetch(variables1) }; }, [visible]);\r\n    useEffect(() => { if (visible2) { refetch2(variables2); } }, [visible2]);\r\n    useEffect(() => { if (visible3) { refetch3(variables3); } }, [visible3]);\r\n    useEffect(() => { if (visible4) { refetch4(variables4); } }, [visible4]);\r\n    useEffect(() => { if (visible5) { refetch5(variables5); } }, [visible5]);\r\n    //-----------------------------------------------------------------------------------------------------\r\n\r\n    //-------------mutations\r\n    const [update, { loading: loadingUpdate }] = handlerMutation(useMutation(GQL.update), () => { setVisible(false); setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false); setViewMode(true); })();\r\n\r\n    //---------tasks\r\n    let tasksVariables = {variables:{document_tasks:{global:{document_id:`=${props.selectedRowKeys[0]}`, user_id_created:`=${user?.id}`}}}};\r\n\r\n    const { loading: loadingTasks, data: dataTasks, refetch: refetchTasks } = useQuery(documentTasks, tasksVariables);\r\n\r\n    useEffect(() => { if (visible) { refetchTasks(tasksVariables) } }, [props?.selectedRowKeys[0]]);\r\n    let documentTasksList = (dataTasks && dataTasks[Object.keys(dataTasks)[0]] != null) ? dataTasks[Object.keys(dataTasks)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            document_id:item.document_id ? item.document_id: '',\r\n            status:item.status? item.status: '',\r\n            is_cancelled: item.is_cancelled? item.is_cancelled:'',\r\n            note:item.note?item.note:'',\r\n            deadline:item.deadline?item.deadline:'',\r\n            date_created:item.date_created?item.date_created:'',\r\n            user_id_created:item.user_id_created? item.user_id_created:'',\r\n            fio_created:item.fio_created?item.fio_created:'',\r\n            user_id_receiver:item.user_id_receiver? item.user_id_receiver:'',\r\n            fio_receiver:item.fio_receiver?item.fio_receiver:'',\r\n            route_id:item.route_id?item.route_id:'',\r\n            task_statuses: item.task_statuses.name?item.task_statuses.name:'',\r\n            document_tasks_files:item.document_tasks_files.length !=0?item.document_tasks_files:[],\r\n            document_tasks_logs:item.document_tasks_logs[item.document_tasks_logs.findIndex(item => item.user_id == user.id)]\r\n        }\r\n    }) : [];\r\n    //---------comments\r\n    const [commentText, setCommentText] = useState();\r\n    let commentVariables = props?.selectedRowKeys[0] ? { variables: { document_comments: { global: { document_id: `= ${props.selectedRowKeys[0]}`, ORDER_BY: ['date'] } } } } : {};\r\n    const { loading: loadingComments, data: dataComments, refetch: refetchComments } = useQuery(comments, commentVariables);\r\n    useEffect(() => { if (visible) { refetchComments(commentVariables) } }, [visible]);\r\n    let commentsList = (dataComments && dataComments[Object.keys(dataComments)[0]] != null) ? dataComments[Object.keys(dataComments)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            comment: item.comment ? item.comment : '',\r\n            position: item.position ? item.position : '',\r\n            document_id: item.document_id ? item.document_id : '',\r\n            user_id: item.user_id ? item.user_id : '',\r\n            username: item.username,\r\n            fio: item.fio,\r\n            date: item.date ? item.date : ''\r\n        }\r\n    }) : [];\r\n\r\n    const [dataComment, { loading: loadingMutation, error: errorMutation }] = useMutation(insertComment, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n    let handleComment = (form) => {\r\n        dataComment({ variables: { comment: { user_id: user.id, username: user.username, fio: user.fio, document_id: props.selectedRowKeys[0], position: user.position_names[0], comment: commentText } } });\r\n        refetchComments(commentVariables);\r\n        form.resetFields([\"comments\"]);\r\n    };\r\n    let HandleCommentOnChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setCommentText(all.target.value)\r\n        }\r\n    }\r\n\r\n    //----------signatures\r\n    const [step, setStep] = useState();\r\n    const [status, setStatus] = useState();\r\n    const [routeData, setRouteData] = useState();\r\n    const [dataSignature, { loading: loadingSignature, error: errorSignature }] = useMutation(insertSignature, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n    const [dataSignatureDelete, { loading: loadingSignatureDelete, error: errorSignatureDelete }] = useMutation(deleteSignature, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n\r\n    //--------------------------------------------approve processes\r\n    let handleRouteForward = () => {\r\n\r\n        let routeFinishIndex = data.documents[0].route_data.length;\r\n        let routeCurrentIndex = data.documents[0].step;\r\n\r\n        // SEARCH POSITION ID\r\n        setRouteData(data.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1);\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data.documents[0].signatures.filter(e => e.document_id == data.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data.documents[0].signatures.filter(e => e.document_id == data.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n\r\n    };\r\n    \r\n    let handleRouteForward2 = () => {\r\n\r\n        let routeFinishIndex = data2.documents[0].route_data.length;\r\n        let routeCurrentIndex = data2.documents[0].step;\r\n\r\n        setRouteData(data2.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1)\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data2.documents[0].signatures.filter(e => e.document_id == data2.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data2.documents[0].signatures.filter(e => e.document_id == data2.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n    }\r\n    let handleRouteForward3 = () => {\r\n\r\n        let routeFinishIndex = data3.documents[0].route_data.length;\r\n        let routeCurrentIndex = data3.documents[0].step;\r\n\r\n        setRouteData(data3.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1)\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data3.documents[0].signatures.filter(e => e.document_id == data3.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data3.documents[0].signatures.filter(e => e.document_id == data3.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n    }\r\n    let handleRouteForward4 = () => {\r\n\r\n        let routeFinishIndex = data4.documents[0].route_data.length;\r\n        let routeCurrentIndex = data4.documents[0].step;\r\n\r\n        setRouteData(data4.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1)\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data4.documents[0].signatures.filter(e => e.document_id == data4.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data4.documents[0].signatures.filter(e => e.document_id == data4.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n    }\r\n    let handleRouteForward5 = () => {\r\n\r\n        let routeFinishIndex = data5.documents[0].route_data.length;\r\n        let routeCurrentIndex = data5.documents[0].step;\r\n\r\n        setRouteData(data5.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1)\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data5.documents[0].signatures.filter(e => e.document_id == data5.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data5.documents[0].signatures.filter(e => e.document_id == data5.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n    }\r\n\r\n    const showInfoMessageRouteUnavailable = () => {\r\n        message.info('Нельзя возвратить документ на нулевой уровень, достигнуто начало маршрута.', 10);\r\n    };\r\n    let handleRouteBackward = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data.documents[0].step;\r\n\r\n        setRouteData(data.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n            showInfoMessageRouteUnavailable();\r\n        }\r\n    }\r\n    let handleRouteBackward2 = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data2.documents[0].step;\r\n\r\n        setRouteData(data2.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n            showInfoMessageRouteUnavailable();\r\n        }\r\n    };\r\n    let handleRouteBackward3 = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data3.documents[0].step;\r\n\r\n        setRouteData(data3.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n            showInfoMessageRouteUnavailable();\r\n        }\r\n    };\r\n    let handleRouteBackward4 = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data4.documents[0].step;\r\n\r\n        setRouteData(data4.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n            showInfoMessageRouteUnavailable();\r\n        }\r\n    };\r\n    let handleRouteBackward5 = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data5.documents[0].step;\r\n\r\n        setRouteData(data5.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n        }\r\n    };\r\n\r\n    let handleRouteReturnToSender = () => {\r\n        //setStep(0); doe not work\r\n        setStatus(7);\r\n    };\r\n\r\n    let handleRouteFromUserEditToApprove = () => { //user send to approve\r\n        let routeCurrentIndex = data.documents[0].step;\r\n\r\n        setRouteData(data.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex }))\r\n        setStatus(5);\r\n    }\r\n    let handleRouteFromUserEditToApprove2 = () => { //user send to approve\r\n        let routeCurrentIndex = data2.documents[0].step;\r\n\r\n        setRouteData(data2.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex }))\r\n        setStatus(5);\r\n    }\r\n    let handleRouteFromUserEditToApprove3 = () => { //user send to approve\r\n        let routeCurrentIndex = data3.documents[0].step;\r\n\r\n        setRouteData(data3.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex }))\r\n        setStatus(5);\r\n    }\r\n    let handleRouteFromUserEditToApprove4 = () => { //user send to approve\r\n        let routeCurrentIndex = data4.documents[0].step;\r\n\r\n        setRouteData(data4.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex }))\r\n        setStatus(5);\r\n    }\r\n    let handleRouteFromUserEditToApprove5 = () => { //user send to approve\r\n        let routeCurrentIndex = data5.documents[0].step;\r\n\r\n        setRouteData(data5.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex }))\r\n        setStatus(5);\r\n    }\r\n    //------------------document statuses\r\n    let handleStatusCancelled = () => {\r\n        setStatus(2);\r\n    };\r\n\r\n\r\n    //---------------------------------------debug\r\n    // useEffect(() => { console.log('loadingOne status:', loadingOne) }, [loadingOne]);\r\n    // useEffect(() => { console.log('loadingTwo status:', loadingTwo) }, [loadingTwo]);\r\n    // useEffect(() => { console.log('loadingThree status:', loadingThree) }, [loadingThree]);\r\n    // useEffect(() => { console.log('loadingFour status:', loadingFour) }, [loadingFour]);\r\n\r\n    let HandleDeleteFile = (file) => {\r\n        console.log('CLIIIICK',file)\r\n        fileDelete({variables:{document_files:{id:file.id}}})\r\n    }\r\n    const [fileDelete, { loading: loadingFileDelete, error: errorDileDelete }] = useMutation(deleteFile, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n\r\n\r\n    const testRef = useRef();\r\n    let dHandler = () => {\r\n        GenericPdfDownloader(testRef.current, 'test.pdf')\r\n    }\r\n\r\n    /*const testRef = useRef(document.getElementById('testId'));\r\n    let dHandler = () => {\r\n        GenericPdfDownloader(document.getElementById('testId'), 'test.pdf')\r\n    }*/\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                disabled={props.selectedRowKeys.length !== 2}\r\n                onClick={() => { setVisible(true) }}\r\n            >\r\n                <EyeOutlined />Просмотр\r\n            </Button>\r\n\r\n\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible}\r\n\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={950}\r\n                onOk={() => { form.submit() }}\r\n                onCancel={() => { setVisible(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <div id=\"testId\" ref={testRef}>\r\n                <UpdateForm\r\n                    documentTasksList={documentTasksList}\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward={handleRouteForward}\r\n                    handleRouteBackward={handleRouteBackward}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove={handleRouteFromUserEditToApprove}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form={form}\r\n                    onFinish={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 10;\r\n                        variables[GQL.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues={data}\r\n                    disabled={viewMode}\r\n                    />\r\n                    {/* <button onClick={dHandler}>Download Pdf</button> */}\r\n                </div>\r\n                </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible2}\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form2.submit() }}\r\n                onCancel={() => { setVisible2(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm2\r\n                    documentTasksList={documentTasksList}\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward2={handleRouteForward2}\r\n                    handleRouteBackward2={handleRouteBackward2}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove2={handleRouteFromUserEditToApprove2}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form2={form2}\r\n                    onFinish2={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 24;\r\n                        variables[GQL2.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues2={data2}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible3}\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form3.submit() }}\r\n                onCancel={() => { setVisible3(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm3\r\n                    documentTasksList={documentTasksList}\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward3={handleRouteForward3}\r\n                    handleRouteBackward3={handleRouteBackward3}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove3={handleRouteFromUserEditToApprove3}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form3={form3}\r\n                    onFinish3={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 26;\r\n                        variables[GQL3.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues3={data3}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible4}\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form4.submit() }}\r\n                onCancel={() => { setVisible4(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm4\r\n                    documentTasksList={documentTasksList}\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward4={handleRouteForward4}\r\n                    handleRouteBackward4={handleRouteBackward4}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove4={handleRouteFromUserEditToApprove4}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form4={form4}\r\n                    onFinish4={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 27;\r\n                        variables[GQL.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues4={data4}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible5}\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form5.submit() }}\r\n                onCancel={() => { setVisible5(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm5\r\n                    documentTasksList={documentTasksList}\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward5={handleRouteForward5}\r\n                    handleRouteBackward5={handleRouteBackward5}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove5={handleRouteFromUserEditToApprove5}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form5={form5}\r\n                    onFinish5={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 29;\r\n                        variables[GQL.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues5={data5}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ModalUpdate;","\r\nimport { Table } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nlet TableContainer = React.memo((props) => {\r\n    let [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n    let itemKeys = [];\r\n\r\n    if (!props.loading) {\r\n        itemKeys = props.data.records.map((item) => {\r\n            return item.id\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSelectedRowKeys(selectedRowKeys.filter((item) => {\r\n            for (var i = 0; i < itemKeys.length; i++) {\r\n                if (itemKeys[i] == item) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }));\r\n    }, [props.data]);\r\n\r\n    //console.log('props TableContainer', props)\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                className='sd-tables-row-hover'\r\n                loading={props.loading}\r\n                style={{minHeight: 168}}\r\n                // bordered={true}\r\n                columns={props.data.dict}\r\n                dataSource={props.data.records}\r\n                scroll={{ y: 'calc(100vh - 231px)', minX: 500 }}\r\n                size='small'\r\n                title={props.title ? () => (props.title({ selectedRowKeys: selectedRowKeys })) : null}\r\n                bordered={props.bordered}\r\n                onRow={(record, rowIndex) => {\r\n                    return {\r\n                        onClick: event => { setSelectedRowKeys([record.key, record.route_id]) },\r\n                        onDoubleClick: event => {\r\n                            if(record.route_id == 10){\r\n                                props.visibleModalUpdate[1](true)\r\n                            }\r\n                            if(record.route_id == 24){\r\n                                props.visibleModalUpdate2[1](true)\r\n                            }\r\n                            if(record.route_id == 26){\r\n                                props.visibleModalUpdate3[1](true)\r\n                            }\r\n                            if(record.route_id == 27){\r\n                                props.visibleModalUpdate4[1](true)\r\n                            }\r\n                            if(record.route_id == 29){\r\n                                props.visibleModalUpdate5[1](true)\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                pagination={{\r\n                    // simple: true,\r\n                    pageSize: 50,\r\n\t\t\t\t\t//defaultCurrent=6, - to check both commented\r\n\t\t\t\t\t//total={props.data.records.length},\r\n                    showSizeChanger: false\r\n                }}\r\n                rowClassName={(record, index) => {\r\n                    let className = ''\r\n                    if (record.is_read == false){\r\n                        className += 'is_read_false'\r\n                    }\r\n                    if (record.key === selectedRowKeys[0]) {\r\n                        return 'ant-table-row ant-table-row-level-0 statusSelected';\r\n                    }\r\n                    return 'ant-table-row ant-table-row-level-0', className;\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TableContainer\r\n","import React from 'react';\nimport { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\n\nconst { Dragger } = Upload;\n\nlet UploadFile = (props) => {\n    return (\n        <Dragger {...props}\n                beforeUpload={(file, fileList) => {\n                console.log('beforeUpload file', file);\n                console.log('beforeUpload fileList', fileList);\n                    if (file.size > 5500000) {\n                        message.error({\n                            key: 'msgKeyFileError',\n                            content: `Файл - ${file.name} :размер слишком большой.`,\n                            duration: 30,\n                            className: 'custom-class',\n                            style: {\n                                marginTop: '20vh',\n                            },\n                            onClick: (() => message.destroy('msgKeyFileError'))\n                        });\n                    };\n                    if (file.type !== 'image/png' && file.type !== 'image/jpg' && file.type !== 'image/jpeg' && file.type !== 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' &&\n                        file.type !== 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' && file.type !== 'application/pdf' && file.type !== 'application/msword' &&\n                        file.type !== 'application/vnd.ms-excel') {\n                        message.error({\n                            key: 'msgKeyFileTypeError',\n                            content: `Файл - ${file.name} :нельзя загружать такой тип файла.`,\n                            duration: 30,\n                            onClick: (() => message.destroy('msgKeyFileTypeError'))\n                        });\n                    }\n                    return (file.size < 5500000 && file.type === 'image/png' || file.size < 5500000 && file.type === 'image/jpg' || file.size < 5500000 && file.type === 'image/jpeg' ||\n                        file.size < 5500000 && file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ||\n                        file.size < 5500000 && file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.size < 5500000 && file.type === 'application/pdf' ||\n                        file.size < 5500000 && file.type === 'application/msword' ||\n                        file.size < 5500000 && file.type === 'application/vnd.ms-excel') ? true : Upload.LIST_IGNORE;\n            }}\n        >\n            <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Кликните мышью тут или перенесите файл на эту форму для загрузки файла </p>\n            <p className=\"ant-upload-hint\">\n                Можно загружать за раз несколько файлов\n            </p>\n        </Dragger>\n    )\n}\n\nexport default UploadFile","import { Form, Input,message} from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\n\r\nlet Insert1 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                files: props.initialValues.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state)\r\n        console.log('-------------------------------------------', values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование ТРУ'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование ТРУ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"supllier\"\r\n                label='Поставщик ТРУ'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Поставщик ТРУ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Основание'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.TextArea rows={4} disabled={props.disabled} placeholder=\"Основание\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label='Общая сумма договора'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"files\"\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    /*accept={\".doc,.docx,.xls,.xlsx,.ppt,.pptx,image/*,*.pdf\"}*/\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Insert1;","import { Form, Input, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\n\r\nlet Insert2 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    useEffect(() => { props.form2.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n\r\n                price: props.initialValues.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                files: props.initialValues.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state)\r\n        console.log('-------------------------------------------', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'Закупки товаров, работ и услуг'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'Поставка продукции (выполнение работ, оказание услуг) заказчикам'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'Передача имущества в аренду (бесплатное пользование)'},\r\n        {label:'Совместная деятельность',value:'Совместная деятельность'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'Финансирование (кредитование, обеспечение исполнения обязательств)'},\r\n        {label:'Прочие обязательства',value:'Прочие обязательства'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(1);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <h4>ЛИСТ СОГЛАСОВАНИЯ НА РЕАЛИЗАЦИЮ ГОТОВОЙ ПРОДУКЦИИ</h4>\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Предмет договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-checkbox'\r\n                rules={[\r\n                    {\r\n\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Radio.Group disabled={props.disabled} onChange={RadioOnChange} options={radioOptions} className='form-radio' value={radioState}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label='Общая сумма договора в валюте цены договора'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора в валюте цены договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"currency_price\"\r\n                label='Общая сумма договора в тенге, по курсу НБ РК'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора в тенге, по курсу НБ РК\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"executor_name_division\"\r\n                label='Наименование подразделения, фамилия ответственного исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование подразделения, фамилия ответственного исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"sider_signatures_date\"\r\n                label='Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"received_from_counteragent_date\"\r\n                label='Дата получение проекта договора, способ получения от контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Дата получение проекта договора, способ получения от контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"files\"\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    /*accept={\".doc,.docx,.xls,.xlsx,.ppt,.pptx,image/*,*.pdf\"}*/\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\n\r\nexport default Insert2;","import { Form, Input, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\nlet Insert3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const phone_pattern= /^!*([0-9]!*){11,11}$/g;\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    useEffect(() => { props.form3.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n\r\n                price: props.initialValues3.documents[0].data_agreement_list_production[0].price,\r\n                subject: props.initialValues3.documents[0].data_agreement_list_production[0].subject,\r\n                currency: props.initialValues3.documents[0].data_agreement_list_production[0].currency,\r\n                executor_name_division: props.initialValues3.documents[0].data_agreement_list_production[0].executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0].data_agreement_list_production[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0].data_agreement_list_production[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state)\r\n        console.log('-------------------------------------------', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: 'Закупки товаров, работ и услуг' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: 'Передача имущества в аренду (бесплатное пользование)' },\r\n        { label: 'Совместная деятельность', value: 'Совместная деятельность' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: 'Финансирование (кредитование, обеспечение исполнения обязательств)' },\r\n        { label: 'Прочие обязательства', value: 'Прочие обязательства' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(1);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4>ЛИСТ СОГЛАСОВАНИЯ НА ЗАКУП ТРУ ДЛЯ ПРОИЗВОДСТВА ПРОДУКЦИИ</h4>\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"Наименование контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Предмет договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-checkbox'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Radio.Group disabled={props.disabled} onChange={RadioOnChange} options={radioOptions} className='form-radio' value={radioState} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label=\"Общая сумма договора\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"currency\"\r\n                label=\"Валюта платежа\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Валюта платежа\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='executor_name_division'\r\n                label='Наименование подразделения, фамилия ответственного исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование подразделения, фамилия ответственного исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='executor_phone_number'\r\n                label='Телефон исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Телефон исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='counteragent_contacts'\r\n                label='Контакты контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Контакты контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"files\"\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    /*accept={\".doc,.docx,.xls,.xlsx,.ppt,.pptx,image/*,*.pdf\"}*/\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Insert3;","import { Form, Input, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\nlet Insert4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const phone_pattern= /^!*([0-9]!*){11,11}$/g;\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    useEffect(() => { props.form4.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n\r\n                price: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].price,\r\n                subject: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].subject,\r\n                currency: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].currency,\r\n                executor_name_division: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state)\r\n        console.log('-------------------------------------------', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: 'Закупки товаров, работ и услуг' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: 'Передача имущества в аренду (бесплатное пользование)' },\r\n        { label: 'Совместная деятельность', value: 'Совместная деятельность' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: 'Финансирование (кредитование, обеспечение исполнения обязательств)' },\r\n        { label: 'Прочие обязательства', value: 'Прочие обязательства' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(1);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4>ЛИСТ СОГЛАСОВАНИЯ НА ЗАКУП ТРУ ДЛЯ ВНУТРИЗАВОДСКИХ НУЖД И КАПИТАЛЬНЫХ ЗАТРАТ</h4>\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"Наименование контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Предмет договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-checkbox'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Radio.Group disabled={props.disabled} onChange={RadioOnChange} options={radioOptions} className='form-radio' value={radioState} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label=\"Общая сумма договора\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"currency\"\r\n                label=\"Валюта платежа\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Валюта платежа\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='executor_name_division'\r\n                label='Наименование подразделения, фамилия ответственного исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование подразделения, фамилия ответственного исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='executor_phone_number'\r\n                label='Телефон исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Телефон исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='counteragent_contacts'\r\n                label='Контакты контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Контакты контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"files\"\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    /*accept={\".doc,.docx,.xls,.xlsx,.ppt,.pptx,image/*,*.pdf\"}*/\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Insert4;","import { Form, Input,message} from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\nlet Insert5 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    useEffect(() => { props.form5.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish5(state)\r\n        console.log('-------------------------------------------', values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"remark\"\r\n                label='Примечание'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Примечание\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Основание'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.TextArea rows={4} disabled={props.disabled} placeholder=\"Основание\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"files\"\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    /*accept={\".doc,.docx,.xls,.xlsx,.ppt,.pptx,image/*,*.pdf\"}*/\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Insert5","import { gql } from '@apollo/client';\r\nlet variables = {};\r\n\r\nlet gql1 = {\r\n    exemplar: 'document',\r\n    table: 'documents',\r\n    options: {\r\n        all: {\r\n            variables: variables,\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                subject\r\n                date_created\r\n                reason\r\n                date_modified\r\n                status_id\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n        one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    reason\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                reason\r\n                date_modified\r\n                status_id\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                    }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n        ]\r\n    },\r\n    insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n};\r\n\r\nexport default gql1;","import { gql } from '@apollo/client';\r\nlet variables = {};\r\n\r\nlet gql2 = {\r\n    exemplar: 'document',\r\n    table: 'documents',\r\n    options: {\r\n        all: {\r\n            variables: variables,\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                reason\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n        one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    reason\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n\r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                reason\r\n                date_modified\r\n                status_id\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                    }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n        ]\r\n    },\r\n    insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n};\r\n\r\nexport default gql2;","import { gql } from '@apollo/client';\r\nlet variables = {};\r\n\r\nlet gql3 = {\r\n    exemplar: 'document',\r\n    table: 'documents',\r\n    options: {\r\n        all: {\r\n            variables: variables,\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                reason\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n        one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    reason\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                reason\r\n                date_modified\r\n                status_id\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                    }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n        ]\r\n    },\r\n    insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n};\r\n\r\nexport default gql3;","import { gql } from '@apollo/client';\r\nlet variables = {};\r\n\r\nlet gql4 = {\r\n    exemplar: 'document',\r\n    table: 'documents',\r\n    options: {\r\n        all: {\r\n            variables: variables,\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                reason\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n        one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    reason\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                reason\r\n                date_modified\r\n                status_id\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                    }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n        ]\r\n    },\r\n    insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n};\r\n\r\nexport default gql4;","import { gql } from '@apollo/client';\r\nlet variables = {};\r\n\r\nlet gql5 = {\r\n    exemplar: 'document',\r\n    table: 'documents',\r\n    options: {\r\n        all: {\r\n            variables: variables,\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                reason\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n        one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    reason\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                reason\r\n                date_modified\r\n                status_id\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                    }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n        ]\r\n    },\r\n    insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n};\r\n\r\nexport default gql5;","import React, { useEffect, useState } from 'react';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { handlerQuery } from '../../../core/functions';\r\nimport { Modal, Popconfirm, Select, Button, Form } from 'antd';\r\n\r\nlet SelectReplacementDialog = React.memo((props) => {\r\n\r\n\r\n    let positions = {\r\n        exemplar: 'positions',\r\n        table: 'positions',\r\n        options: {\r\n            all: {\r\n                /*variables: {\r\n                   controller_addresses: { global: {ORDER_BY: ['id DESC']}}\r\n               },*/\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n            query positions ($positions: JSON) {\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `,\r\n            one: gql`\r\n            query positions($positions: JSON) {\r\n                positions(positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription positions ($positions: JSON){\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        `\r\n        }\r\n    };\r\n\r\n    const updateDocumentRoutePosition = gql`\r\n       mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\n    const { loading, data, refetch } = handlerQuery(positions, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [mutateRoutePosition, { loading: loadingMutation, error: errorMutation }] = useMutation(updateDocumentRoutePosition, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n\r\n    const [state, setState] = useState({});\r\n\r\n    let onFinish = (values) => {\r\n        console.log(values)\r\n    }\r\n\r\n    console.log('propsS', props)\r\n\r\n    const [form] = Form.useForm();\r\n    useEffect(() => { form.setFieldsValue(state) }, [state]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={'Назначение заменяющих должностей'}\r\n                visible={props.visible}\r\n                centered\r\n                width={450}\r\n                onOk={() => { }}\r\n                onCancel={() => { props.setVisible(false) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { props.setVisible(false) }}>Отмена</Button>,\r\n                    <Popconfirm\r\n                        title={'Действительно заменить и сохранить изменения?'}\r\n                        placement=\"topLeft\"\r\n                        disabled={state.replacement ? false : true}\r\n                        onConfirm={async () => {\r\n                            await form.submit();\r\n                            const tmpPosName = data.positions.filter(el => { return el.id == state.replacement })[0];\r\n                            console.log('form name', tmpPosName, state);\r\n                            props.setRoutesList(prevState => {\r\n                                let old = Object.assign({}, prevState);\r\n                                let tmpIndex = old[0].substitutes.indexOf(props.routeData[props.stepCount.step - 1].positionId)\r\n                                console.log('tmpIndex', tmpPosName.id, tmpIndex)\r\n                                if (old[0].substitutes.indexOf(props.routeData[props.stepCount.step - 1].positionId) === -1) {\r\n                                    old[0].substitutes.push(tmpPosName.id)\r\n                                }\r\n                                old[0].positionName = tmpPosName.name;\r\n                                old[0].positionId = tmpPosName.id;\r\n                                console.log('step old', old);\r\n                                return old;\r\n                            });\r\n                            props.form.submit();\r\n                            console.log('test'); props.setVisible(false)\r\n                        }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\">\r\n                        <Button\r\n                            disabled={state.replacement ? false : true}\r\n                            type='primary'\r\n                        >Сохранить</Button>\r\n                    </Popconfirm>\r\n\r\n                ]}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name=\"ReplacementSelectForm\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                    autoComplete=\"off\"\r\n                    onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Выберите заменяющего\"\r\n                        labelAlign=\"left\"\r\n                        name=\"replacement\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            style={{ width: 100 + \"%\" }}\r\n                            showSearch\r\n                            optionFilterProp=\"children\"\r\n                            filterOption\r\n                            {...props}\r\n                        >\r\n                            <Select.Option key={null} value={null}></Select.Option>\r\n                            {data && data.positions?.length > 0 &&\r\n                                props?.routeData &&\r\n                                props?.stepCount?.step &&\r\n                                data[Object.keys(data)[0]] != null &&\r\n                                props?.routeData[props.stepCount.step - 1]?.substitutes?.length > 0 ?\r\n                                props.routeData[props.stepCount.step - 1].substitutes.map((item, i) => {\r\n                                    if (item != props.routeData.filter(el => { return el.id == item })[0]?.positionId) {\r\n                                        return (\r\n                                            <Select.Option key={item} value={item}>\r\n                                                {data.positions.filter(el => { console.log('map', item, i, data.positions.filter(el => { return el.id == item })); return el.id == item })[0]?.name}\r\n                                            </Select.Option>)\r\n                                    }\r\n                                }) : null}\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SelectReplacementDialog;","import {EyeOutlined} from '@ant-design/icons';\r\nimport { Button, Form, Input, Divider, Row, Col, Typography, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate, getDiffHours } from '../../../../../../core/functions';\r\n\r\nimport SelectReplacementDialog from '../../../../dialogs/SelectReplacementDialog';\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const { Step } = Steps;\r\n    const [visible, setVisible] = useState(false);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n                \r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues', props.initialValues)\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование ТРУ: </Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Поставщик ТРУ: </Col> <Col span={12}>{state.supllier}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание: </Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <SelectReplacementDialog visible={visible} setVisible={setVisible} setRoutesList={setRoutesList} routesList={routesList} stepCount={stepCount}\r\n                    routeData={props?.initialValues?.documents[0]?.route_data} form={props.form}/>\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        props?.initialValues?.documents[0].route_data.map((item, i) => {\r\n                            return (\r\n                                <>\r\n                                    <Step \r\n                                        title={item.positionName}\r\n                                        onClick={() => {\r\n                                        console.log('step click', item);\r\n                                        if (props.initialValues.documents[0].step == i+1) {\r\n                                            setVisible(true)\r\n                                        }\r\n                                    }}\r\n                                        subTitle={\r\n                                        i == stepCount.step - 1 && state?.signatures?.length > 0 || stepCount.step==1 ?\r\n                                            (() => {\r\n                                                if (stepCount.step == 1&& i==0) {\r\n                                                    let tmpD = getDiffHours(new Date(state.date_created), new Date());\r\n                                                    console.log('tmpD1', tmpD)\r\n                                                    return tmpD?.toString()\r\n                                                }\r\n                                                if (i != 0 && state?.signatures[i-1]?.date_signature) {\r\n                                                    let tmpD = getDiffHours(new Date(state.signatures[state.signatures.length - 1].date_signature), new Date());\r\n                                                    console.log('tmpD2', tmpD)\r\n                                                    return tmpD?.toString()\r\n                                                }\r\n                                            })()\r\n                                            : null\r\n                                    }\r\n                                    />\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update1;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Divider, Row, Col, Typography,Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate, getDiffHours } from '../../../../../../core/functions';\r\n\r\nimport SelectReplacementDialog from '../../../../dialogs/SelectReplacementDialog';\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const { Step } = Steps;\r\n    const [visible, setVisible] = useState(false);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form2.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            console.log('props.initialValues 22222', props.initialValues2)\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues 2', props.initialValues2)\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues2?.documents[0]?.data_agreement_list[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Общая сумма договора в валюте цены договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Общая сумма договора в тенге, по курсу НБ РК:</Col> <Col span={12}>{state.currency_price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента:</Col> <Col span={12}>{state.sider_signatures_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Дата получение проекта договора, способ получения от контрагента:</Col> <Col span={12}>{state.received_from_counteragent_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <SelectReplacementDialog visible={visible} setVisible={setVisible} setRoutesList={setRoutesList} routesList={routesList} stepCount={stepCount}\r\n                    routeData={props?.initialValues2?.documents[0]?.route_data} form={props.form} />\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        props?.initialValues2?.documents[0].route_data.map((item, i) => {\r\n                            return (\r\n                                <>\r\n                                    <Step\r\n                                        title={item.positionName}\r\n                                        onClick={() => {\r\n                                            console.log('step click', item);\r\n                                            if (props.initialValues2.documents[0].step == i + 1) {\r\n                                                setVisible(true)\r\n                                            }\r\n                                        }}\r\n                                        subTitle={\r\n                                            i == stepCount.step - 1 && state?.signatures?.length > 0 || stepCount.step == 1 ?\r\n                                                (() => {\r\n                                                    if (stepCount.step == 1 && i == 0) {\r\n                                                        let tmpD = getDiffHours(new Date(state.date_created), new Date());\r\n                                                        console.log('tmpD1', tmpD)\r\n                                                        return tmpD?.toString()\r\n                                                    }\r\n                                                    if (i != 0 && state?.signatures[i - 1]?.date_signature) {\r\n                                                        let tmpD = getDiffHours(new Date(state.signatures[state.signatures.length - 1].date_signature), new Date());\r\n                                                        console.log('tmpD2', tmpD)\r\n                                                        return tmpD?.toString()\r\n                                                    }\r\n                                                })()\r\n                                                : null\r\n                                        }\r\n                                    />\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues2?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Button disabled={props.disabled} type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteForward2}>\r\n                        Согласовать\r\n                    </Button>\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <Button disabled={props.disabled} type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteBackward}>Вернуть на доработку</Button>\r\n                        <Divider type={'vertical'} />\r\n                        <Button disabled={props.disabled} type=\"primary\" htmlType=\"submit\" onClick={props.handleStatusCancelled}>Отклонить</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> */}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\n\r\n\r\nexport default Update2;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Divider, Row, Col, Typography, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate, getDiffHours } from '../../../../../../core/functions';\r\n\r\nimport SelectReplacementDialog from '../../../../dialogs/SelectReplacementDialog';\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const { Step } = Steps;\r\n    const [visible, setVisible] = useState(false);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form3.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            console.log('props.initialValues 33333', props.initialValues3)\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n                position: props.initialValues3.documents[0].position,\r\n                username: props.initialValues3.documents[0].username,\r\n                fio: props.initialValues3.documents[0].fio,\r\n\r\n                price: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.price,\r\n                subject: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.subject,\r\n                currency: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.currency,\r\n                executor_name_division: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues3.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues3.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                route: props.initialValues3.documents[0].route_data,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                signatures: props.initialValues3.documents[0].signatures,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues 3', props.initialValues3)\r\n            setStepCount({ step: props.initialValues3.documents[0].step })\r\n            setRoutesList(props.initialValues3.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues3?.documents[0]?.data_agreement_list_production[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <SelectReplacementDialog visible={visible} setVisible={setVisible} setRoutesList={setRoutesList} routesList={routesList} stepCount={stepCount}\r\n                    routeData={props?.initialValues3?.documents[0]?.route_data} form={props.form} />\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        props?.initialValues3?.documents[0].route_data.map((item, i) => {\r\n                            return (\r\n                                <>\r\n                                    <Step\r\n                                        title={item.positionName}\r\n                                        onClick={() => {\r\n                                            console.log('step click', item);\r\n                                            if (props.initialValues3.documents[0].step == i + 1) {\r\n                                                setVisible(true)\r\n                                            }\r\n                                        }}\r\n                                        subTitle={\r\n                                            i == stepCount.step - 1 && state?.signatures?.length > 0 || stepCount.step == 1 ?\r\n                                                (() => {\r\n                                                    if (stepCount.step == 1 && i == 0) {\r\n                                                        let tmpD = getDiffHours(new Date(state.date_created), new Date());\r\n                                                        console.log('tmpD1', tmpD)\r\n                                                        return tmpD?.toString()\r\n                                                    }\r\n                                                    if (i != 0 && state?.signatures[i - 1]?.date_signature) {\r\n                                                        let tmpD = getDiffHours(new Date(state.signatures[state.signatures.length - 1].date_signature), new Date());\r\n                                                        console.log('tmpD2', tmpD)\r\n                                                        return tmpD?.toString()\r\n                                                    }\r\n                                                })()\r\n                                                : null\r\n                                        }\r\n                                    />\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues3?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Divider, Row, Col, Typography, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate, getDiffHours } from '../../../../../../core/functions';\r\n\r\nimport SelectReplacementDialog from '../../../../dialogs/SelectReplacementDialog';\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const { Step } = Steps;\r\n    const [visible, setVisible] = useState(false);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form4.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n                position: props.initialValues4.documents[0].position,\r\n                username: props.initialValues4.documents[0].username,\r\n                fio: props.initialValues4.documents[0].fio,\r\n\r\n                price: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.price,\r\n                subject: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.subject,\r\n                currency: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.currency,\r\n                executor_name_division: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues4.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues4.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                route: props.initialValues4.documents[0].route_data,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                signatures: props.initialValues4.documents[0].signatures,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues4', props.initialValues4)\r\n            setStepCount({ step: props.initialValues4.documents[0].step })\r\n            setRoutesList(props.initialValues4.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues4?.documents[0]?.data_agreement_list_internal_needs[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <SelectReplacementDialog visible={visible} setVisible={setVisible} setRoutesList={setRoutesList} routesList={routesList} stepCount={stepCount}\r\n                    routeData={props?.initialValues4?.documents[0]?.route_data} form={props.form} />\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        props?.initialValues4?.documents[0].route_data.map((item, i) => {\r\n                            return (\r\n                                <>\r\n                                    <Step\r\n                                        title={item.positionName}\r\n                                        onClick={() => {\r\n                                            console.log('step click', item);\r\n                                            if (props.initialValues4.documents[0].step == i + 1) {\r\n                                                setVisible(true)\r\n                                            }\r\n                                        }}\r\n                                        subTitle={\r\n                                            i == stepCount.step - 1 && state?.signatures?.length > 0 || stepCount.step == 1 ?\r\n                                                (() => {\r\n                                                    if (stepCount.step == 1 && i == 0) {\r\n                                                        let tmpD = getDiffHours(new Date(state.date_created), new Date());\r\n                                                        console.log('tmpD1', tmpD)\r\n                                                        return tmpD?.toString()\r\n                                                    }\r\n                                                    if (i != 0 && state?.signatures[i - 1]?.date_signature) {\r\n                                                        let tmpD = getDiffHours(new Date(state.signatures[state.signatures.length - 1].date_signature), new Date());\r\n                                                        console.log('tmpD2', tmpD)\r\n                                                        return tmpD?.toString()\r\n                                                    }\r\n                                                })()\r\n                                                : null\r\n                                        }\r\n                                    />\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues4?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Divider, Row, Col, Typography, Steps } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useUser, formatDate, getDiffHours } from '../../../../../../core/functions';\r\n\r\nimport SelectReplacementDialog from '../../../../dialogs/SelectReplacementDialog';\r\n\r\nlet Update5 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const { Step } = Steps;\r\n    const stepsDirection = useRef('vertical');\r\n    useEffect(() => {\r\n        if (props?.initialValues5?.documents[0]?.route_data?.length > 1)\r\n            stepsDirection.current = props?.initialValues5?.documents[0]?.route_data?.length <= 7 ? 'horizontal' : 'vertical'\r\n    }, [props]);\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form5.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n                position: props.initialValues5.documents[0].position,\r\n                username: props.initialValues5.documents[0].username,\r\n                fio: props.initialValues5.documents[0].fio,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                route: props.initialValues5.documents[0].route_data,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                signatures: props.initialValues5.documents[0].signatures,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues5.documents[0].step })\r\n            setRoutesList(props.initialValues5.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish5(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Другой</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Примечание:</Col> <Col span={12}>{state.remark}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <SelectReplacementDialog visible={visible} setVisible={setVisible} setRoutesList={setRoutesList} routesList={routesList} stepCount={stepCount}\r\n                    routeData={props?.initialValues5?.documents[0]?.route_data} form={props.form} />\r\n                <Steps\r\n                    labelPlacement=\"vertical\"\r\n                    size=\"small\"\r\n                    direction={stepsDirection.current}\r\n                    responsive={true}\r\n                    current={stepCount.step - 1}\r\n                    className=\"steps-form-update\">\r\n                    {\r\n                        props?.initialValues5?.documents[0].route_data.map((item, i) => {\r\n                            return (\r\n                                <>\r\n                                    <Step\r\n                                        title={item.positionName}\r\n                                        onClick={() => {\r\n                                            console.log('step click', item);\r\n                                            if (props.initialValues5.documents[0].step == i + 1) {\r\n                                                setVisible(true)\r\n                                            }\r\n                                        }}\r\n                                        subTitle={\r\n                                            i == stepCount.step - 1 && state?.signatures?.length > 0 || stepCount.step == 1 ?\r\n                                                (() => {\r\n                                                    if (stepCount.step == 1 && i == 0) {\r\n                                                        let tmpD = getDiffHours(new Date(state.date_created), new Date());\r\n                                                        console.log('tmpD1', tmpD)\r\n                                                        return tmpD?.toString()\r\n                                                    }\r\n                                                    if (i != 0 && state?.signatures[i - 1]?.date_signature) {\r\n                                                        let tmpD = getDiffHours(new Date(state.signatures[state.signatures.length - 1].date_signature), new Date());\r\n                                                        console.log('tmpD2', tmpD)\r\n                                                        return tmpD?.toString()\r\n                                                    }\r\n                                                })()\r\n                                                : null\r\n                                        }\r\n                                    />\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues5?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update5","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Button, Popconfirm } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../../core/functions';\r\nimport ModalInsert from '../../modals/ModalInsert';\r\nimport ModalUpdate from '../../modals/ModalUpdate';\r\nimport TableContainer from '../../tableContainers/TableContainer';\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport test from \"../../../../core/functions/test\";\r\n\r\n\r\nimport Insert1 from './forms/1/Insert1';\r\nimport Insert2 from './forms/2/Insert2';\r\nimport Insert3 from './forms/3/Insert3';\r\nimport Insert4 from './forms/4/Insert4';\r\nimport Insert5 from './forms/5/Insert5';\r\n\r\nimport gql1 from './gql/1/gql1';\r\nimport gql2 from './gql/2/gql2';\r\nimport gql3 from './gql/3/gql3';\r\nimport gql4 from './gql/4/gql4';\r\nimport gql5 from './gql/5/gql5';\r\n\r\nimport Update1 from './forms/1/Update1';\r\nimport Update2 from './forms/2/Update2';\r\nimport Update3 from './forms/3/Update3';\r\nimport Update4 from './forms/4/Update4';\r\nimport Update5 from './forms/5/Update5';\r\n\r\n\r\nlet Orders = React.memo((props) => {\r\n    let user = useUser();\r\n    let positionsVariable = user.positions.toString();\r\n    let userVariable = user.id;\r\n    let variables = { documents: { global: { user_id: `=${userVariable}`, ORDER_BY: ['date_created desc'] } } };\r\n    gql1.options.all.variables = variables;\r\n    gql2.options.all.variables = variables;\r\n    gql3.options.all.variables = variables;\r\n    gql4.options.all.variables = variables;\r\n    gql5.options.all.variables = variables;\r\n    if (user.admin) variables = {};\r\n    //console.log('positionsVariable', positionsVariable)\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false);\r\n    const visibleModalUpdate3 = useState(false);\r\n    const visibleModalUpdate4 = useState(false);\r\n    const visibleModalUpdate5 = useState(false);\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(gql1.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(gql1, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route_id: item.route_id.id,\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data ? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step: item.step,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            //step_name:console.log('DDDDDD',item.step)\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            //step_name: item.route_id?.routes ? item.route_id.routes[item.route_id.routes.findIndex(item => item.positionId == item.step)].positionName : ''\r\n        }\r\n    }) : [];\r\n\r\n    /*list[0].temp = 'try';\r\n    let list2 = list.map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.status,\r\n            route_id: item.route_id,\r\n            route: item.route,\r\n            route_data: item.route_data,\r\n            route_test: item?.route_data?.length > 0 ? Object.values(item.route_data[0].positionId): [], //console.log('T',item.id):[]\r\n            step: item.step\r\n        }\r\n    });\r\n    */\r\n\r\n    //console.log('list', list)\r\n    //console.log('list2', list2)\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '214px', type: 'search', tooltip: true, sorter: (a, b) => a.title.localeCompare(b.title), sortDirections: ['ascend', 'descend'] },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_created) - new Date(b.date_created) },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_modified) - new Date(b.date_modified) },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.route.localeCompare(b.route), sortDirections: ['ascend', 'descend'] },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: (a, b) => a.status.localeCompare(b.status), sortDirections: ['ascend', 'descend'] },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n        // { title: 'Шаг п.', dataIndex: 'route_step', width: '55px'}\r\n    ]);\r\n\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (\r\n            <TitleMenu\r\n                buttons={[\r\n                    <ModalInsert title='Создание документа'\r\n                        GQL={gql1} Form1={Insert1}\r\n                        GQL2={gql2} Form2={Insert2}\r\n                        GQL3={gql3} Form3={Insert3}\r\n                        GQL4={gql4} Form4={Insert4}\r\n                        GQL5={gql5} Form5={Insert5}\r\n                        width={750} />,\r\n                    <ModalUpdate\r\n                        visibleModalUpdate={visibleModalUpdate} GQL={gql1} UpdateForm={Update1}\r\n                        visibleModalUpdate2={visibleModalUpdate2} GQL2={gql2} UpdateForm2={Update2}\r\n                        visibleModalUpdate3={visibleModalUpdate3} GQL3={gql3} UpdateForm3={Update3}\r\n                        visibleModalUpdate4={visibleModalUpdate4} GQL4={gql4} UpdateForm4={Update4}\r\n                        visibleModalUpdate5={visibleModalUpdate5} GQL5={gql5} UpdateForm5={Update5}\r\n                        title='Просмотр договора' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                    <Popconfirm\r\n                        title=\"Вы уверены?\"\r\n                        onConfirm={() => { let variables = {}; variables[gql1.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\"\r\n                        icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                        disabled={tableProps.selectedRowKeys.length !== 1}\r\n                    >\r\n                        {user.documentControl.delete ?\r\n                            <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 2}><DeleteOutlined />Удалить</Button> : null}\r\n                    </Popconfirm>\r\n                ]}\r\n                selectedRowKeys={tableProps.selectedRowKeys}\r\n            />)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TableContainer\r\n                data={{ dict, records: list }}\r\n                loading={loading}\r\n                title={titleMenu}\r\n                visibleModalUpdate={visibleModalUpdate}\r\n                visibleModalUpdate2={visibleModalUpdate2}\r\n                visibleModalUpdate3={visibleModalUpdate3}\r\n                visibleModalUpdate4={visibleModalUpdate4}\r\n                visibleModalUpdate5={visibleModalUpdate5}\r\n            />\r\n            {/*<Button onClick={() => setContext(\"New Value\")}>Change Context</Button> <br /> */}\r\n        </>\r\n    )\r\n});\r\n\r\nexport default Orders;","import { Table } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nlet TableContainer = React.memo(({ GQL, ...props }) => {\r\n    const location = useLocation();\r\n    const { pathname } = location;\r\n\r\n\r\n    let [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    let itemKeys = [];\r\n    if (!props.loading) {\r\n        itemKeys = props.data.records.map((item) => {\r\n            return item.id\r\n        });\r\n    }\r\n    // const [readTrue,  loading ] = handlerMutation(useMutation(GQL.setIsReadTrue))();\r\n\r\n\r\n    const [readTrue, { loading , error }] = useMutation(GQL.setIsReadTrue, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n\r\n    useEffect(() => {\r\n        setSelectedRowKeys(selectedRowKeys.filter((item) => {\r\n            for (var i = 0; i < itemKeys.length; i++) {\r\n                if (itemKeys[i] == item) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }));\r\n    }, [props.data]);\r\n\r\n    // console.log(\"props TableContainer\", props.data.records[0])\r\n    return (\r\n        <>\r\n            <Table\r\n                className='sd-tables-row-hover'\r\n                loading={props.loading}\r\n                style={{ minHeight: 168 }}\r\n                columns={props.data.dict}\r\n                dataSource={props.data.records}\r\n                scroll={{ y: 'calc(100vh - 231px)', minX: 500 }}\r\n                size='small'\r\n                title={props.title ? () => (props.title({ selectedRowKeys: selectedRowKeys })) : null}\r\n                bordered={props.bordered}\r\n                onRow={(record, rowIndex) => {\r\n                    return {\r\n                        onClick: event => {\r\n                            setSelectedRowKeys([record.key, record.route_id])\r\n                        },\r\n                        onDoubleClick: event => {\r\n                            if(record?.document_logs?.is_read == false){\r\n                                readTrue({ variables: { document: { id: record.document_logs.id,is_read:true} } });\r\n                                if(record.route_id == 10){\r\n                                    props.visibleModalUpdate[1](true)\r\n                                }\r\n                                if(record.route_id == 24){\r\n                                    props.visibleModalUpdate2[1](true)\r\n                                }\r\n                                if(record.route_id == 26){\r\n                                    props.visibleModalUpdate3[1](true)\r\n                                }\r\n                                if(record.route_id == 27){\r\n                                    props.visibleModalUpdate4[1](true)\r\n                                }\r\n                                if(record.route_id == 29){\r\n                                    props.visibleModalUpdate5[1](true)\r\n                                }\r\n                            }else{\r\n                                if(record.route_id == 10){\r\n                                    props.visibleModalUpdate[1](true)\r\n                                }\r\n                                if(record.route_id == 24){\r\n                                    props.visibleModalUpdate2[1](true)\r\n                                }\r\n                                if(record.route_id == 26){\r\n                                    props.visibleModalUpdate3[1](true)\r\n                                }\r\n                                if(record.route_id == 27){\r\n                                    props.visibleModalUpdate4[1](true)\r\n                                }\r\n                                if(record.route_id == 29){\r\n                                    props.visibleModalUpdate5[1](true)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                pagination={{\r\n                    // simple: true,\r\n                    pageSize: 50,\r\n                    //defaultCurrent=6, - to check both commented\r\n                    //total={props.data.records.length},\r\n                    showSizeChanger: false\r\n                }}\r\n                rowClassName={(record, index) => {\r\n                    let className = ''\r\n                    if (record?.document_logs?.is_read == false){\r\n                        className += 'is_read_false'\r\n                    }\r\n                    if (record.key === selectedRowKeys[0]) {\r\n                        return 'ant-table-row ant-table-row-level-0 statusSelected';\r\n                    }\r\n                    return 'ant-table-row ant-table-row-level-0', className;\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TableContainer\r\n\r\n","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet FromUserEditToApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите отправить договор на согласование?');\r\n\r\n    const confirm = () => {\r\n        dataProps.handleRouteFromUserEditToApprove()\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n            >\r\n                Отправить на согласование\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default FromUserEditToApproveConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nlet DeleteFile = React.memo(({ item, reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите удалить прикреплённый файл?');\r\n\r\n    const confirm = () => {\r\n        dataProps.HandleDeleteFile(item)\r\n        setState(prevState => {\r\n            console.log('item', item)\r\n            let old = Object.assign({}, prevState);\r\n            let index = old.files.findIndex(file => file.id == item.id)\r\n            old.files.splice(index,1)\r\n            console.log('OOOLLLLDDDDD+++++++++', index, old.files)\r\n            return old;\r\n        });\r\n        console.log('ITEM', item)\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                icon={<DeleteOutlined />}\r\n            />\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default DeleteFile;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\n//pop confirm\r\nimport FromUserEditToApproveConfirm from './dialogs/FromUserEditToApproveConfirm';\r\nimport DeleteFile from '../../common/DeleteFile';\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                //document_logs: props.initialValues.documents[0].document_logs,\r\n                document_logs: {is_read:true},\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues', props.initialValues)\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование ТРУ'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование ТРУ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"supllier\"\r\n                label='Поставщик ТРУ'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Поставщик ТРУ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Основание'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Основание\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label='Общая сумма договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора\" />\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            {props?.initialValues?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> \r\n                            <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> \r\n                            <DeleteFile item={item} dataProps={props} setState={setState} user={user}/>\r\n                            <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <FromUserEditToApproveConfirm dataProps={props} setState={setState} user={user} />\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> \r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update1;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet FromUserEditToApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите отправить договор на согласование?');\r\n\r\n    const confirm = () => {\r\n        dataProps.handleRouteFromUserEditToApprove2()\r\n        dataProps.form2.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n            >\r\n                Отправить на согласование\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default FromUserEditToApproveConfirm;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Radio, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\nimport FromUserEditToApproveConfirm from './dialogs/FromUserEditToApproveConfirm';\r\nimport DeleteFile from '../../common/DeleteFile'\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\nconst price_pattern = /^\\d+$/;\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form2.setFieldsValue(state) }, [state]);\r\n    console.log(\"PROPS UPDATE DOC 2\", props)\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                //document_logs: props.initialValues.documents[0].document_logs,\r\n                document_logs: { is_read: true },\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues2', props.initialValues2)\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: 'Закупки товаров, работ и услуг' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: 'Передача имущества в аренду (бесплатное пользование)' },\r\n        { label: 'Совместная деятельность', value: 'Совместная деятельность' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: 'Финансирование (кредитование, обеспечение исполнения обязательств)' },\r\n        { label: 'Прочие обязательства', value: 'Прочие обязательства' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(props?.initialValues2?.documents[0]?.data_agreement_list[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues2?.documents[0].fio} <br />\r\n            <b>Должность:</b> {props?.initialValues2?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование контрагента'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Предмет договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Radio.Group disabled={props.disabled} onChange={RadioOnChange} options={radioOptions} className='form-radio' value={radioState} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label='Общая сумма договора в валюте цены договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора в валюте цены договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"currency_price\"\r\n                label='Общая сумма договора в тенге, по курсу НБ РК'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора в тенге, по курсу НБ РК\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"executor_name_division\"\r\n                label='Наименование подразделения, фамилия ответственного исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование подразделения, фамилия ответственного исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"sider_signatures_date\"\r\n                label='Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Дата, способ получения от контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"received_from_counteragent_date\"\r\n                label='Дата получение проекта договора, способ получения от контрагента'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Дата получение проекта договора, способ получения от контрагента\" />\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            {props?.initialValues2?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link>\r\n                            <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} />\r\n                            <DeleteFile item={item} dataProps={props} setState={setState} user={user} />\r\n                            <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues2?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Space>\r\n                        <FromUserEditToApproveConfirm dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update2;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet FromUserEditToApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите отправить договор на согласование?');\r\n\r\n    const confirm = () => {\r\n        dataProps.handleRouteFromUserEditToApprove3()\r\n        dataProps.form3.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n            >\r\n                Отправить на согласование\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default FromUserEditToApproveConfirm;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Radio, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\nimport FromUserEditToApproveConfirm from './dialogs/FromUserEditToApproveConfirm';\r\nimport DeleteFile from '../../common/DeleteFile'\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form3.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n                position: props.initialValues3.documents[0].position,\r\n                username: props.initialValues3.documents[0].username,\r\n                fio: props.initialValues3.documents[0].fio,\r\n\r\n                price: props.initialValues3.documents[0].data_agreement_list_production[0].price,\r\n                subject: props.initialValues3.documents[0].data_agreement_list_production[0].subject,\r\n                currency: props.initialValues3.documents[0].data_agreement_list_production[0].currency,\r\n                executor_name_division: props.initialValues3.documents[0].data_agreement_list_production[0].executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0].data_agreement_list_production[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0].data_agreement_list_production[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues3.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues3.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                route: props.initialValues3.documents[0].route_data,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                signatures: props.initialValues3.documents[0].signatures,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues3.documents[0].step })\r\n            setRoutesList(props.initialValues3.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: 'Закупки товаров, работ и услуг' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: 'Передача имущества в аренду (бесплатное пользование)' },\r\n        { label: 'Совместная деятельность', value: 'Совместная деятельность' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: 'Финансирование (кредитование, обеспечение исполнения обязательств)' },\r\n        { label: 'Прочие обязательства', value: 'Прочие обязательства' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(1);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues3?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues3?.documents[0].position}\r\n            <h4><b>Тип договора:</b> ЛИСТ СОГЛАСОВАНИЯ НА ЗАКУП ТРУ ДЛЯ ПРОИЗВОДСТВА ПРОДУКЦИИ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование контрагента'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Предмет договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-checkbox'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Radio.Group disabled={props.disabled} onChange={RadioOnChange} options={radioOptions} className='form-radio' value={radioState} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label=\"Общая сумма договора\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"currency\"\r\n                label=\"Валюта платежа\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Валюта платежа\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='executor_name_division'\r\n                label='Наименование подразделения, фамилия ответственного исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование подразделения, фамилия ответственного исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='executor_phone_number'\r\n                label='Телефон исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Телефон исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='counteragent_contacts'\r\n                label='Контакты контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Контакты контрагента\" />\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            {props?.initialValues3?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> \r\n                            <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> \r\n                            <DeleteFile item={item} dataProps={props} setState={setState} user={user}/>\r\n                            <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues3?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <FromUserEditToApproveConfirm dataProps={props} setState={setState} user={user} />\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> \r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update3;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet FromUserEditToApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите отправить договор на согласование?');\r\n\r\n    const confirm = () => {\r\n        dataProps.handleRouteFromUserEditToApprove4()\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n            >\r\n                Отправить на согласование\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default FromUserEditToApproveConfirm;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Radio, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\nimport FromUserEditToApproveConfirm from './dialogs/FromUserEditToApproveConfirm';\r\nimport DeleteFile from '../../common/DeleteFile';\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form4.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n                position: props.initialValues4.documents[0].position,\r\n                username: props.initialValues4.documents[0].username,\r\n                fio: props.initialValues4.documents[0].fio,\r\n\r\n                price: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.price,\r\n                subject: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.subject,\r\n                currency: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.currency,\r\n                executor_name_division: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues4.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues4.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                route: props.initialValues4.documents[0].route_data,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                signatures: props.initialValues4.documents[0].signatures,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues4.documents[0].step })\r\n            setRoutesList(props.initialValues4.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: 'Закупки товаров, работ и услуг' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: 'Передача имущества в аренду (бесплатное пользование)' },\r\n        { label: 'Совместная деятельность', value: 'Совместная деятельность' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: 'Финансирование (кредитование, обеспечение исполнения обязательств)' },\r\n        { label: 'Прочие обязательства', value: 'Прочие обязательства' }\r\n    ]\r\n\r\n    const [radioState, setRadioState] = useState(1);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues4?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues4?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование контрагента'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Предмет договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-checkbox'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Radio.Group disabled={props.disabled} onChange={RadioOnChange} options={radioOptions} className='form-radio' value={radioState} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label=\"Общая сумма договора\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"currency\"\r\n                label=\"Валюта платежа\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Валюта платежа\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='executor_name_division'\r\n                label='Наименование подразделения, фамилия ответственного исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование подразделения, фамилия ответственного исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='executor_phone_number'\r\n                label='Телефон исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Телефон исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name='counteragent_contacts'\r\n                label='Контакты контрагента'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Контакты контрагента\" />\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            {props?.initialValues4?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> \r\n                            <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> \r\n                            <DeleteFile item={item} dataProps={props} setState={setState} user={user}/>\r\n                            <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].signatures.map((item) => {\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues4?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <FromUserEditToApproveConfirm dataProps={props} setState={setState} user={user} />\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> \r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update4;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet FromUserEditToApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите отправить договор на согласование?');\r\n\r\n    const confirm = () => {\r\n        dataProps.handleRouteFromUserEditToApprove5()\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n            >\r\n                Отправить на согласование\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default FromUserEditToApproveConfirm;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Radio, message } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport constants from \"../../../../../../config/constants\";\r\nimport UploadFile from '../../../../modals/UploadFile';\r\n\r\nimport FromUserEditToApproveConfirm from './dialogs/FromUserEditToApproveConfirm';\r\nimport DeleteFile from '../../common/DeleteFile';\r\n\r\nconst { Title, Link } = Typography;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet Update5 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const stepsDirection = useRef('vertical');\r\n    useEffect(() => {\r\n        if (props?.initialValues5?.documents[0]?.route_data?.length > 1)\r\n            stepsDirection.current = props?.initialValues5?.documents[0]?.route_data?.length <= 7 ? 'horizontal' : 'vertical'\r\n    }, [props]);\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form5.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n                position: props.initialValues5.documents[0].position,\r\n                username: props.initialValues5.documents[0].username,\r\n                fio: props.initialValues5.documents[0].fio,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues5.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues5.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                route: props.initialValues5.documents[0].route_data,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                signatures: props.initialValues5.documents[0].signatures,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues5.documents[0].step })\r\n            setRoutesList(props.initialValues5.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish5(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: 'Закупки товаров, работ и услуг' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: 'Передача имущества в аренду (бесплатное пользование)' },\r\n        { label: 'Совместная деятельность', value: 'Совместная деятельность' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: 'Финансирование (кредитование, обеспечение исполнения обязательств)' },\r\n        { label: 'Прочие обязательства', value: 'Прочие обязательства' }\r\n    ]\r\n\r\n    const [radioState, setRadioState] = useState(1);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues5?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues5?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"remark\"\r\n                label='Примечание'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Примечание\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Основание'\r\n                className='form-input-label'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.TextArea rows={4} disabled={props.disabled} placeholder=\"Основание\" />\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/orders\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            {props?.initialValues5?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> \r\n                            <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> \r\n                            <DeleteFile item={item} dataProps={props} setState={setState} user={user}/>\r\n                            <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].signatures.map((item) => {\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps\r\n                    labelPlacement=\"vertical\"\r\n                    size=\"small\"\r\n                    direction={stepsDirection.current}\r\n                    responsive={true}\r\n                    current={stepCount.step - 1}\r\n                    className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues5?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <FromUserEditToApproveConfirm dataProps={props} setState={setState} user={user} />\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> \r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update5;","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Popconfirm } from 'antd';\r\nimport React, { useEffect, useState, useLayoutEffect, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../../core/functions';\r\nimport ModalUpdate from '../../modals/ModalUpdate';\r\nimport TableContainerIsRead from '../../tableContainers/TableContainerIsRead';\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport test from \"../../../../core/functions/test\";\r\n\r\nimport Update1 from './forms/1/Update1';\r\nimport Update2 from './forms/2/Update2';\r\nimport Update3 from './forms/3/Update3';\r\nimport Update4 from './forms/4/Update4';\r\nimport Update5 from './forms/5/Update5';\r\n\r\nlet RevisedPageUser = React.memo((props) => {\r\n    let user = useUser();\r\n    let userVariable = user.id;\r\n    let positionsVariable = user.positions.toString();\r\n\r\n    let documents = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: { user_id: `=${userVariable}`, ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                reason\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    reason\r\n                    status_id\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                files{\r\n                    id\r\n                    filename\r\n                }\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n    mutation setIsReadTrue($document: JSON) {\r\n    setIsReadTrue(document: $document) {\r\n        type\r\n        message\r\n    }\r\n}\r\n`\r\n    };\r\n\r\n    const onVisibilityChange = () => {\r\n        if (document.visibilityState === 'visible') {\r\n            console.log(\"Tab visible, refetch the data!\");\r\n        };\r\n        if (document.visibilityState === 'hidden') {\r\n            console.log(\"Tab hidden, refetch the data!\");\r\n        };\r\n\r\n    };\r\n    useLayoutEffect(() => {\r\n        document.addEventListener(\"visibilitychange\", onVisibilityChange);\r\n    }, []);\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false)\r\n    const visibleModalUpdate3 = useState(false)\r\n    const visibleModalUpdate4 = useState(false)\r\n    const visibleModalUpdate5 = useState(false)\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(documents.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(documents, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route_id: item.route_id.id,\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data ? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step: item.step,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            //document_logs: item.document_logs[item.document_logs.findIndex(item=>item.user_id==user.id)],\r\n            document_logs: item.document_logs ? item.document_logs[item.document_logs.findIndex(item => item.user_id == user.id)] : [],\r\n            //step_name:console.log('DDDDDD',item.step)\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            //step_name: item.route_id?.routes ? item.route_id.routes[item.route_id.routes.findIndex(item => item.positionId == item.step)].positionName : ''\r\n        }\r\n    }) : [];\r\n\r\n    console.log('list', list)\r\n    console.log('data', data)\r\n    //console.log('list2', list2)\r\n\r\n    let listFiltered = list.filter((el) => {\r\n        return el.status_id == 7\r\n    });\r\n    window.localStorage['rows_approved'] = listFiltered.length;\r\n    //console.log('newArray', newArray)\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '214px', type: 'search', tooltip: true, sorter: (a, b) => a.title.localeCompare(b.title) },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_created) - new Date(b.date_created) },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_modified) - new Date(b.date_modified) },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.route.localeCompare(b.route) },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: (a, b) => a.status.localeCompare(b.status) },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n        // { title: 'шаг п.', dataIndex: 'route_step', width: '55px' }\r\n    ]);\r\n\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <ModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} GQL={documents} UpdateForm={Update1}\r\n                    visibleModalUpdate2={visibleModalUpdate2} GQL2={documents} UpdateForm2={Update2}\r\n                    visibleModalUpdate3={visibleModalUpdate3} GQL3={documents} UpdateForm3={Update3}\r\n                    visibleModalUpdate4={visibleModalUpdate4} GQL4={documents} UpdateForm4={Update4}\r\n                    visibleModalUpdate5={visibleModalUpdate5} GQL5={documents} UpdateForm5={Update5}\r\n                    title='Просмотр документа' selectedRowKeys={tableProps.selectedRowKeys}\r\n                    update={true} width={750} />,\r\n                <Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[documents.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    {user.documentControl.delete ?\r\n                        <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 2}><DeleteOutlined />Удалить</Button> : null}\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainerIsRead\r\n            data={{ dict, records: listFiltered }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            visibleModalUpdate2={visibleModalUpdate2}\r\n            visibleModalUpdate3={visibleModalUpdate3}\r\n            visibleModalUpdate4={visibleModalUpdate4}\r\n            visibleModalUpdate5={visibleModalUpdate5}\r\n            GQL={documents}\r\n        />\r\n    )\r\n});\r\n\r\nexport default RevisedPageUser;","import React, { useEffect} from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nimport \"./TestPrint.css\";\r\n\r\nconst TestPrint = React.forwardRef((props, ref) => {\r\n\r\n        //document.body.style.border = \"5px solid black\";\r\n\r\n\r\n    const data = JSON.parse(window.sessionStorage['data']);\r\n\r\n    /*\r\n    const elements = ['one', 'two', 'three'];\r\n    let items = [];\r\n    for (const [index, value] of elements.entries()) {\r\n        items.push(<li key={index}>{value}</li>)\r\n    }\r\n    */\r\n\r\n    return (\r\n        <div ref={ref} style={{ margin: 20 }}>\r\n            <div className='page'>\r\n                <div className='subpagepage'>\r\n                    <b>TEST 1</b>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                </div>\r\n                <div className='subpagepage'>\r\n                    <b>TEST 2</b>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                    <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                </div>\r\n            </div>\r\n            <div className='page'>\r\n                <b>TEST 3</b>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n            </div>\r\n            <div className='page'>\r\n                <b>TEST 4</b>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n                <h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1><h1>{data.title.value}</h1>\r\n\r\n                <table>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th>Contact</th>\r\n                        <th>Country</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Centro comercial Moctezuma</td>\r\n                        <td>Francisco Chang</td>\r\n                        <td>Mexico</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alfreds Futterkiste</td>\r\n                        <td>Maria Anders</td>\r\n                        <td>Germany</td>\r\n                    </tr>\r\n                </table>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n})\r\n\r\nexport default TestPrint;\r\n","import React, { useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { Button } from \"antd\";\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport TestPrint from \"./reports/test/TestPrint\"\r\n\r\n\r\nfunction Print() {\r\n    let componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        //content: () => componentRef.current\r\n        content: () => {\r\n            const extra = componentRef.current.cloneNode(true);\r\n            const PrintElem = document.createElement('div');\r\n            {/*const header =\r\n                `<div class=\"page-header\"><p>I'm The header</p></div>` +\r\n                `<div class=\"page-footer\"><p>I'm The Footer</p></div>`;\r\n            PrintElem.innerHTML = header;*/}\r\n            PrintElem.appendChild(extra);\r\n            return PrintElem;\r\n        },\r\n    });\r\n    let data = {\r\n        title: { value: 'Тестовая печатная форма', label: 'Заголовок' },\r\n        fio: { value: 'Иванов Иван Петрович', label: 'ФИО' },\r\n        agreement: { value: \"Поставка оборудования\", label: 'Договор'},\r\n        date: { value: \"12.02.2022\", label: 'Дата'}\r\n    }\r\n    window.sessionStorage['data'] = JSON.stringify(data)\r\n\r\n    return (\r\n        <div>\r\n            <span style={{ display: \"none\" }}>\r\n                <TestPrint ref={componentRef} />\r\n            </span>\r\n            <Button onClick={handlePrint}>Печать</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Print;\r\n","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nimport  Print from '../../../../../../core/print/Print'\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                //document_logs: props.initialValues.documents[0].document_logs,\r\n                document_logs: {is_read:true},\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues', props.initialValues)\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues2?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues2?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование ТРУ: </Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Поставщик ТРУ: </Col> <Col span={12}>{state.supllier}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание: </Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                {/* <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps> */}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteForward}>\r\n                        Согласовать\r\n                    </Button>\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteBackward}>Вернуть на доработку</Button>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleStatusCancelled}>Отклонить</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> */}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Print/>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update1;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form2.setFieldsValue(state) }, [state]);\r\n    console.log(\"PROPS UPDATE DOC 2\", props)\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                //document_logs: props.initialValues.documents[0].document_logs,\r\n                document_logs: { is_read: true },\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues2', props.initialValues2)\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues2?.documents[0]?.data_agreement_list[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues2?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues2?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Общая сумма договора в валюте цены договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Общая сумма договора в тенге, по курсу НБ РК:</Col> <Col span={12}>{state.currency_price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента:</Col> <Col span={12}>{state.sider_signatures_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Дата получение проекта договора, способ получения от контрагента:</Col> <Col span={12}>{state.received_from_counteragent_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                {/* <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps> */}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues2?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteForward2}>\r\n                        Согласовать\r\n                    </Button>\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteBackward2}>Вернуть на доработку</Button>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleStatusCancelled}>Отклонить</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> */}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update2;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form3.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n                position: props.initialValues3.documents[0].position,\r\n                username: props.initialValues3.documents[0].username,\r\n                fio: props.initialValues3.documents[0].fio,\r\n\r\n                price: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.price,\r\n                subject: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.subject,\r\n                currency: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.currency,\r\n                executor_name_division: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues3.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues3.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                route: props.initialValues3.documents[0].route_data,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                signatures: props.initialValues3.documents[0].signatures,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues3?.documents[0]?.data_agreement_list_production[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues3?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form4.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n                position: props.initialValues4.documents[0].position,\r\n                username: props.initialValues4.documents[0].username,\r\n                fio: props.initialValues4.documents[0].fio,\r\n\r\n                price: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.price,\r\n                subject: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.subject,\r\n                currency: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.currency,\r\n                executor_name_division: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues4.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues4.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                route: props.initialValues4.documents[0].route_data,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                signatures: props.initialValues4.documents[0].signatures,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues4?.documents[0]?.data_agreement_list_internal_needs[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n            form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues4?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update5 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form5.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n                position: props.initialValues5.documents[0].position,\r\n                username: props.initialValues5.documents[0].username,\r\n                fio: props.initialValues5.documents[0].fio,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues5.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues5.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                route: props.initialValues5.documents[0].route_data,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                signatures: props.initialValues5.documents[0].signatures,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues5?.documents[0]?.data_custom[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n            form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Другой</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Примечание:</Col> <Col span={12}>{state.remark}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues5?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update5;","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation, useSubscription } from '@apollo/client';\r\nimport { Button, Popconfirm } from 'antd';\r\nimport React, { useEffect, useState, useLayoutEffect, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser, notifyMe } from '../../../../core/functions';\r\nimport ModalUpdate from '../../modals/ModalUpdate';\r\nimport TableContainerIsRead from '../../tableContainers/TableContainerIsRead';\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport test from \"../../../../core/functions/test\";\r\n\r\n\r\nimport Update1 from './forms/1/Update1';\r\nimport Update2 from './forms/2/Update2';\r\nimport Update3 from './forms/3/Update3';\r\nimport Update4 from './forms/4/Update4';\r\nimport Update5 from './forms/5/Update5';\r\n\r\nlet sendNotification = async () => {\r\n    const tmp = await fetch('/api/notifications', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n            { items: true }\r\n        )\r\n    })\r\n    const content = await tmp.json();\r\n}\r\n\r\nlet ApprovedPageUser = React.memo((props) => {\r\n    let user = useUser();\r\n    let userVariable = user.id;\r\n    let positionsVariable = user.positions.toString();\r\n\r\n    let documents = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: { user_id: `=${userVariable}`, ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                reason\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    reason\r\n                    status_id\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n        ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n    mutation setIsReadTrue($document: JSON) {\r\n    setIsReadTrue(document: $document) {\r\n        type\r\n        message\r\n    }\r\n}\r\n`\r\n    };\r\n\r\n\r\n    /*const onVisibilityChange = () => {\r\n        if (document.visibilityState === 'visible') {\r\n            console.log(\"Tab reopened, refetch the data!\");\r\n        }\r\n    };\r\n    useLayoutEffect(() => {\r\n        document.addEventListener(\"visibilitychange\", onVisibilityChange);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", onVisibilityChange);\r\n    }, []);*/\r\n\r\n    const onVisibilityChange = () => {\r\n        if (document.visibilityState === 'visible') {\r\n            console.log(\"Tab visible, refetch the data!\");\r\n        };\r\n        if (document.visibilityState === 'hidden') {\r\n            console.log(\"Tab hidden, refetch the data!\");\r\n        };\r\n\r\n    };\r\n    useLayoutEffect(() => {\r\n        document.addEventListener(\"visibilitychange\", onVisibilityChange);\r\n    }, []);\r\n\r\n    //subscriptions\r\n    const count = useRef(0);\r\n    /*const { data: dataSub, loading: loadingSub } = useSubscription(\r\n        documents.subscription.all[0],\r\n        {\r\n            variables: { document_logs: { global: { is_read: '=false', ORDER_BY: ['date_created desc'] } } },\r\n            onSubscriptionData: ({ subscriptionData: { data } }) => {\r\n                if (data.documents.length > count.current) {\r\n                    count.current = data.documents.length;\r\n                    console.log('notification', data, count.current)\r\n                    sendNotification();\r\n                    notifyMe('Есть новые входящие сообщения 33333');\r\n                }\r\n            }\r\n        }\r\n    );*/\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false)\r\n    const visibleModalUpdate3 = useState(false)\r\n    const visibleModalUpdate4 = useState(false)\r\n    const visibleModalUpdate5 = useState(false)\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(documents.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(documents, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        count.current = data.documents.length;\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route_id: item.route_id.id,\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data ? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step: item.step,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            //document_logs: item.document_logs[item.document_logs.findIndex(item=>item.user_id==user.id)],\r\n            document_logs: item.document_logs ? item.document_logs[item.document_logs.findIndex(item => item.user_id == user.id)] : [],\r\n            //step_name:console.log('DDDDDD',item.step)\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            //step_name: item.route_id?.routes ? item.route_id.routes[item.route_id.routes.findIndex(item => item.positionId == item.step)].positionName : ''\r\n        }\r\n    }) : [];\r\n\r\n    let listFiltered = list.filter((el) => {\r\n        return el.status_id == 4\r\n    });\r\n    window.localStorage['rows_approved'] = listFiltered.length;\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '214px', type: 'search', tooltip: true, sorter: (a, b) => a.title.localeCompare(b.title) },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_created) - new Date(b.date_created) },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_modified) - new Date(b.date_modified) },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.route.localeCompare(b.route) },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: (a, b) => a.status.localeCompare(b.status) },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n        // { title: 'шаг п.', dataIndex: 'route_step', width: '55px' }\r\n    ]);\r\n\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <ModalUpdate \r\n                visibleModalUpdate={visibleModalUpdate} GQL={documents} UpdateForm={Update1}\r\n                visibleModalUpdate2={visibleModalUpdate2} GQL2={documents} UpdateForm2={Update2}\r\n                visibleModalUpdate3={visibleModalUpdate3} GQL3={documents} UpdateForm3={Update3}\r\n                visibleModalUpdate4={visibleModalUpdate4} GQL4={documents} UpdateForm4={Update4}\r\n                visibleModalUpdate5={visibleModalUpdate5} GQL5={documents} UpdateForm5={Update5}\r\n                title='Просмотр документа' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                <Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[documents.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    {user.documentControl.delete ?\r\n                        <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 2}><DeleteOutlined />Удалить</Button> : null}\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainerIsRead\r\n            data={{ dict, records: listFiltered }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            visibleModalUpdate2={visibleModalUpdate2}\r\n            visibleModalUpdate3={visibleModalUpdate3}\r\n            visibleModalUpdate4={visibleModalUpdate4}\r\n            visibleModalUpdate5={visibleModalUpdate5}\r\n            GQL={documents}\r\n        />\r\n    )\r\n});\r\n\r\nexport default ApprovedPageUser;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps  } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                document_logs: { is_read: true },\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование ТРУ: </Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Поставщик ТРУ: </Col> <Col span={12}>{state.supllier}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание: </Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                {/* <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps> */}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteForward}>\r\n                        Согласовать\r\n                    </Button>\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteBackward}>Вернуть на доработку</Button>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleStatusCancelled}>Отклонить</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> */}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\nlet DocumentsFormUpdate2 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    console.log(\"PROPS UPDATE DOC 2\",props)\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n\r\n                price: props.initialValues.documents[0].data_agreement_list[0].price,\r\n                supllier: props.initialValues.documents[0].data_agreement_list[0].supllier,\r\n                subject: props.initialValues.documents[0].data_agreement_list[0].subject,\r\n\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                route: props.initialValues.documents[0].route_id.routes,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                document_logs: props.initialValues.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues', props.initialValues)\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_id.routes)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues?.documents[0].position}\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование ТРУ2'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование ТРУ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"supllier\"\r\n                label='Поставщик ТРУ'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Поставщик ТРУ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='\"Основание'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Основание\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label='\"Общая сумма договора'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                {/* <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps> */}\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteForward}>\r\n                        Согласовать\r\n                    </Button>\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteBackward}>Вернуть на доработку</Button>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleStatusCancelled}>Отклонить</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update1;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form2.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    console.log(\"PROPS UPDATE DOC 2\",props)\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                //document_logs: props.initialValues.documents[0].document_logs,\r\n                document_logs: { is_read: true },\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues2', props.initialValues2)\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues2?.documents[0]?.data_agreement_list[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues2?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues2?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Общая сумма договора в валюте цены договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Общая сумма договора в тенге, по курсу НБ РК:</Col> <Col span={12}>{state.currency_price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента:</Col> <Col span={12}>{state.sider_signatures_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}>Дата получение проекта договора, способ получения от контрагента:</Col> <Col span={12}>{state.received_from_counteragent_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                {/* <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps> */}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues2?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteForward2}>\r\n                        Согласовать\r\n                    </Button>\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteBackward2}>Вернуть на доработку</Button>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleStatusCancelled}>Отклонить</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> */}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update2;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form3.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n                position: props.initialValues3.documents[0].position,\r\n                username: props.initialValues3.documents[0].username,\r\n                fio: props.initialValues3.documents[0].fio,\r\n\r\n                price: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.price,\r\n                subject: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.subject,\r\n                currency: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.currency,\r\n                executor_name_division: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues3.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues3.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                route: props.initialValues3.documents[0].route_data,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                signatures: props.initialValues3.documents[0].signatures,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues3?.documents[0]?.data_agreement_list_production[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues3?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form4.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n                position: props.initialValues4.documents[0].position,\r\n                username: props.initialValues4.documents[0].username,\r\n                fio: props.initialValues4.documents[0].fio,\r\n\r\n                price: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.price,\r\n                subject: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.subject,\r\n                currency: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.currency,\r\n                executor_name_division: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues4.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues4.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                route: props.initialValues4.documents[0].route_data,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                signatures: props.initialValues4.documents[0].signatures,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues4?.documents[0]?.data_agreement_list_internal_needs[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n            form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues4?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update5 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form5.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n                position: props.initialValues5.documents[0].position,\r\n                username: props.initialValues5.documents[0].username,\r\n                fio: props.initialValues5.documents[0].fio,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues5.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues5.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                route: props.initialValues5.documents[0].route_data,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                signatures: props.initialValues5.documents[0].signatures,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish5(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues5?.documents[0]?.data_custom[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n            form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Другой</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Примечание:</Col> <Col span={12}>{state.remark}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues5?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update5;","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation, useSubscription } from '@apollo/client';\r\nimport { Button, Popconfirm } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser, notifyMe } from '../../../../core/functions';\r\nimport ModalUpdate from '../../modals/ModalUpdate';\r\nimport TableContainerIsRead from '../../tableContainers/TableContainerIsRead';\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport test from \"../../../../core/functions/test\";\r\n\r\nimport Update1 from './forms/1/Update1';\r\nimport Update2 from './forms/2/Update2';\r\nimport Update3 from './forms/3/Update3';\r\nimport Update4 from './forms/4/Update4';\r\nimport Update5 from './forms/5/Update5';\r\n\r\nlet sendNotification = async () => {\r\n    const tmp = await fetch('/api/notifications', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n            { items: true }\r\n        )\r\n    })\r\n    const content = await tmp.json();\r\n}\r\n\r\nlet RejectedDocumentsUser = React.memo((props) => {\r\n    let user = useUser();\r\n    let userVariable = user.id;\r\n    let positionsVariable = user.positions.toString();\r\n\r\n    let documents = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: { user_id: `=${userVariable}`, ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                subject\r\n                date_created\r\n                date_modified\r\n                reason\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    reason\r\n                    status_id\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n    mutation setIsReadTrue($document: JSON) {\r\n    setIsReadTrue(document: $document) {\r\n        type\r\n        message\r\n    }\r\n}\r\n`\r\n    };\r\n\r\n    const count = useRef(0);\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false)\r\n    const visibleModalUpdate3 = useState(false)\r\n    const visibleModalUpdate4 = useState(false)\r\n    const visibleModalUpdate5 = useState(false)\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(documents.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(documents, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        count.current = data.documents.length;\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route_id: item.route_id.id,\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data ? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step: item.step,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            //document_logs: item.document_logs[item.document_logs.findIndex(item => item.user_id == user.id)],\r\n            document_logs: item.document_logs ? item.document_logs[item.document_logs.findIndex(item => item.user_id == user.id)] : [],\r\n            //step_name:console.log('DDDDDD',item.step)\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            //step_name: item.route_id?.routes ? item.route_id.routes[item.route_id.routes.findIndex(item => item.positionId == item.step)].positionName : ''\r\n        }\r\n    }) : [];\r\n\r\n    console.log('list', list)\r\n    console.log('data', data)\r\n    //console.log('list2', list2)\r\n\r\n    let listFiltered = list.filter((el) => {\r\n        return el.status_id == 2\r\n    });\r\n    window.localStorage['rows_rejected'] = listFiltered.length;\r\n\r\n    //console.log('newArray', newArray)\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '214px', type: 'search', tooltip: true, sorter: (a, b) => a.title.localeCompare(b.title) },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_created) - new Date(b.date_created) },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_modified) - new Date(b.date_modified) },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.route.localeCompare(b.route) },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: (a, b) => a.status.localeCompare(b.status) },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n        // { title: 'шаг п.', dataIndex: 'route_step', width: '55px' }\r\n    ]);\r\n\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <ModalUpdate \r\n                visibleModalUpdate={visibleModalUpdate} GQL={documents} UpdateForm={Update1}\r\n                visibleModalUpdate2={visibleModalUpdate2} GQL2={documents} UpdateForm2={Update2}\r\n                visibleModalUpdate3={visibleModalUpdate3} GQL3={documents} UpdateForm3={Update3}\r\n                visibleModalUpdate4={visibleModalUpdate4} GQL4={documents} UpdateForm4={Update4}\r\n                visibleModalUpdate5={visibleModalUpdate5} GQL5={documents} UpdateForm5={Update5}\r\n                title='Просмотр документа' selectedRowKeys={tableProps.selectedRowKeys}update={true} width={750} />,\r\n                <Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[documents.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    {user.documentControl.delete ?\r\n                        <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 2}><DeleteOutlined />Удалить</Button> : null}\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <TableContainerIsRead\r\n            data={{ dict, records: listFiltered }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            visibleModalUpdate2={visibleModalUpdate2}\r\n            visibleModalUpdate3={visibleModalUpdate3}\r\n            visibleModalUpdate4={visibleModalUpdate4}\r\n            visibleModalUpdate5={visibleModalUpdate5}\r\n            GQL={documents}\r\n            />\r\n            {/* <h1>Раздел функционирует не полностью, в разработке.</h1> */}\r\n        </>\r\n    )\r\n});\r\n\r\nexport default RejectedDocumentsUser;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues.documents[0].reason ? dataProps.initialValues.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward()\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues.documents[0].reason ? dataProps.initialValues.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues.documents[0].reason ? dataProps.initialValues.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward()\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues.documents[0].reason ? dataProps.initialValues.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                report: props.initialValues.document_tasks[0].report,\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files,\r\n                log_username: state.log_username,\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        // props.onFinish(state)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col> <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование ТРУ: </Col> <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.supllier == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Поставщик ТРУ: </Col> <Col span={12}>{props?.document?.data_one[0]?.supllier}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Основание: </Col> <Col span={12}>{props?.document?.data_one[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора: </Col> <Col span={12}>{props?.document?.data_one[0]?.price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n            {\r\n                (state.status == 2) ?\r\n                    <div>\r\n                        <Divider type={'horizontal'} />\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report ? state.report : ''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                            <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {state.document_tasks_files.map((item) => {\r\n                                    return (<>\r\n                                        <Col span={24} className='document-view-wrap'>\r\n                                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                        </Col>\r\n                                    </>)\r\n                                })}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    : ''\r\n            }\r\n\r\n            {(state?.status == 1 && state?.user_id_created != user.id) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update1","import React, { useEffect, useState } from 'react';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { handlerQuery, getDDMMYYYHHmm, useUser, handlerMutation } from '../../../core/functions';\r\nimport { Modal, Popconfirm, Select, Button, Form, DatePicker, Input, Checkbox, Switch, Row, Col, Divider, Typography } from 'antd';\r\nimport { EyeOutlined } from '@ant-design/icons';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\nlet TasksAddDialog = React.memo((props) => {\r\n    let user = useUser();\r\n    let users = {\r\n        exemplar: 'user',\r\n        table: 'users',\r\n        options: {\r\n            all: {\r\n                variables: {\r\n                    users: { global: { ORDER_BY: ['username asc'] } }\r\n                },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `,\r\n            one: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    password\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        }\r\n    }\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n     `\r\n    }\r\n    const { Link } = Typography;\r\n    const [insert, { loading: documentTasksInsertLoading }] = handlerMutation(useMutation(DocumentTasks.insert))();\r\n    const { loading, data, refetch } = handlerQuery(users, 'all')();\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [state, setState] = useState({});\r\n\r\n    let onFinish = (values) => {\r\n\r\n        let taskData = {\r\n            variables: {\r\n                document_tasks:\r\n                {\r\n                    document_id: props.document.documents[0].id,\r\n                    status: \"1\",\r\n                    is_cancelled: \"false\",\r\n                    note: values.note,\r\n                    deadline: getDDMMYYYHHmm(values.deadline._d),\r\n                    user_id_created: `${user.id}`,\r\n                    fio_created: user.fio,\r\n                    user_id_receiver: `${values.recepient.value}`,\r\n                    fio_receiver: values.recepient.label,\r\n                    route_id: props.document.documents[0].route_id.id,\r\n                    document_options: {\r\n                        title: values.title == undefined ? false : values.title,\r\n                        subject: values.subject == undefined ? false : values.subject,\r\n                        supllier: values.supllier == undefined ? false : values.supllier,\r\n                        price: values.price == undefined ? false : values.price\r\n                    },\r\n                    task_files: `{${values.task_files.map(item => parseInt(item))}}`,\r\n                    // task_files: values.task_files.map(item=>item.toString()),\r\n                    files: values.files\r\n                }\r\n            }\r\n        }\r\n        insert(taskData)\r\n        props.setVisible(false)\r\n        // console.log('taskData-------------', taskData)\r\n        console.log('VALUES-----', values)\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n    useEffect(() => { form.setFieldsValue(state) }, [state]);\r\n\r\n    const onChangeDatePicker = (date, dateString) => {\r\n        // console.log('datep', date, dateString);\r\n    };\r\n\r\n    //checkboxgroup select all \r\n    const CheckboxGroup = Checkbox.Group;\r\n\r\n    let [popconfirmInModalVisible, setPopconfirmInModalVisible] = useState(false)\r\n\r\n    let CheckAll = () => {\r\n        let files = props?.document?.documents[0]?.files.map((item) => { return (item.id) })\r\n        form.setFieldsValue({\r\n            task_files: files\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type='primary'\r\n                onClick={()=>{props.setVisible(true)}}\r\n            >\r\n                <PlusCircleOutlined />Создать\r\n            </Button>\r\n            <Modal\r\n                title={'Создание поручения'}\r\n                visible={props.visible}\r\n                centered\r\n                width={550}\r\n                onOk={() => { }}\r\n                closable={false}\r\n                // onCancel={() => { props.setVisible(false) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                    <Popconfirm\r\n                        title='Вы уверены что хотите закрыть?'\r\n                        // visible={popconfirmInModalVisible}\r\n                        onConfirm={() => {\r\n                            props.setVisible(false)\r\n                            setPopconfirmInModalVisible(false)\r\n                        }}\r\n                        onCancel={() => { setPopconfirmInModalVisible(false) }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\"\r\n                    >\r\n                        <Button key=\"cancel\">Закрыть</Button>\r\n                        {/* <Button key=\"cancel\" onClick={() => { props.setVisible(false) }}>Отмена</Button> */}\r\n                    </Popconfirm>,\r\n                    <Popconfirm\r\n                        title={'Отправить поручение?'}\r\n                        placement=\"topLeft\"\r\n                        disabled={state.recepient ? false : true}\r\n                        onConfirm={async () => {\r\n                            await form.submit();\r\n                        }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\">\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType=\"submit\"\r\n                        >Сохранить</Button>\r\n                    </Popconfirm>\r\n                ]}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name=\"TaskAddForm\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                    autoComplete=\"off\"\r\n                    onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Выберите получателя\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"recepient\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            style={{ width: 100 + \"%\" }}\r\n                            showSearch\r\n                            optionFilterProp=\"children\"\r\n                            filterOption\r\n                            {...props}\r\n                            labelInValue={true}\r\n                        >\r\n                            <Select.Option key={null} value={null}></Select.Option>\r\n                            {data?.users?.map((item, i) => {\r\n                                return (\r\n                                    <Select.Option key={item.id} value={item.id}>\r\n                                        {data?.users[i]?.fio}\r\n                                    </Select.Option>)\r\n                            })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Срок для исполнения до\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"deadline\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <DatePicker\r\n                            locale={locale}\r\n                            format={\"DD-MM-YYYY HH:mm\"}\r\n                            showTime={{ format: \"HH:mm\" }}\r\n                            onChange={onChangeDatePicker}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Задача\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"note\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea rows={5} />\r\n                    </Form.Item>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <h3 className='marginTop marginBottom'><b>Выберите необходимые поля</b></h3>\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={8}>\r\n                            <b>Наименование ТРУ:</b>\r\n                        </Col>\r\n                        <Col span={13}>\r\n                            {props?.document?.documents[0]?.title}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"title\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={8}>\r\n                            <b>Поставщик ТРУ: </b>\r\n                        </Col>\r\n                        <Col span={13}>\r\n                            {props?.document?.documents[0]?.data_one[0]?.supllier}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"supllier\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={8}>\r\n                            <b>Основание: </b>\r\n                        </Col>\r\n                        <Col span={13}>\r\n                            {props?.document?.documents[0]?.data_one[0]?.subject}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"subject\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={8}>\r\n                            <b>Общая стоимость: </b>\r\n                        </Col>\r\n                        <Col span={13}>\r\n                            {props?.document?.documents[0]?.data_one[0]?.price}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={15}>\r\n                            <h3><b>Выберите необходимые Файлы</b></h3>\r\n                        </Col>\r\n                        <Col span={9}>\r\n                            <Button onClick={CheckAll}>Выбрать все файлы</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Item\r\n                        style={{marginTop:'30px'}}\r\n                        name='task_files'\r\n                    >\r\n                        <CheckboxGroup>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {props?.document?.documents[0]?.files.map((item) => {\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <Col span={21}>\r\n                                                <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link>\r\n                                                <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} />\r\n                                            </Col>\r\n                                            <Col span={1}>\r\n                                                <Checkbox value={item.id} defaultChecked={false} />\r\n                                            </Col>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Row>\r\n                        </CheckboxGroup>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TasksAddDialog;","import { Table } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nlet TasksTableContainer = React.memo(({ GQL, ...props }) => {\r\n\r\n    const location = useLocation();\r\n    const { pathname } = location;\r\n\r\n\r\n    let [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    let itemKeys = [];\r\n    if (!props.loading) {\r\n        itemKeys = props.data.records.map((item) => {\r\n            return item.id\r\n        });\r\n    }\r\n    // const [readTrue,  loading ] = handlerMutation(useMutation(GQL.setTaskIsReadTrue))();\r\n\r\n\r\n    const [readTrue, { loading , error }] = useMutation(GQL.setTaskIsReadTrue, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n\r\n    useEffect(() => {\r\n        setSelectedRowKeys(selectedRowKeys.filter((item) => {\r\n            for (var i = 0; i < itemKeys.length; i++) {\r\n                if (itemKeys[i] == item) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }));\r\n    }, [props.data]);\r\n    return (\r\n        <>\r\n            <Table\r\n                className='sd-tables-row-hover'\r\n                // loading={props.loading}\r\n                style={{ minHeight: 168 }}\r\n                columns={props.data.dict}\r\n                dataSource={props.data.records}\r\n                scroll={{ y: 'calc(100vh - 231px)', minX: 500 }}\r\n                size='small'\r\n                title={props.title ? () => (props.title({ selectedRowKeys: selectedRowKeys })) : null}\r\n                // bordered={props.bordered}\r\n                onRow={(record, rowIndex) => {\r\n                    return {\r\n                        onClick: event => {\r\n                            setSelectedRowKeys([record.key, record.document_id, record.route_id])\r\n                        },\r\n                        onDoubleClick: event => {\r\n                            if (record.document_tasks_logs==undefined){\r\n                                // console.log('record IF----', record)\r\n                                props.visibleModalUpdate[1](true)\r\n                            }\r\n                            else{\r\n                                // console.log('record ELSE---', record)\r\n                                props.visibleModalUpdate[1](true)\r\n                                readTrue({ variables: { task: { id: record.document_tasks_logs.id,is_read:true} } }) }\r\n                            }\r\n                    }\r\n                }}\r\n                pagination={{\r\n                    simple: true,\r\n                    pageSize: 10,\r\n                    //defaultCurrent=6, - to check both commented\r\n                    //total={props.data.records.length},\r\n                    showSizeChanger: false\r\n                }}\r\n                rowClassName={(record, index) => {\r\n                    let className = ''\r\n                    if (record?.document_tasks_logs?.is_read == false){\r\n                        className += 'is_read_false'\r\n                    }\r\n                    if (record.key === selectedRowKeys[0]) {\r\n                        return 'ant-table-row ant-table-row-level-0 statusSelected';\r\n                    }\r\n                    return 'ant-table-row ant-table-row-level-0', className;\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TasksTableContainer\r\n\r\n","import { EyeOutlined } from '@ant-design/icons';\r\nimport { useMutation, useQuery, gql } from '@apollo/client';\r\nimport { Button, Form, Modal, message } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../../../core/functions';\r\n\r\n\r\n\r\nlet TaskModalUpdate = React.memo(({ GQL, UpdateForm, ...props }) => {\r\n\r\n    const document = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: {id:`=${props.selectedRowKeys[1]}`,  ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                reason\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n    \r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    reason\r\n                    status_id\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n    mutation setIsReadTrue($document: JSON) {\r\n    setIsReadTrue(document: $document) {\r\n        type\r\n        message\r\n    }\r\n    }\r\n    `\r\n    };\r\n\r\n    const [form] = Form.useForm();\r\n    const [viewMode, setViewMode] = useState(true);\r\n    const [visible, setVisible] = props.visibleModalUpdate ? props.visibleModalUpdate : [];\r\n\r\n    let variables1 = {}; variables1[GQL.table] = GQL.table ? { global: { id: `= ${props.selectedRowKeys[0]}` } } : {};\r\n\r\n    const { loading: loadingOne, data, refetch } = handlerQuery(GQL, 'one', { variables1 })();\r\n\r\n    useEffect(() => { if (visible) { refetch(variables1) }; }, [visible]);\r\n\r\n    // //------------documents\r\n    let documentVariables = { documents: { global: {id:`=${props.selectedRowKeys[1]}`,  ORDER_BY: ['date_created desc'] } } }\r\n    const { loading: loadingData, data:documentData, refetch:refetchData } = handlerQuery(document, 'one', { variables1 })();\r\n    useEffect(() => { if (visible) { refetchData(documentVariables) }; }, [visible]);\r\n    \r\n    let uploadDocuments = async (files) => {\r\n\r\n        console.log(files)\r\n        const filePromises = files.map((file) => {\r\n            // Return a promise per file\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = async (e) => {\r\n                    resolve({ dataFile: e.target.result, fileName: file.name })\r\n                };\r\n                reader.onerror = (error) => {\r\n                    reject(error);\r\n                };\r\n                reader.readAsDataURL(file.originFileObj);\r\n            });\r\n        });\r\n\r\n        // Wait for all promises to be resolved\r\n        const fileInfos = await Promise.all(filePromises);\r\n\r\n        console.log('COMPLETED');\r\n\r\n        // Profit\r\n        return fileInfos;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                disabled={props.selectedRowKeys.length !== 3}\r\n                onClick={() => { setVisible(true) }}\r\n            >\r\n                <EyeOutlined />Просмотр\r\n            </Button>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible}\r\n                width={900}\r\n                onCancel={() => { setVisible(false); setViewMode(true) }}\r\n                footer={null}\r\n            >\r\n                <UpdateForm\r\n                    document={documentData?.documents[0]}\r\n                    initialValues={data}\r\n                    form={form}\r\n                    onFinish={async(values)=>{\r\n                        let variables = {};\r\n                        let base64 = [];\r\n                        if (values?.files?.fileList) {\r\n                            await uploadDocuments(values.files.fileList).then(result => {\r\n                                base64 = result\r\n                            });\r\n                        };\r\n                        values.docs = base64 ? base64 : [];\r\n                        variables[GQL.exemplar] = {id:props.selectedRowKeys[0],status:2, user_id:values.user_id_created}\r\n                        console.log('values-------',values)\r\n                        // update({ variables })\r\n                    }}\r\n                />\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default TaskModalUpdate","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Collapse, Table } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useUser, formatDate, handlerQuery } from '../../../../../../core/functions';\r\nimport TitleMenu from '../../../../../../core/TitleMenu'\r\nimport { gql, useMutation } from '@apollo/client';\r\n\r\n//pop confirm\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n//zip\r\nimport JSZip from \"jszip\"\r\nimport DonwloadMultipleZip from '../../../../../../core/util/DonwloadMultipleZip'\r\n//tasks\r\nimport UpdateTask1 from './UpdateTask1'\r\nimport TasksAddDialog from '../../../../dialogs/TasksAddDialog';\r\nimport TasksTableContainer from '../../tableContainers/TasksTableContainer'\r\nimport TaskModalUpdate from '../../modals/TaskModalUpdate'\r\n\r\n\r\nlet Update1 = React.memo((props) => {\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                        document_options\r\n                        task_files\r\n                        report\r\n                        document_tasks_files{\r\n                            id\r\n                            filename\r\n                            data_file\r\n                            task_id\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                    document_options\r\n                    task_files\r\n                    report\r\n                    document_tasks_files{\r\n                        id\r\n                        filename\r\n                        data_file\r\n                        task_id\r\n                    }\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `,\r\n        setTaskIsReadTrue: gql`\r\n        mutation setTaskIsReadTrue($task: JSON) {\r\n            setTaskIsReadTrue(task: $task){\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `\r\n    }\r\n\r\n    let TasksTitleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <TaskModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} UpdateForm={UpdateTask1} GQL={DocumentTasks}\r\n                    title='Поручение' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                    <TasksAddDialog visible={visible} setVisible={setVisible} document={props.initialValues} />\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    let user = useUser();\r\n\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    const visibleModalUpdate = useState(false);\r\n\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const { Step } = Steps;\r\n    const { Panel } = Collapse;\r\n    const stepsDirection = useRef('vertical');\r\n    useEffect(() => {\r\n        if (props?.initialValues?.documents[0]?.route_data?.length > 1)\r\n            stepsDirection.current = props?.initialValues?.documents[0]?.route_data?.length <= 7 ? 'horizontal' : 'vertical'\r\n    }, [props]);\r\n\r\n    //Tasks\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                reason: props.initialValues.documents[0].reason,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                document_logs: props.initialValues.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n    }\r\n\r\n    //confirmations\r\n    const [reasonText, setReasonText] = useState(props?.initialValues?.documents[0]?.reason);\r\n    const ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    };\r\n\r\n    //collapse\r\n    function callback(key) {\r\n        // console.log(key);\r\n    }\r\n\r\n    const dict = [\r\n        {\r\n            title: 'У кого',\r\n            dataIndex: 'fio_receiver',\r\n            key: 'fio_receiver',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Срок',\r\n            dataIndex: 'deadline',\r\n            key: 'deadline',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'task_statuses',\r\n            key: 'task_statuses',\r\n            width: '150px'\r\n        },\r\n        {\r\n            title: 'Задача',\r\n            dataIndex: 'note',\r\n            key: 'note',\r\n            width: '250px'\r\n        },\r\n    ];\r\n\r\n    /*let imgData =''\r\n\r\n    let zip = new JSZip();\r\n    zip.file(\"Hello.txt\", \"Hello World\\n\");\r\n    let img = zip.folder(\"images\");\r\n    img.file(\"smile.pdf\", imgData, { base64: true });\r\n\r\n    zip.generateAsync({ type: \"blob\" }).then(function (content) {\r\n        // see FileSaver.js\r\n        console.log('content', content)\r\n        let link = document.createElement('a')\r\n        let url = window.URL || window.webkitURL;\r\n        link.href = url.createObjectURL(content) \r\n        link.download = 'test.zip'\r\n        link.click()\r\n        //saveAs(content, \"example.zip\");\r\n    });*/\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={8}> <b>От: </b></Col> <Col span={16}>{props?.initialValues?.documents[0].fio}</Col>\r\n                <Col span={8}><b>Должность: </b></Col> <Col span={16}>{props?.initialValues?.documents[0].position}</Col>\r\n                <Col span={8}><b>Тип договора: </b></Col> <Col span={16}>Закуп ТРУ</Col>\r\n            </Row>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={8}><b>Наименование ТРУ: </b></Col> <Col span={16}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={8}><b>Поставщик ТРУ: </b></Col> <Col span={16}>{state.supllier}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={8}><b>Основание: </b></Col> <Col span={16}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={8}><b>Общая сумма договора: </b></Col> <Col span={16}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                // label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Collapse defaultActiveKey={['2']} onChange={callback}>\r\n                    <Panel header={<b>Прикреплённые файлы</b>} key=\"2\">\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            {props?.initialValues?.documents[0].files.map((item) => {\r\n                                return (<>\r\n                                    <Col span={12} className='document-view-wrap'>\r\n                                        <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                    </Col>\r\n                                </>)\r\n                            })}\r\n                        </Row>\r\n                    </Panel>\r\n                </Collapse>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            {/* <Button onClick={() => { console.log('test') }}>Download Pdf</Button> */}\r\n            {/* <Button onClick={() => { DonwloadMultipleZip(props?.initialValues?.documents[0].files, 'test2.zip') }}>Download Zip</Button> */}\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps\r\n                    labelPlacement=\"vertical\"\r\n                    size=\"small\"\r\n                    direction={stepsDirection.current}\r\n                    responsive={true}\r\n                    current={stepCount.step - 1}\r\n                    className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Divider type={'horizontal'} />\r\n\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" />\r\n                {props?.initialValues?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <Collapse defaultActiveKey={['1']} onChange={callback}>\r\n                <Panel header=\"Созданные мною поручения по данному договору\" key=\"1\">\r\n                    {/* <Button title={'Создать новое поручение по данному договору'} onClick={() => { setVisible(true) }} icon={<PlusOutlined />} /> */}\r\n                    <TasksTableContainer\r\n                        data={{ dict, records: props.documentTasksList }}\r\n                        visibleModalUpdate={visibleModalUpdate}\r\n                        GQL={DocumentTasks}\r\n                        title={TasksTitleMenu}\r\n                    />\r\n                </Panel>\r\n            </Collapse>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={() => { props.HandleComment(props.form) }} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update1;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues2.documents[0].reason ? dataProps.initialValues2.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward2()\r\n        dataProps.form2.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues2.documents[0].reason ? dataProps.initialValues2.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form2.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues2.documents[0].reason ? dataProps.initialValues2.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward2()\r\n        dataProps?.form2?.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues2.documents[0].reason ? dataProps.initialValues2.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps?.form2?.submit()\r\n    };\r\n    \r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import React, { useEffect, useState } from 'react';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { handlerQuery, getDDMMYYYHHmm, useUser, handlerMutation } from '../../../core/functions';\r\nimport { Modal, Popconfirm, Select, Button, Form, DatePicker, Input, Checkbox, Switch, Row, Col, Divider, Typography } from 'antd';\r\nimport { EyeOutlined } from '@ant-design/icons';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\nlet TasksAddDialog2 = React.memo((props) => {\r\n    let user = useUser();\r\n    let users = {\r\n        exemplar: 'user',\r\n        table: 'users',\r\n        options: {\r\n            all: {\r\n                variables: {\r\n                    users: { global: { ORDER_BY: ['username asc'] } }\r\n                },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `,\r\n            one: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    password\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        }\r\n    }\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n     `\r\n    }\r\n    const { Link } = Typography;\r\n    const [insert, { loading: documentTasksInsertLoading }] = handlerMutation(useMutation(DocumentTasks.insert))();\r\n    const { loading, data, refetch } = handlerQuery(users, 'all')();\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [state, setState] = useState({});\r\n\r\n    let onFinish = (values) => {\r\n\r\n        let taskData = {\r\n            variables: {\r\n                document_tasks:\r\n                {\r\n                    document_id: props.document.documents[0].id,\r\n                    status: \"1\",\r\n                    is_cancelled: \"false\",\r\n                    note: values.note,\r\n                    deadline: getDDMMYYYHHmm(values.deadline._d),\r\n                    user_id_created: `${user.id}`,\r\n                    fio_created: user.fio,\r\n                    user_id_receiver: `${values.recepient.value}`,\r\n                    fio_receiver: values.recepient.label,\r\n                    route_id: props.document.documents[0].route_id.id,\r\n                    document_options: {\r\n                        title: values.title == undefined ? false : values.title,\r\n                        subject: values.subject == undefined ? false : values.subject,\r\n                        price: values.price == undefined ? false : values.price,\r\n                        currency_price: values.currency_price == undefined ? false : values.currency_price,\r\n                        executor_name_division: values.executor_name_division == undefined ? false : values.executor_name_division,\r\n                        sider_signatures_date: values.sider_signatures_date == undefined ? false : values.sider_signatures_date,\r\n                        received_from_counteragent_date: values.received_from_counteragent_date == undefined ? false : values.received_from_counteragent_date,\r\n                    },\r\n                    task_files: `{${values.task_files.map(item => parseInt(item))}}`,\r\n                    // task_files: values.task_files.map(item=>item.toString()),\r\n                    files: values.files\r\n                }\r\n            }\r\n        }\r\n        insert(taskData)\r\n        props.setVisible(false)\r\n        console.log('taskData-------------', taskData)\r\n        console.log('VALUES-----', values)\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n    useEffect(() => { form.setFieldsValue(state) }, [state]);\r\n\r\n    const onChangeDatePicker = (date, dateString) => {\r\n        // console.log('datep', date, dateString);\r\n    };\r\n\r\n    //checkboxgroup select all \r\n    const CheckboxGroup = Checkbox.Group;\r\n\r\n    let [popconfirmInModalVisible, setPopconfirmInModalVisible] = useState(false)\r\n\r\n    let CheckAll = () => {\r\n        let files = props?.document?.documents[0]?.files.map((item) => { return (item.id) })\r\n        form.setFieldsValue({\r\n            task_files: files\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type='primary'\r\n                onClick={()=>{props.setVisible(true)}}\r\n            >\r\n                <PlusCircleOutlined />Создать\r\n            </Button>\r\n            <Modal\r\n                title={'Создание поручения'}\r\n                visible={props.visible}\r\n                centered\r\n                width={800}\r\n                onOk={() => { }}\r\n                closable={false}\r\n                // onCancel={() => { props.setVisible(false) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                    <Popconfirm\r\n                        title='Вы уверены что хотите закрыть?'\r\n                        // visible={popconfirmInModalVisible}\r\n                        onConfirm={() => {\r\n                            props.setVisible(false)\r\n                            setPopconfirmInModalVisible(false)\r\n                        }}\r\n                        onCancel={() => { setPopconfirmInModalVisible(false) }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\"\r\n                    >\r\n                        <Button key=\"cancel\">Закрыть</Button>\r\n                        {/* <Button key=\"cancel\" onClick={() => { props.setVisible(false) }}>Отмена</Button> */}\r\n                    </Popconfirm>,\r\n                    <Popconfirm\r\n                        title={'Отправить поручение?'}\r\n                        placement=\"topLeft\"\r\n                        disabled={state.recepient ? false : true}\r\n                        onConfirm={async () => {\r\n                            await form.submit();\r\n                        }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\">\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType=\"submit\"\r\n                        >Сохранить</Button>\r\n                    </Popconfirm>\r\n                ]}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name=\"TaskAddForm\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                    autoComplete=\"off\"\r\n                    onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Выберите получателя\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"recepient\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            style={{ width: 100 + \"%\" }}\r\n                            showSearch\r\n                            optionFilterProp=\"children\"\r\n                            filterOption\r\n                            {...props}\r\n                            labelInValue={true}\r\n                        >\r\n                            <Select.Option key={null} value={null}></Select.Option>\r\n                            {data?.users?.map((item, i) => {\r\n                                return (\r\n                                    <Select.Option key={item.id} value={item.id}>\r\n                                        {data?.users[i]?.fio}\r\n                                    </Select.Option>)\r\n                            })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Срок для исполнения до\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"deadline\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <DatePicker\r\n                            locale={locale}\r\n                            format={\"DD-MM-YYYY HH:mm\"}\r\n                            showTime={{ format: \"HH:mm\" }}\r\n                            onChange={onChangeDatePicker}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Задача\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"note\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea rows={5} />\r\n                    </Form.Item>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <h3 className='marginTop marginBottom'><b>Выберите необходимые поля</b></h3>\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Наименование контрагента:</b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.title}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"title\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{xs:8, sm:16,md:24,lg:32}}>\r\n                        <Col span={13}>\r\n                            <b>Предмет договора:</b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.subject}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                        <Form.Item\r\n                                name=\"subject\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Общая сумма договора в валюте цены договора: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list[0]?.price}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Общая сумма договора в тенге, по курсу НБ РК: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list[0]?.currency_price}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"currency_price\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Наименование подразделения, фамилия ответственного исполнителя: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list[0]?.executor_name_division}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"executor_name_division\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list[0]?.sider_signatures_date}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"sider_signatures_date\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Дата получение проекта договора, способ получения от контрагента: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list[0]?.received_from_counteragent_date}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"received_from_counteragent_date\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={18}>\r\n                            <h3><b>Выберите необходимые Файлы</b></h3>\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Button onClick={CheckAll}>Выбрать все файлы</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Item\r\n                        style={{marginTop:'30px'}}\r\n                        name='task_files'\r\n                    >\r\n                        <CheckboxGroup>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {props?.document?.documents[0]?.files.map((item) => {\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <Col span={21}>\r\n                                                <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link>\r\n                                                <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} />\r\n                                            </Col>\r\n                                            <Col span={1}>\r\n                                                <Checkbox value={item.id} defaultChecked={false} />\r\n                                            </Col>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Row>\r\n                        </CheckboxGroup>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TasksAddDialog2","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                report: props.initialValues.document_tasks[0].report,\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files,\r\n                log_username: state.log_username,\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        // props.onFinish(state)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n             <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n            \r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n            \r\n            \r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col> <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование контрагента: </Col> <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Предмет договора: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора в валюте цены договора: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.currency_price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора в тенге, по курсу НБ РК: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.currency_price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_name_division == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.executor_name_division}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.sider_signatures_date == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.sider_signatures_date}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.sider_signatures_date == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Дата получение проекта договора, способ получения от контрагента: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.received_from_counteragent_date}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n            {\r\n                (state.status == 2) ?\r\n                    <div>\r\n                        <Divider type={'horizontal'} />\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report ? state.report : ''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                            <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {state.document_tasks_files.map((item) => {\r\n                                    return (<>\r\n                                        <Col span={24} className='document-view-wrap'>\r\n                                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                        </Col>\r\n                                    </>)\r\n                                })}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    : ''\r\n            }\r\n\r\n            {(state?.status == 1 && state?.user_id_created != user.id) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update2","import { EyeOutlined } from '@ant-design/icons'\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio, Collapse } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useUser, formatDate } from '../../../../../../core/functions'\r\nimport TitleMenu from '../../../../../../core/TitleMenu'\r\nimport { gql, useMutation } from '@apollo/client'\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm'\r\nimport RejectConfirm from './dialogs/RejectConfirm'\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm'\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm'\r\n\r\n//Tasks\r\nimport TasksTableContainer from '../../tableContainers/TasksTableContainer'\r\nimport TasksAddDialog2 from '../../../../dialogs/TasksAddDialogs2'\r\nimport TaskModalUpdate from '../../modals/TaskModalUpdate'\r\nimport UpdateTask2 from './UpdateTask2'\r\n\r\nlet Update2 = React.memo((props) => {\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                        document_options\r\n                        task_files\r\n                        report\r\n                        document_tasks_files{\r\n                            id\r\n                            filename\r\n                            data_file\r\n                            task_id\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                    document_options\r\n                    task_files\r\n                    report\r\n                    document_tasks_files{\r\n                        id\r\n                        filename\r\n                        data_file\r\n                        task_id\r\n                    }\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `,\r\n        setTaskIsReadTrue: gql`\r\n        mutation setTaskIsReadTrue($task: JSON) {\r\n            setTaskIsReadTrue(task: $task){\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `\r\n    }\r\n\r\n    let TasksTitleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <TaskModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} UpdateForm={UpdateTask2} GQL={DocumentTasks}\r\n                    // visibleModalUpdate={visibleModalUpdate} GQL={DocumentTasks}\r\n                    title='Поручение' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                <TasksAddDialog2 visible={visible} setVisible={setVisible} document={props.initialValues2} />\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n    const { Panel } = Collapse;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n    const visibleModalUpdate = useState(false);\r\n    const [visible, setVisible] = useState(false)\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.form2.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                reason: props.initialValues2.documents[0].reason,\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                document_logs: props.initialValues2.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    const dict = [\r\n        {\r\n            title: 'У кого',\r\n            dataIndex: 'fio_receiver',\r\n            key: 'fio_receiver',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Срок',\r\n            dataIndex: 'deadline',\r\n            key: 'deadline',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'task_statuses',\r\n            key: 'task_statuses',\r\n            width: '150px'\r\n        },\r\n        {\r\n            title: 'Задача',\r\n            dataIndex: 'note',\r\n            key: 'note',\r\n            width: '250px'\r\n        },\r\n    ];\r\n\r\n    //collapse\r\n    function callback(key) {\r\n        // console.log(key);\r\n    }\r\n\r\n    const [reasonText, setReasonText] = useState(props?.initialValues?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: '1' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: '2' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: '3' },\r\n        { label: 'Совместная деятельность', value: '4' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: '5' },\r\n        { label: 'Прочие обязательства', value: '6' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(props?.initialValues2?.documents[0]?.data_agreement_list[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE2 values', allValues) }}\r\n\r\n        >\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}><b>От: </b></Col> <Col span={12}>{props?.initialValues2?.documents[0].fio}</Col>\r\n                <Col span={12}><b>Должность: </b></Col> <Col span={12}>{props?.initialValues2?.documents[0].position}</Col>\r\n                <Col span={12}><b>Тип договора: </b></Col> <Col span={12}>Лист согласования на реализацию готовой продукции</Col>\r\n            </Row>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Наименование контрагента: </b></Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Предмет договора: </b></Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Общая сумма договора в валюте цены договора: </b></Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Общая сумма договора в тенге, по курсу НБ РК: </b></Col> <Col span={12}>{state.currency_price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Наименование подразделения, фамилия ответственного исполнителя: </b></Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента: </b></Col> <Col span={12}>{state.sider_signatures_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Дата получение проекта договора, способ получения от контрагента: </b></Col> <Col span={12}>{state.received_from_counteragent_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                // label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Collapse defaultActiveKey={['2']} onChange={callback}>\r\n                    <Panel header={<b>Прикреплённые файлы</b>} key=\"2\">\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            {props?.initialValues2?.documents[0].files.map((item) => {\r\n                                return (<>\r\n                                    <Col span={12} className='document-view-wrap'>\r\n                                        <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                    </Col>\r\n                                </>)\r\n                            })}\r\n                        </Row>\r\n                    </Panel>\r\n                </Collapse>\r\n\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input disabled={props.disabled} onChange={ReasonInputChange} placeholder=\"Замечание\" />\r\n                {props?.initialValues2?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <Collapse defaultActiveKey={['1']} onChange={callback}>\r\n                <Panel header=\"Созданные мною поручения по данному договору\" key=\"1\">\r\n                    <TasksTableContainer\r\n                        data={{ dict, records: props.documentTasksList }}\r\n                        visibleModalUpdate={visibleModalUpdate}\r\n                        GQL={DocumentTasks}\r\n                        title={TasksTitleMenu}\r\n                    />\r\n                </Panel>\r\n            </Collapse>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update2;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues3.documents[0].reason ? dataProps.initialValues3.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward3()\r\n        dataProps.form3.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues3.documents[0].reason ? dataProps.initialValues3.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form3.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues3.documents[0].reason ? dataProps.initialValues3.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward3()\r\n        dataProps.form3.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues3.documents[0].reason ? dataProps.initialValues3.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps?.form3?.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import React, { useEffect, useState } from 'react';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { handlerQuery, getDDMMYYYHHmm, useUser, handlerMutation } from '../../../core/functions';\r\nimport { Modal, Popconfirm, Select, Button, Form, DatePicker, Input, Checkbox, Switch, Row, Col, Divider, Typography } from 'antd';\r\nimport { EyeOutlined } from '@ant-design/icons';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\nlet TasksAddDialog3 = React.memo((props) => {\r\n    let user = useUser();\r\n    let users = {\r\n        exemplar: 'user',\r\n        table: 'users',\r\n        options: {\r\n            all: {\r\n                variables: {\r\n                    users: { global: { ORDER_BY: ['username asc'] } }\r\n                },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `,\r\n            one: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    password\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        }\r\n    }\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n     `\r\n    }\r\n    const { Link } = Typography;\r\n    const [insert, { loading: documentTasksInsertLoading }] = handlerMutation(useMutation(DocumentTasks.insert))();\r\n    const { loading, data, refetch } = handlerQuery(users, 'all')();\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [state, setState] = useState({});\r\n\r\n    let onFinish = (values) => {\r\n\r\n        let taskData = {\r\n            variables: {\r\n                document_tasks:\r\n                {\r\n                    document_id: props.document.documents[0].id,\r\n                    status: \"1\",\r\n                    is_cancelled: \"false\",\r\n                    note: values.note,\r\n                    deadline: getDDMMYYYHHmm(values.deadline._d),\r\n                    user_id_created: `${user.id}`,\r\n                    fio_created: user.fio,\r\n                    user_id_receiver: `${values.recepient.value}`,\r\n                    fio_receiver: values.recepient.label,\r\n                    route_id: props.document.documents[0].route_id.id,\r\n                    document_options: {\r\n                        title: values.title == undefined ? false : values.title,\r\n                        subject: values.subject == undefined ? false : values.subject,\r\n                        price: values.price == undefined ? false : values.price,\r\n                        currency: values.currency_price == undefined ? false : values.currency_price,\r\n                        executor_name_division: values.executor_name_division == undefined ? false : values.executor_name_division,\r\n                        executor_phone_number: values.executor_phone_number == undefined ? false : values.executor_phone_number,\r\n                        counteragent_contacts: values.counteragent_contacts == undefined ? false : values.counteragent_contacts,\r\n                    },\r\n                    task_files: `{${values.task_files.map(item => parseInt(item))}}`,\r\n                    files: values.files\r\n                }\r\n            }\r\n        }\r\n        insert(taskData)\r\n        props.setVisible(false)\r\n        console.log('taskData-------------', taskData)\r\n        console.log('VALUES-----', values)\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n    useEffect(() => { form.setFieldsValue(state) }, [state]);\r\n\r\n    const onChangeDatePicker = (date, dateString) => {\r\n        // console.log('datep', date, dateString);\r\n    };\r\n\r\n    //checkboxgroup select all \r\n    const CheckboxGroup = Checkbox.Group;\r\n\r\n    let [popconfirmInModalVisible, setPopconfirmInModalVisible] = useState(false)\r\n\r\n    let CheckAll = () => {\r\n        let files = props?.document?.documents[0]?.files.map((item) => { return (item.id) })\r\n        form.setFieldsValue({\r\n            task_files: files\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type='primary'\r\n                onClick={()=>{props.setVisible(true)}}\r\n            >\r\n                <PlusCircleOutlined />Создать\r\n            </Button>\r\n            <Modal\r\n                title={'Создание поручения'}\r\n                visible={props.visible}\r\n                centered\r\n                width={800}\r\n                onOk={() => { }}\r\n                closable={false}\r\n                // onCancel={() => { props.setVisible(false) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                    <Popconfirm\r\n                        title='Вы уверены что хотите закрыть?'\r\n                        // visible={popconfirmInModalVisible}\r\n                        onConfirm={() => {\r\n                            props.setVisible(false)\r\n                            setPopconfirmInModalVisible(false)\r\n                        }}\r\n                        onCancel={() => { setPopconfirmInModalVisible(false) }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\"\r\n                    >\r\n                        <Button key=\"cancel\">Закрыть</Button>\r\n                        {/* <Button key=\"cancel\" onClick={() => { props.setVisible(false) }}>Отмена</Button> */}\r\n                    </Popconfirm>,\r\n                    <Popconfirm\r\n                        title={'Отправить поручение?'}\r\n                        placement=\"topLeft\"\r\n                        disabled={state.recepient ? false : true}\r\n                        onConfirm={async () => {\r\n                            await form.submit();\r\n                        }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\">\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType=\"submit\"\r\n                        >Сохранить</Button>\r\n                    </Popconfirm>\r\n                ]}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name=\"TaskAddForm\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                    autoComplete=\"off\"\r\n                    onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Выберите получателя\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"recepient\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            style={{ width: 100 + \"%\" }}\r\n                            showSearch\r\n                            optionFilterProp=\"children\"\r\n                            filterOption\r\n                            {...props}\r\n                            labelInValue={true}\r\n                        >\r\n                            <Select.Option key={null} value={null}></Select.Option>\r\n                            {data?.users?.map((item, i) => {\r\n                                return (\r\n                                    <Select.Option key={item.id} value={item.id}>\r\n                                        {data?.users[i]?.fio}\r\n                                    </Select.Option>)\r\n                            })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Срок для исполнения до\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"deadline\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <DatePicker\r\n                            locale={locale}\r\n                            format={\"DD-MM-YYYY HH:mm\"}\r\n                            showTime={{ format: \"HH:mm\" }}\r\n                            onChange={onChangeDatePicker}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Задача\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"note\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea rows={5} />\r\n                    </Form.Item>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <h3 className='marginTop marginBottom'><b>Выберите необходимые поля</b></h3>\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Наименование контрагента:</b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.title}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"title\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{xs:8, sm:16,md:24,lg:32}}>\r\n                        <Col span={13}>\r\n                            <b>Предмет договора:</b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_production[0]?.subject}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                        <Form.Item\r\n                                name=\"subject\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Общая сумма договора: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_production[0]?.price}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Валюта платежа: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_production[0]?.currency}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"currency\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Наименование подразделения, фамилия ответственного исполнителя: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_production[0]?.executor_name_division}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"executor_name_division\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Телефон исполнителя: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_production[0]?.executor_phone_number}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"executor_phone_number\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Контакты контрагента: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_production[0]?.counteragent_contacts}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"counteragent_contacts\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={18}>\r\n                            <h3><b>Выберите необходимые Файлы</b></h3>\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Button onClick={CheckAll}>Выбрать все файлы</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Item\r\n                        style={{marginTop:'30px'}}\r\n                        name='task_files'\r\n                    >\r\n                        <CheckboxGroup>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {props?.document?.documents[0]?.files.map((item) => {\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <Col span={21}>\r\n                                                <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link>\r\n                                                <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} />\r\n                                            </Col>\r\n                                            <Col span={1}>\r\n                                                <Checkbox value={item.id} defaultChecked={false} />\r\n                                            </Col>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Row>\r\n                        </CheckboxGroup>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TasksAddDialog3","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                report: props.initialValues.document_tasks[0].report,\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files,\r\n                log_username: state.log_username,\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        // props.onFinish(state)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n             <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created} AAAAAAAAA</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n            \r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n            \r\n            \r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col> <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование контрагента: </Col> <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Предмет договора: </Col> <Col span={12}>{props?.document?.data_agreement_list_production[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора: </Col> <Col span={12}>{props?.document?.data_agreement_list_production[0]?.price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.currency == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Валюта платежа: </Col> <Col span={12}>{props?.document?.data_agreement_list_production[0]?.currency}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_name_division == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя: </Col> <Col span={12}>{props?.document?.data_agreement_list_production[0]?.executor_name_division}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_phone_number == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Телефон исполнителя: </Col> <Col span={12}>{props?.document?.data_agreement_list_production[0]?.executor_phone_number}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.counteragent_contacts == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Контакты контрагента: </Col> <Col span={12}>{props?.document?.data_agreement_list_production[0]?.counteragent_contacts}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n            {\r\n                (state.status == 2) ?\r\n                    <div>\r\n                        <Divider type={'horizontal'} />\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report ? state.report : ''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                            <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {state.document_tasks_files.map((item) => {\r\n                                    return (<>\r\n                                        <Col span={24} className='document-view-wrap'>\r\n                                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                        </Col>\r\n                                    </>)\r\n                                })}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    : ''\r\n            }\r\n\r\n            {(state?.status == 1 && state?.user_id_created != user.id) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio, Collapse } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport TitleMenu from '../../../../../../core/TitleMenu'\r\nimport { gql, useMutation } from '@apollo/client'\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n//Tasks\r\nimport TasksTableContainer from '../../tableContainers/TasksTableContainer'\r\nimport TasksAddDialog3 from '../../../../dialogs/TasksAddDialog3'\r\nimport TaskModalUpdate from '../../modals/TaskModalUpdate'\r\nimport UpdateTask3 from './UpdateTask3'\r\n\r\nlet Update3 = React.memo((props) => {\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                        document_options\r\n                        task_files\r\n                        report\r\n                        document_tasks_files{\r\n                            id\r\n                            filename\r\n                            data_file\r\n                            task_id\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                    document_options\r\n                    task_files\r\n                    report\r\n                    document_tasks_files{\r\n                        id\r\n                        filename\r\n                        data_file\r\n                        task_id\r\n                    }\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `,\r\n        setTaskIsReadTrue: gql`\r\n        mutation setTaskIsReadTrue($task: JSON) {\r\n            setTaskIsReadTrue(task: $task){\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `\r\n    }\r\n\r\n    let TasksTitleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <TaskModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} UpdateForm={UpdateTask3} GQL={DocumentTasks}\r\n                    title='Поручение' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                <TasksAddDialog3 visible={visible} setVisible={setVisible} document={props.initialValues3} />\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n    const { Panel } = Collapse;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n    const visibleModalUpdate = useState(false);\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.form3.setFieldsValue(state);\r\n\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n                position: props.initialValues3.documents[0].position,\r\n                username: props.initialValues3.documents[0].username,\r\n                fio: props.initialValues3.documents[0].fio,\r\n\r\n                price: props.initialValues3.documents[0].data_agreement_list_production[0].price,\r\n                subject: props.initialValues3.documents[0].data_agreement_list_production[0].subject,\r\n                currency: props.initialValues3.documents[0].data_agreement_list_production[0].currency,\r\n                executor_name_division: props.initialValues3.documents[0].data_agreement_list_production[0].executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0].data_agreement_list_production[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0].data_agreement_list_production[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues3.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues3.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                route: props.initialValues3.documents[0].route_data,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                signatures: props.initialValues3.documents[0].signatures,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues3.documents[0].step })\r\n            setRoutesList(props.initialValues3.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    const dict = [\r\n        {\r\n            title: 'У кого',\r\n            dataIndex: 'fio_receiver',\r\n            key: 'fio_receiver',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Срок',\r\n            dataIndex: 'deadline',\r\n            key: 'deadline',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'task_statuses',\r\n            key: 'task_statuses',\r\n            width: '150px'\r\n        },\r\n        {\r\n            title: 'Задача',\r\n            dataIndex: 'note',\r\n            key: 'note',\r\n            width: '250px'\r\n        },\r\n    ];\r\n\r\n    //collapse\r\n    function callback(key) {\r\n        // console.log(key);\r\n    }\r\n\r\n    const [reasonText, setReasonText] = useState(props?.initialValues3?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: '1' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: '2' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: '3' },\r\n        { label: 'Совместная деятельность', value: '4' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: '5' },\r\n        { label: 'Прочие обязательства', value: '6' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(props?.initialValues3?.documents[0]?.data_agreement_list_production[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE3 values', allValues) }}\r\n\r\n        >\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={12}><b>От: </b></Col> <Col span={12}>{props?.initialValues3?.documents[0].fio}</Col>\r\n                <Col span={12}><b>Должность: </b></Col> <Col span={12}>{props?.initialValues3?.documents[0].position}</Col>\r\n                <Col span={12}><b>Тип договора: </b></Col> <Col span={12}>Лист согласования на реализацию готовой продукции</Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Наименование контрагента: </b></Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Предмет договора: </b></Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Общая сумма договора: </b></Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Валюта платежа: </b></Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Наименование подразделения, фамилия ответственного исполнителя: </b></Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Телефон исполнителя: </b></Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Контакты контрагента: </b></Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                // label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Collapse defaultActiveKey={['2']} onChange={callback}>\r\n                    <Panel header={<b>Прикреплённые файлы</b>} key=\"2\">\r\n                        {props?.initialValues3?.documents[0].files.map((item) => {\r\n                            return (<>\r\n                                <div className='document-view-wrap'>\r\n                                    <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                </div>\r\n                            </>)\r\n                        })}\r\n                    </Panel>\r\n                </Collapse>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Divider type={'horizontal'} />\r\n            \r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" />\r\n                {props?.initialValues3?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n\r\n            <Collapse defaultActiveKey={['1']} onChange={callback}>\r\n                <Panel header=\"Созданные мною поручения по данному договору\" key=\"1\">\r\n                <TasksTableContainer\r\n                        data={{ dict, records: props.documentTasksList }}\r\n                        visibleModalUpdate={visibleModalUpdate}\r\n                        GQL={DocumentTasks}\r\n                        title={TasksTitleMenu}\r\n                    />\r\n                </Panel>\r\n            </Collapse>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues4.documents[0].reason ? dataProps.initialValues4.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward4()\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues4.documents[0].reason ? dataProps.initialValues4.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps?.initialValues4?.documents[0].reason ? dataProps?.initialValues4?.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward4()\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues4.documents[0].reason ? dataProps.initialValues4.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import React, { useEffect, useState } from 'react';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { handlerQuery, getDDMMYYYHHmm, useUser, handlerMutation } from '../../../core/functions';\r\nimport { Modal, Popconfirm, Select, Button, Form, DatePicker, Input, Checkbox, Switch, Row, Col, Divider, Typography } from 'antd';\r\nimport { EyeOutlined } from '@ant-design/icons';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\nlet TasksAddDialog4 = React.memo((props) => {\r\n    let user = useUser();\r\n    let users = {\r\n        exemplar: 'user',\r\n        table: 'users',\r\n        options: {\r\n            all: {\r\n                variables: {\r\n                    users: { global: { ORDER_BY: ['username asc'] } }\r\n                },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `,\r\n            one: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    password\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        }\r\n    }\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n     `\r\n    }\r\n    const { Link } = Typography;\r\n    const [insert, { loading: documentTasksInsertLoading }] = handlerMutation(useMutation(DocumentTasks.insert))();\r\n    const { loading, data, refetch } = handlerQuery(users, 'all')();\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [state, setState] = useState({});\r\n\r\n    let onFinish = (values) => {\r\n\r\n        let taskData = {\r\n            variables: {\r\n                document_tasks:\r\n                {\r\n                    document_id: props.document.documents[0].id,\r\n                    status: \"1\",\r\n                    is_cancelled: \"false\",\r\n                    note: values.note,\r\n                    deadline: getDDMMYYYHHmm(values.deadline._d),\r\n                    user_id_created: `${user.id}`,\r\n                    fio_created: user.fio,\r\n                    user_id_receiver: `${values.recepient.value}`,\r\n                    fio_receiver: values.recepient.label,\r\n                    route_id: props.document.documents[0].route_id.id,\r\n                    document_options: {\r\n                        title: values.title == undefined ? false : values.title,\r\n                        subject: values.subject == undefined ? false : values.subject,\r\n                        price: values.price == undefined ? false : values.price,\r\n                        currency: values.currency_price == undefined ? false : values.currency_price,\r\n                        executor_name_division: values.executor_name_division == undefined ? false : values.executor_name_division,\r\n                        executor_phone_number: values.executor_phone_number == undefined ? false : values.executor_phone_number,\r\n                        counteragent_contacts: values.counteragent_contacts == undefined ? false : values.counteragent_contacts,\r\n                    },\r\n                    task_files: `{${values.task_files.map(item => parseInt(item))}}`,\r\n                    files: values.files\r\n                }\r\n            }\r\n        }\r\n        insert(taskData)\r\n        props.setVisible(false)\r\n        console.log('taskData-------------', taskData)\r\n        console.log('VALUES-----', values)\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n    useEffect(() => { form.setFieldsValue(state) }, [state]);\r\n\r\n    const onChangeDatePicker = (date, dateString) => {\r\n        // console.log('datep', date, dateString);\r\n    };\r\n\r\n    //checkboxgroup select all \r\n    const CheckboxGroup = Checkbox.Group;\r\n\r\n    let [popconfirmInModalVisible, setPopconfirmInModalVisible] = useState(false)\r\n\r\n    let CheckAll = () => {\r\n        let files = props?.document?.documents[0]?.files.map((item) => { return (item.id) })\r\n        form.setFieldsValue({\r\n            task_files: files\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type='primary'\r\n                onClick={()=>{props.setVisible(true)}}\r\n            >\r\n                <PlusCircleOutlined />Создать\r\n            </Button>\r\n            <Modal\r\n                title={'Создание поручения'}\r\n                visible={props.visible}\r\n                centered\r\n                width={800}\r\n                onOk={() => { }}\r\n                closable={false}\r\n                // onCancel={() => { props.setVisible(false) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                    <Popconfirm\r\n                        title='Вы уверены что хотите закрыть?'\r\n                        // visible={popconfirmInModalVisible}\r\n                        onConfirm={() => {\r\n                            props.setVisible(false)\r\n                            setPopconfirmInModalVisible(false)\r\n                        }}\r\n                        onCancel={() => { setPopconfirmInModalVisible(false) }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\"\r\n                    >\r\n                        <Button key=\"cancel\">Закрыть</Button>\r\n                        {/* <Button key=\"cancel\" onClick={() => { props.setVisible(false) }}>Отмена</Button> */}\r\n                    </Popconfirm>,\r\n                    <Popconfirm\r\n                        title={'Отправить поручение?'}\r\n                        placement=\"topLeft\"\r\n                        disabled={state.recepient ? false : true}\r\n                        onConfirm={async () => {\r\n                            await form.submit();\r\n                        }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\">\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType=\"submit\"\r\n                        >Сохранить</Button>\r\n                    </Popconfirm>\r\n                ]}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name=\"TaskAddForm\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                    autoComplete=\"off\"\r\n                    onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Выберите получателя\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"recepient\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            style={{ width: 100 + \"%\" }}\r\n                            showSearch\r\n                            optionFilterProp=\"children\"\r\n                            filterOption\r\n                            {...props}\r\n                            labelInValue={true}\r\n                        >\r\n                            <Select.Option key={null} value={null}></Select.Option>\r\n                            {data?.users?.map((item, i) => {\r\n                                return (\r\n                                    <Select.Option key={item.id} value={item.id}>\r\n                                        {data?.users[i]?.fio}\r\n                                    </Select.Option>)\r\n                            })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Срок для исполнения до\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"deadline\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <DatePicker\r\n                            locale={locale}\r\n                            format={\"DD-MM-YYYY HH:mm\"}\r\n                            showTime={{ format: \"HH:mm\" }}\r\n                            onChange={onChangeDatePicker}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Задача\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"note\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea rows={5} />\r\n                    </Form.Item>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <h3 className='marginTop marginBottom'><b>Выберите необходимые поля</b></h3>\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Наименование контрагента:</b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.title}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"title\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{xs:8, sm:16,md:24,lg:32}}>\r\n                        <Col span={13}>\r\n                            <b>Предмет договора:</b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_internal_needs[0]?.subject}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                        <Form.Item\r\n                                name=\"subject\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Общая сумма договора: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_internal_needs[0]?.price}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Валюта платежа: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_internal_needs[0]?.currency}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"currency\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Наименование подразделения, фамилия ответственного исполнителя: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_internal_needs[0]?.executor_name_division}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"executor_name_division\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Телефон исполнителя: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_internal_needs[0]?.executor_phone_number}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"executor_phone_number\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Контакты контрагента: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_agreement_list_internal_needs[0]?.counteragent_contacts}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"counteragent_contacts\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={18}>\r\n                            <h3><b>Выберите необходимые Файлы</b></h3>\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Button onClick={CheckAll}>Выбрать все файлы</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Item\r\n                        style={{marginTop:'30px'}}\r\n                        name='task_files'\r\n                    >\r\n                        <CheckboxGroup>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {props?.document?.documents[0]?.files.map((item) => {\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <Col span={21}>\r\n                                                <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link>\r\n                                                <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} />\r\n                                            </Col>\r\n                                            <Col span={1}>\r\n                                                <Checkbox value={item.id} defaultChecked={false} />\r\n                                            </Col>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Row>\r\n                        </CheckboxGroup>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TasksAddDialog4","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                report: props.initialValues.document_tasks[0].report,\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files,\r\n                log_username: state.log_username,\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        // props.onFinish(state)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n             <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created} AAAAAAAAA</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n            \r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n            \r\n            \r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col> <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование контрагента: </Col>\r\n                         <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Предмет договора: </Col>\r\n                         <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора: </Col>\r\n                         <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.currency == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Валюта платежа: </Col>\r\n                         <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.currency}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_name_division == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя: </Col>\r\n                         <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.executor_name_division}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_phone_number == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Телефон исполнителя: </Col> \r\n                        <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.executor_phone_number}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.counteragent_contacts == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Контакты контрагента: </Col> \r\n                        <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.counteragent_contacts}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n            {\r\n                (state.status == 2) ?\r\n                    <div>\r\n                        <Divider type={'horizontal'} />\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report ? state.report : ''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                            <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {state.document_tasks_files.map((item) => {\r\n                                    return (<>\r\n                                        <Col span={24} className='document-view-wrap'>\r\n                                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                        </Col>\r\n                                    </>)\r\n                                })}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    : ''\r\n            }\r\n\r\n            {(state?.status == 1 && state?.user_id_created != user.id) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio, Collapse } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport TitleMenu from '../../../../../../core/TitleMenu'\r\nimport { gql, useMutation } from '@apollo/client'\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n//Tasks\r\nimport TasksTableContainer from '../../tableContainers/TasksTableContainer'\r\nimport TasksAddDialog4 from '../../../../dialogs/TasksAddDialog4'\r\nimport TaskModalUpdate from '../../modals/TaskModalUpdate'\r\nimport UpdateTask4 from './UpdateTask4'\r\n\r\nlet Update4 = React.memo((props) => {\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                        document_options\r\n                        task_files\r\n                        report\r\n                        document_tasks_files{\r\n                            id\r\n                            filename\r\n                            data_file\r\n                            task_id\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                    document_options\r\n                    task_files\r\n                    report\r\n                    document_tasks_files{\r\n                        id\r\n                        filename\r\n                        data_file\r\n                        task_id\r\n                    }\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `,\r\n        setTaskIsReadTrue: gql`\r\n        mutation setTaskIsReadTrue($task: JSON) {\r\n            setTaskIsReadTrue(task: $task){\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `\r\n    }\r\n\r\n    let TasksTitleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <TaskModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} UpdateForm={UpdateTask4} GQL={DocumentTasks}\r\n                    title='Поручение' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                <TasksAddDialog4 visible={visible} setVisible={setVisible} document={props.initialValues4} />\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n    const { Panel } = Collapse;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    const visibleModalUpdate = useState(false)\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        props.form4.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n                position: props.initialValues4.documents[0].position,\r\n                username: props.initialValues4.documents[0].username,\r\n                fio: props.initialValues4.documents[0].fio,\r\n\r\n                price: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].price,\r\n                subject: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].subject,\r\n                currency: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].currency,\r\n                executor_name_division: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues4.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues4.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                route: props.initialValues4.documents[0].route_data,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                signatures: props.initialValues4.documents[0].signatures,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues4.documents[0].step })\r\n            setRoutesList(props.initialValues4.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n    }\r\n\r\n    const dict = [\r\n        {\r\n            title: 'У кого',\r\n            dataIndex: 'fio_receiver',\r\n            key: 'fio_receiver',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Срок',\r\n            dataIndex: 'deadline',\r\n            key: 'deadline',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'task_statuses',\r\n            key: 'task_statuses',\r\n            width: '150px'\r\n        },\r\n        {\r\n            title: 'Задача',\r\n            dataIndex: 'note',\r\n            key: 'note',\r\n            width: '250px'\r\n        },\r\n    ];\r\n\r\n    //collapse\r\n    function callback(key) {\r\n        // console.log(key);\r\n    }\r\n\r\n    const [reasonText, setReasonText] = useState(props?.initialValues4?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues4?.documents[0]?.data_agreement_list_internal_needs[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n        form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE4 values',allValues)}}\r\n        \r\n        >\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={12}><b>От: </b></Col> <Col span={12}>{props?.initialValues4?.documents[0].fio}</Col>\r\n            <Col span={12}><b>Должность: </b></Col> <Col span={12}>{props?.initialValues4?.documents[0].position}</Col>\r\n            <Col span={12}><b>Тип договора: </b></Col> <Col span={12}>Лист согласования на реализацию готовой продукции</Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Наименование контрагента: </b></Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Предмет договора: </b></Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Общая сумма договора: </b></Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Валюта платежа: </b></Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Наименование подразделения, фамилия ответственного исполнителя: </b></Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Телефон исполнителя: </b></Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}><b>Контакты контрагента: </b></Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                // label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Collapse defaultActiveKey={['2']} onChange={callback}>\r\n                <Panel header={<b>Прикреплённые файлы</b>} key=\"2\">\r\n                {props?.initialValues4?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                </Panel>\r\n                </Collapse>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" />\r\n                {props?.initialValues4?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n\r\n            <Collapse defaultActiveKey={['1']} onChange={callback}>\r\n                <Panel header=\"Созданные мною поручения по данному договору\" key=\"1\">  \r\n                    <TasksTableContainer \r\n                        data={{ dict, records: props.documentTasksList }}\r\n                        visibleModalUpdate={visibleModalUpdate}\r\n                        GQL={DocumentTasks}\r\n                        title={TasksTitleMenu}\r\n                    />\r\n\r\n                </Panel>\r\n            </Collapse>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues5.documents[0].reason ? dataProps.initialValues5.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward5()\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues5.documents[0].reason ? dataProps.initialValues5.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps?.initialValues5?.documents[0].reason ? dataProps?.initialValues5?.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward5()\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues5.documents[0].reason ? dataProps.initialValues5.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import React, { useEffect, useState } from 'react';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { handlerQuery, getDDMMYYYHHmm, useUser, handlerMutation } from '../../../core/functions';\r\nimport { Modal, Popconfirm, Select, Button, Form, DatePicker, Input, Checkbox, Switch, Row, Col, Divider, Typography } from 'antd';\r\nimport { EyeOutlined } from '@ant-design/icons';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\nlet TasksAddDialog5 = React.memo((props) => {\r\n    let user = useUser();\r\n    let users = {\r\n        exemplar: 'user',\r\n        table: 'users',\r\n        options: {\r\n            all: {\r\n                variables: {\r\n                    users: { global: { ORDER_BY: ['username asc'] } }\r\n                },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `,\r\n            one: gql`\r\n            query users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    password\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription users ($users: JSON) {\r\n                users(users: $users) {\r\n                    id\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                }\r\n            }\r\n        `\r\n        }\r\n    }\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n     `\r\n    }\r\n    const { Link } = Typography;\r\n    const [insert, { loading: documentTasksInsertLoading }] = handlerMutation(useMutation(DocumentTasks.insert))();\r\n    const { loading, data, refetch } = handlerQuery(users, 'all')();\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    const [state, setState] = useState({});\r\n\r\n    let onFinish = (values) => {\r\n\r\n        let taskData = {\r\n            variables: {\r\n                document_tasks:\r\n                {\r\n                    document_id: props.document.documents[0].id,\r\n                    status: \"1\",\r\n                    is_cancelled: \"false\",\r\n                    note: values.note,\r\n                    deadline: getDDMMYYYHHmm(values.deadline._d),\r\n                    user_id_created: `${user.id}`,\r\n                    fio_created: user.fio,\r\n                    user_id_receiver: `${values.recepient.value}`,\r\n                    fio_receiver: values.recepient.label,\r\n                    route_id: props.document.documents[0].route_id.id,\r\n                    document_options: {\r\n                        title: values.title == undefined ? false : values.title,\r\n                        subject: values.subject == undefined ? false : values.subject,\r\n                        remark: values.remark == undefined ? false : values.remark,\r\n                    },\r\n                    task_files: `{${values.task_files.map(item => parseInt(item))}}`,\r\n                    files: values.files\r\n                }\r\n            }\r\n        }\r\n        insert(taskData)\r\n        props.setVisible(false)\r\n        console.log('taskData-------------', taskData)\r\n        console.log('VALUES-----', values)\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n    useEffect(() => { form.setFieldsValue(state) }, [state]);\r\n\r\n    const onChangeDatePicker = (date, dateString) => {\r\n        // console.log('datep', date, dateString);\r\n    };\r\n\r\n    //checkboxgroup select all \r\n    const CheckboxGroup = Checkbox.Group;\r\n\r\n    let [popconfirmInModalVisible, setPopconfirmInModalVisible] = useState(false)\r\n\r\n    let CheckAll = () => {\r\n        let files = props?.document?.documents[0]?.files.map((item) => { return (item.id) })\r\n        form.setFieldsValue({\r\n            task_files: files\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type='primary'\r\n                onClick={()=>{props.setVisible(true)}}\r\n            >\r\n                <PlusCircleOutlined />Создать\r\n            </Button>\r\n            <Modal\r\n                title={'Создание поручения'}\r\n                visible={props.visible}\r\n                centered\r\n                width={800}\r\n                onOk={() => { }}\r\n                closable={false}\r\n                // onCancel={() => { props.setVisible(false) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                    <Popconfirm\r\n                        title='Вы уверены что хотите закрыть?'\r\n                        // visible={popconfirmInModalVisible}\r\n                        onConfirm={() => {\r\n                            props.setVisible(false)\r\n                            setPopconfirmInModalVisible(false)\r\n                        }}\r\n                        onCancel={() => { setPopconfirmInModalVisible(false) }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\"\r\n                    >\r\n                        <Button key=\"cancel\">Закрыть</Button>\r\n                        {/* <Button key=\"cancel\" onClick={() => { props.setVisible(false) }}>Отмена</Button> */}\r\n                    </Popconfirm>,\r\n                    <Popconfirm\r\n                        title={'Отправить поручение?'}\r\n                        placement=\"topLeft\"\r\n                        disabled={state.recepient ? false : true}\r\n                        onConfirm={async () => {\r\n                            await form.submit();\r\n                        }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\">\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType=\"submit\"\r\n                        >Сохранить</Button>\r\n                    </Popconfirm>\r\n                ]}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name=\"TaskAddForm\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                    autoComplete=\"off\"\r\n                    onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Выберите получателя\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"recepient\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            style={{ width: 100 + \"%\" }}\r\n                            showSearch\r\n                            optionFilterProp=\"children\"\r\n                            filterOption\r\n                            {...props}\r\n                            labelInValue={true}\r\n                        >\r\n                            <Select.Option key={null} value={null}></Select.Option>\r\n                            {data?.users?.map((item, i) => {\r\n                                return (\r\n                                    <Select.Option key={item.id} value={item.id}>\r\n                                        {data?.users[i]?.fio}\r\n                                    </Select.Option>)\r\n                            })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Срок для исполнения до\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"deadline\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <DatePicker\r\n                            locale={locale}\r\n                            format={\"DD-MM-YYYY HH:mm\"}\r\n                            showTime={{ format: \"HH:mm\" }}\r\n                            onChange={onChangeDatePicker}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Задача\"\r\n                        labelAlign=\"left\"\r\n                        labelCol={{ span: 12 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        name=\"note\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Необходимо для заполнения!'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea rows={5} />\r\n                    </Form.Item>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <h3 className='marginTop marginBottom'><b>Выберите необходимые поля</b></h3>\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Наименование:</b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.title}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"title\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{xs:8, sm:16,md:24,lg:32}}>\r\n                        <Col span={13}>\r\n                            <b>Основание:</b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_custom[0]?.subject}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                        <Form.Item\r\n                                name=\"subject\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={13}>\r\n                            <b>Примечание: </b>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {props?.document?.documents[0]?.data_custom[0]?.remark}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Form.Item\r\n                                name=\"remark\"\r\n                            >\r\n                                <Switch defaultChecked={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Divider type={'horizontal'} />\r\n\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={18}>\r\n                            <h3><b>Выберите необходимые Файлы</b></h3>\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Button onClick={CheckAll}>Выбрать все файлы</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Item\r\n                        style={{marginTop:'30px'}}\r\n                        name='task_files'\r\n                    >\r\n                        <CheckboxGroup>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {props?.document?.documents[0]?.files.map((item) => {\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <Col span={21}>\r\n                                                <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link>\r\n                                                <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} />\r\n                                            </Col>\r\n                                            <Col span={1}>\r\n                                                <Checkbox value={item.id} defaultChecked={false} />\r\n                                            </Col>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Row>\r\n                        </CheckboxGroup>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TasksAddDialog5","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update5 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                report: props.initialValues.document_tasks[0].report,\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files,\r\n                log_username: state.log_username,\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        // props.onFinish(state)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n             <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created} AAAAAAAAA</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n            \r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n            \r\n            \r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col> <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование контрагента: </Col>\r\n                         <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Основание: </Col>\r\n                         <Col span={12}>{props?.document?.data_custom[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.remark == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Примечание: </Col>\r\n                         <Col span={12}>{props?.document?.data_custom[0]?.remark}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n            {\r\n                (state.status == 2) ?\r\n                    <div>\r\n                        <Divider type={'horizontal'} />\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report ? state.report : ''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                            <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {state.document_tasks_files.map((item) => {\r\n                                    return (<>\r\n                                        <Col span={24} className='document-view-wrap'>\r\n                                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                        </Col>\r\n                                    </>)\r\n                                })}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    : ''\r\n            }\r\n\r\n            {(state?.status == 1 && state?.user_id_created != user.id) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update5","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio, Collapse } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport TitleMenu from '../../../../../../core/TitleMenu'\r\nimport { gql, useMutation } from '@apollo/client'\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n//Tasks\r\nimport TasksTableContainer from '../../tableContainers/TasksTableContainer'\r\nimport TasksAddDialog5 from '../../../../dialogs/TasksAddDialog5'\r\nimport TaskModalUpdate from '../../modals/TaskModalUpdate'\r\nimport UpdateTask5 from './UpdateTask5'\r\n\r\n\r\nlet Update5 = React.memo((props) => {\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                        document_options\r\n                        task_files\r\n                        report\r\n                        document_tasks_files{\r\n                            id\r\n                            filename\r\n                            data_file\r\n                            task_id\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                    document_options\r\n                    task_files\r\n                    report\r\n                    document_tasks_files{\r\n                        id\r\n                        filename\r\n                        data_file\r\n                        task_id\r\n                    }\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `,\r\n        setTaskIsReadTrue: gql`\r\n        mutation setTaskIsReadTrue($task: JSON) {\r\n            setTaskIsReadTrue(task: $task){\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `\r\n    }\r\n\r\n    let TasksTitleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <TaskModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} UpdateForm={UpdateTask5} GQL={DocumentTasks}\r\n                    title='Поручение' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                <TasksAddDialog5 visible={visible} setVisible={setVisible} document={props.initialValues5} />\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const { Step } = Steps;\r\n    const { Panel } = Collapse;\r\n    const stepsDirection = useRef('vertical');\r\n    const visibleModalUpdate = useState(false);\r\n    const [visible, setVisible] = useState(false)\r\n    useEffect(() => {\r\n        if (props?.initialValues5?.documents[0]?.route_data?.length > 1)\r\n            stepsDirection.current = props?.initialValues5?.documents[0]?.route_data?.length <= 7 ? 'horizontal' : 'vertical'\r\n    }, [props]);\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        props.form5.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n                position: props.initialValues5.documents[0].position,\r\n                username: props.initialValues5.documents[0].username,\r\n                fio: props.initialValues5.documents[0].fio,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues5.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues5.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                route: props.initialValues5.documents[0].route_data,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                signatures: props.initialValues5.documents[0].signatures,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues5.documents[0].step })\r\n            setRoutesList(props.initialValues5.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish5(state);\r\n    }\r\n\r\n    const dict = [\r\n        {\r\n            title: 'У кого',\r\n            dataIndex: 'fio_receiver',\r\n            key: 'fio_receiver',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Срок',\r\n            dataIndex: 'deadline',\r\n            key: 'deadline',\r\n            width: '200px'\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'task_statuses',\r\n            key: 'task_statuses',\r\n            width: '150px'\r\n        },\r\n        {\r\n            title: 'Задача',\r\n            dataIndex: 'note',\r\n            key: 'note',\r\n            width: '250px'\r\n        },\r\n    ];\r\n\r\n    //collapse\r\n    function callback(key) {\r\n        // console.log(key);\r\n    }\r\n\r\n    const [reasonText, setReasonText] = useState(props?.initialValues5?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: '1' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: '2' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: '3' },\r\n        { label: 'Совместная деятельность', value: '4' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: '5' },\r\n        { label: 'Прочие обязательства', value: '6' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(props?.initialValues5?.documents[0]?.data_custom[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE4 values', allValues) }}\r\n\r\n        >\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col span={8}><b>От: </b></Col> <Col span={16}>{props?.initialValues5?.documents[0].fio}</Col>\r\n                <Col span={8}><b>Должность: </b></Col> <Col span={16}>{props?.initialValues5?.documents[0].position}</Col>\r\n                <Col span={8}><b>Тип договора: </b></Col> <Col span={16}>Другой</Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={8}><b>Наименование: </b></Col>\r\n                    <Col span={16}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={8}><b>Примечание: </b></Col> \r\n                    <Col span={16}>{state.remark}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={8}><b>Основание: </b></Col> \r\n                    <Col span={16}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Collapse defaultActiveKey={['2']} onChange={callback}>\r\n                    <Panel header={<b>Прикреплённые файлы</b>} key=\"2\">\r\n                        {props?.initialValues5?.documents[0].files.map((item) => {\r\n                            return (<>\r\n                                <div className='document-view-wrap'>\r\n                                    <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> \r\n                                    <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                </div>\r\n                            </>)\r\n                        })}\r\n                    </Panel>\r\n                </Collapse>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps\r\n                    labelPlacement=\"vertical\"\r\n                    size=\"small\"\r\n                    direction={stepsDirection.current}\r\n                    responsive={true}\r\n                    current={stepCount.step - 1}\r\n                    className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <Divider type={'horizontal'}/>\r\n\r\n            <Collapse defaultActiveKey={['1']} onChange={callback}>\r\n                <Panel header=\"Созданные мною поручения по данному договору\" key=\"1\">\r\n                <TasksTableContainer\r\n                        data={{ dict, records: props.documentTasksList }}\r\n                        visibleModalUpdate={visibleModalUpdate}\r\n                        GQL={DocumentTasks}\r\n                        title={TasksTitleMenu}\r\n                    />\r\n                </Panel>\r\n            </Collapse>\r\n            <Divider type={'horizontal'}/>\r\n            <div>\r\n                <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" />\r\n                {props?.initialValues5?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update5","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Popconfirm, Typography, Steps } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../../core/functions';\r\nimport ModalUpdate from '../../modals/ModalUpdate';\r\nimport TableContainerIsRead from '../../tableContainers/TableContainerIsRead';\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport test from \"../../../../core/functions/test\";\r\n\r\nimport Update1 from './forms/1/Update1';\r\nimport Update2 from './forms/2/Update2';\r\nimport Update3 from './forms/3/Update3';\r\nimport Update4 from './forms/4/Update4';\r\nimport Update5 from './forms/5/Update5';\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\n\r\nlet OnApprovalDocuments = React.memo((props) => {\r\n    let user = useUser();\r\n    let userVariable = user.id\r\n    let positionsVariable = user.positions.toString();\r\n\r\n    let documents = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: {\r\n                    documents: { global: { positions: positionsVariable, status_id: '=5', ORDER_BY: ['date_created desc'] } }\r\n                },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    reason\r\n                    document_tasks{\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                    \r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    reason\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    document_tasks{\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        \r\n                        \r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n\r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                reason\r\n                price\r\n                supllier\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                document_tasks{\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n        mutation setIsReadTrue($document: JSON) {\r\n        setIsReadTrue(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `};\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                variables: { document_tasks: { global: {user_id_created:`=${user.id}`} } },\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n            }\r\n        `\r\n        },\r\n        insert: gql`\r\n        mutation insertDocumentTasks($document_tasks: JSON) {\r\n            insertDocumentTasks(document_tasks: $document_tasks) {\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `\r\n    }\r\n\r\n\r\n    const count = useRef(0);\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false);\r\n    const visibleModalUpdate3 = useState(false);\r\n    const visibleModalUpdate4 = useState(false);\r\n    const visibleModalUpdate5 = useState(false);\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(documents.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(documents, 'all')();\r\n    const { loading: taskLoading, data: taskData, refetch: taskRefetch } = handlerQuery(DocumentTasks, 'all')();\r\n    useEffect(() => { taskRefetch() }, []);\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        count.current = data.documents.length;\r\n        let tasks = taskData?.document_tasks?.filter((task)=>{\r\n            return task.document_id==item.id\r\n        })\r\n        let tasks_done = taskData?.document_tasks?.filter((task)=>{\r\n            return task.document_id == item.id && task.status == 2\r\n        })\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            user_info: item.fio + ' ' + item.position,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route_id: item.route_id.id,\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data ? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step: item.step,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            document_logs: item.document_logs[item.document_logs.findIndex(item => item.user_id == user.id)],\r\n            tasks_count:`${tasks_done?.length} из ${tasks?.length}`\r\n        }\r\n    }) : [];\r\n\r\n    let listFiltered = list.filter((el) => {\r\n        return el.step == el.route_step && el.status_id != 4\r\n    });\r\n\r\n    window.localStorage['rows_onaproval'] = listFiltered.length;\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '180px', type: 'search', tooltip: true, sorter: (a, b) => a.title.localeCompare(b.title) },\r\n        { title: 'От кого', dataIndex: 'user_info', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.user_info.localeCompare(b.user_info) },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.route.localeCompare(b.route) },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: (a, b) => a.status.localeCompare(b.status) },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n        {title:'Выполнено задач', dataIndex:'tasks_count', width:'90px'}\r\n        // { title: 'Кол-во задач', dataIndex: 'document_tasks', width: '75px' },\r\n    ]);\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <ModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} GQL={documents} UpdateForm={Update1}\r\n                    visibleModalUpdate2={visibleModalUpdate2} GQL2={documents} UpdateForm2={Update2}\r\n                    visibleModalUpdate3={visibleModalUpdate3} GQL3={documents} UpdateForm3={Update3}\r\n                    visibleModalUpdate4={visibleModalUpdate4} GQL4={documents} UpdateForm4={Update4}\r\n                    visibleModalUpdate5={visibleModalUpdate5} GQL5={documents} UpdateForm5={Update5}\r\n                    title='Согласование договора' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                <Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[documents.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    {user.documentControl.delete ?\r\n                        <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 2}><DeleteOutlined />Удалить</Button> : null}\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainerIsRead\r\n            data={{ dict, records: listFiltered }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            visibleModalUpdate2={visibleModalUpdate2}\r\n            visibleModalUpdate3={visibleModalUpdate3}\r\n            visibleModalUpdate4={visibleModalUpdate4}\r\n            visibleModalUpdate5={visibleModalUpdate5}\r\n            GQL={documents}\r\n            setCountManager={props.setCountManager}\r\n        />\r\n    )\r\n});\r\n\r\nexport default OnApprovalDocuments;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {useUser, formatDate } from '../../../../../../core/functions';\r\n\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    console.log(\"PROPS UPDATE DOC\", props)\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n                description: props.initialValues.documents[0].description,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                document_logs: props.initialValues.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues', props.initialValues)\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file \r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <b>От:</b> {props?.initialValues?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование ТРУ: </Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Поставщик ТРУ: </Col> <Col span={12}>{state.supllier}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание: </Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <Row>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> */}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update1;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.form2.setFieldsValue(state);\r\n        console.log(\"state2 form\", state)\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    console.log(\"PROPS UPDATE DOC 2\", props)\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                description: props.initialValues2.documents[0].data_agreement_list[0].description,\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                document_logs: props.initialValues2.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues2', props.initialValues2)\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let checkboxOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: '1' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: '2' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: '3' },\r\n        { label: 'Совместная деятельность', value: '4' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: '5' },\r\n        { label: 'Прочие обязательства', value: '6' }\r\n    ]\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE2 values', allValues) }}\r\n        >\r\n            <b>От:</b> {props?.initialValues2?.documents[0].fio} <br />\r\n            <b>Должность:</b> {props?.initialValues2?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора в валюте цены договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора в тенге, по курсу НБ РК:</Col> <Col span={12}>{state.currency_price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента:</Col> <Col span={12}>{state.sider_signatures_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Дата получение проекта договора, способ получения от контрагента:</Col> <Col span={12}>{state.received_from_counteragent_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues2?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <Row>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row> */}\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update2;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form3.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n                position: props.initialValues3.documents[0].position,\r\n                username: props.initialValues3.documents[0].username,\r\n                fio: props.initialValues3.documents[0].fio,\r\n\r\n                price: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.price,\r\n                subject: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.subject,\r\n                currency: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.currency,\r\n                executor_name_division: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0]?.data_agreement_list_production[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues3.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues3.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                route: props.initialValues3.documents[0].route_data,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                signatures: props.initialValues3.documents[0].signatures,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues3.documents[0].step })\r\n            setRoutesList(props.initialValues3.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues3?.documents[0]?.data_agreement_list_production[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues3?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form4.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n                position: props.initialValues4.documents[0].position,\r\n                username: props.initialValues4.documents[0].username,\r\n                fio: props.initialValues4.documents[0].fio,\r\n\r\n                price: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.price,\r\n                subject: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.subject,\r\n                currency: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.currency,\r\n                executor_name_division: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0]?.data_agreement_list_internal_needs[0]?.counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues4.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues4.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                route: props.initialValues4.documents[0].route_data,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                signatures: props.initialValues4.documents[0].signatures,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues4.documents[0].step })\r\n            setRoutesList(props.initialValues4.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues4?.documents[0]?.data_agreement_list_internal_needs[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n            form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues4?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4;","import {EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\nlet Update5 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n\r\n    const { Step } = Steps;\r\n    const stepsDirection = useRef('vertical');\r\n    useEffect(() => {\r\n        if (props?.initialValues5?.documents[0]?.route_data?.length > 1)\r\n            stepsDirection.current = props?.initialValues5?.documents[0]?.route_data?.length <= 7 ? 'horizontal' : 'vertical'\r\n    }, [props]);\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form5.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n                position: props.initialValues5.documents[0].position,\r\n                username: props.initialValues5.documents[0].username,\r\n                fio: props.initialValues5.documents[0].fio,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues5.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues5.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                route: props.initialValues5.documents[0].route_data,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                signatures: props.initialValues5.documents[0].signatures,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues5.documents[0].step })\r\n            setRoutesList(props.initialValues5.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish5(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n    \r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues5?.documents[0]?.data_agreement_list_internal_needs[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n            form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <h4><b>Тип договора:</b> Другой</h4>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Примечание:</Col> <Col span={12}>{state.remark}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps\r\n                    labelPlacement=\"vertical\"\r\n                    size=\"small\"\r\n                    direction={stepsDirection.current}\r\n                    responsive={true}\r\n                    current={stepCount.step - 1}\r\n                    className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {props?.initialValues5?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange}/>\r\n                <Button onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update5;","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Popconfirm, Typography, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../../core/functions';\r\nimport ModalUpdate from '../../modals/ModalUpdate';\r\nimport TableContainerIsRead from '../../tableContainers/TableContainerIsRead';\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport test from \"../../../../core/functions/test\";\r\n\r\nimport Update1 from './forms/1/Update1';\r\nimport Update2 from './forms/2/Update2';\r\nimport Update3 from './forms/3/Update3';\r\nimport Update4 from './forms/4/Update4';\r\nimport Update5 from './forms/5/Update5';\r\n\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\nlet OnApprovalDocumentsList = React.memo((props) => {\r\n    let user = useUser();\r\n    let positionsVariable = user.positions.toString();\r\n\r\n    let documents = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: { approved_by_me: user.id, ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                reason\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    reason\r\n                    date_modified\r\n                    status_id\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n\r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n        mutation setIsReadTrue($document: JSON) {\r\n        setIsReadTrue(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n    };\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false);\r\n    const visibleModalUpdate3 = useState(false);\r\n    const visibleModalUpdate4 = useState(false);\r\n    const visibleModalUpdate5 = useState(false);\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(documents.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(documents, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            user_info: item.fio + ' ' + item.position,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route_id: item.route_id.id,\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step:item.step,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            //step_name:console.log('DDDDDD',item.step)\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            document_logs: item.document_logs[item.document_logs.findIndex(item=>item.user_id==user.id)]\r\n            //step_name: item.route_id?.routes ? item.route_id.routes[item.route_id.routes.findIndex(item => item.positionId == item.step)].positionName : ''\r\n        }\r\n    }) : [];\r\n\r\n    //console.log('list2', list2)\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '214px', type: 'search', tooltip: true, sorter: (a, b) => a.title.localeCompare(b.title) },\r\n        { title: 'От кого', dataIndex: 'user_info', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.user_info.localeCompare(b.user_info) },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_created) - new Date(b.date_created) },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_modified) - new Date(b.date_modified) },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.route.localeCompare(b.route) },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: (a, b) => a.status.localeCompare(b.status) },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n        // { title: 'шаг п.', dataIndex: 'route_step', width: '55px' }\r\n    ]);\r\n\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <ModalUpdate \r\n                visibleModalUpdate={visibleModalUpdate} GQL={documents} UpdateForm={Update1}\r\n                visibleModalUpdate2={visibleModalUpdate2} GQL2={documents} UpdateForm2={Update2}\r\n                visibleModalUpdate3={visibleModalUpdate3} GQL3={documents} UpdateForm3={Update3}\r\n                visibleModalUpdate4={visibleModalUpdate4} GQL4={documents} UpdateForm4={Update4}\r\n                visibleModalUpdate5={visibleModalUpdate5} GQL5={documents} UpdateForm5={Update5}\r\n                title='Просмотр документа' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                <Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[documents.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    {user.documentControl.delete ?\r\n                        <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 2}><DeleteOutlined />Удалить</Button> : null}\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <TableContainerIsRead\r\n            data={{ dict, records: list }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            visibleModalUpdate2={visibleModalUpdate2}\r\n            visibleModalUpdate3={visibleModalUpdate3}\r\n            visibleModalUpdate4={visibleModalUpdate4}\r\n            visibleModalUpdate5={visibleModalUpdate5}\r\n            GQL={documents}\r\n            />\r\n        </>\r\n    )\r\n});\r\n\r\nexport default OnApprovalDocumentsList;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { useMutation, useQuery, gql } from '@apollo/client';\r\nimport { Button, Form, Modal, message } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../../../core/functions';\r\n\r\n\r\n\r\nlet ModalUpdate = React.memo(({ GQL, GQL2, GQL3, GQL4, GQL5, UpdateForm, UpdateForm2, UpdateForm3, UpdateForm4, UpdateForm5, ...props }) => {\r\n\r\n    const document = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: { id: `=${props.selectedRowKeys[1]}`, ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                reason\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n    \r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    reason\r\n                    status_id\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n    mutation setIsReadTrue($document: JSON) {\r\n    setIsReadTrue(document: $document) {\r\n        type\r\n        message\r\n    }\r\n    }\r\n    `\r\n    };\r\n\r\n    let uploadDocuments = async (files) => {\r\n\r\n        console.log(files)\r\n        const filePromises = files.map((file) => {\r\n            // Return a promise per file\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = async (e) => {\r\n                    resolve({ dataFile: e.target.result, fileName: file.name })\r\n                };\r\n                reader.onerror = (error) => {\r\n                    reject(error);\r\n                };\r\n                reader.readAsDataURL(file.originFileObj);\r\n            });\r\n        });\r\n\r\n        // Wait for all promises to be resolved\r\n        const fileInfos = await Promise.all(filePromises);\r\n\r\n        console.log('COMPLETED');\r\n\r\n        // Profit\r\n        return fileInfos;\r\n    };\r\n\r\n    const [form] = Form.useForm();\r\n    const [form2] = Form.useForm();\r\n    const [form3] = Form.useForm();\r\n    const [form4] = Form.useForm();\r\n    const [form5] = Form.useForm();\r\n\r\n    const [viewMode, setViewMode] = useState(true);\r\n    const [visible, setVisible] = props.visibleModalUpdate ? props.visibleModalUpdate : [];\r\n    const [visible2, setVisible2] = props.visibleModalUpdate2 ? props.visibleModalUpdate2 : [];\r\n    const [visible3, setVisible3] = props.visibleModalUpdate3 ? props.visibleModalUpdate3 : [];\r\n    const [visible4, setVisible4] = props.visibleModalUpdate4 ? props.visibleModalUpdate4 : [];\r\n    const [visible5, setVisible5] = props.visibleModalUpdate5 ? props.visibleModalUpdate5: [];\r\n\r\n    let variables1 = {}; variables1[GQL.table] = GQL.table ? { global: { id: `= ${props.selectedRowKeys[0]}` } } : {};\r\n\r\n    const { loading: loadingOne, data, refetch } = handlerQuery(GQL, 'one', { variables1 })();\r\n    const { loading: loadingTwo, data: data2, refetch: refetch2 } = handlerQuery(GQL, 'one', { variables1 })();\r\n    const { loading: loadingThree, data: data3, refetch: refetch3 } = handlerQuery(GQL, 'one', { variables1 })();\r\n    const { loading: loadingFour, data: data4, refetch: refetch4 } = handlerQuery(GQL, 'one', { variables1 })();\r\n    const { loading: loadingFive, data: data5, refetch: refetch5 } = handlerQuery(GQL, 'one', { variables1 })();\r\n\r\n    useEffect(() => { if (visible) { refetch(variables1) }; }, [visible]);\r\n    useEffect(() => { if (visible2) { refetch2(variables1) }; }, [visible2]);\r\n    useEffect(() => { if (visible3) { refetch3(variables1) }; }, [visible3]);\r\n    useEffect(() => { if (visible4) { refetch4(variables1) }; }, [visible4]);\r\n    useEffect(() => { if (visible5) { refetch5(variables1) }; }, [visible5]);\r\n\r\n    //------------documents\r\n    let documentVariables = { documents: { global: { id: `=${props.selectedRowKeys[1]}`, ORDER_BY: ['date_created desc'] } } }\r\n    const { loading: loadingData, data: documentData, refetch: refetchData } = handlerQuery(document, 'one', { variables1 })();\r\n    const { loading: loadingData2, data: documentData2, refetch: refetchData2 } = handlerQuery(document, 'one', { variables1 })();\r\n    const { loading: loadingData3, data: documentData3, refetch: refetchData3 } = handlerQuery(document, 'one', { variables1 })();\r\n    const { loading: loadingData4, data: documentData4, refetch: refetchData4 } = handlerQuery(document, 'one', { variables1 })();\r\n    const { loading: loadingData5, data: documentData5, refetch: refetchData5 } = handlerQuery(document, 'one', { variables1 })();\r\n\r\n    useEffect(() => { if (visible) { refetchData(documentVariables) } }, [visible]);\r\n    useEffect(() => { if (visible2) { refetchData2(documentVariables) } }, [visible2]);\r\n    useEffect(() => { if (visible3) { refetchData3(documentVariables) } }, [visible3])\r\n    useEffect(() => { if (visible4) { refetchData4(documentVariables) } }, [visible4])\r\n    useEffect(() => { if (visible5) { refetchData5(documentVariables) } }, [visible5])\r\n\r\n\r\n    //------------mutations\r\n    const [update, { loading: loadingUpdate }] = handlerMutation(useMutation(GQL.update), () => { setVisible(false) })();\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                disabled={props.selectedRowKeys.length !== 2}\r\n                onClick={() => { setVisible(true) }}\r\n            >\r\n                <EyeOutlined />Просмотр\r\n            </Button>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible}\r\n                width={600}\r\n                onCancel={() => { setVisible(false); setViewMode(true) }}\r\n                footer={null}\r\n            >\r\n                <UpdateForm\r\n                    document={documentData?.documents[0]}\r\n                    initialValues={data}\r\n                    form={form}\r\n                    onFinish={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = [];\r\n                        if (values?.files?.fileList) {\r\n                            await uploadDocuments(values.files.fileList).then(result => {\r\n                                base64 = result\r\n                            });\r\n                        };\r\n                        setVisible(false);\r\n                        variables[GQL.exemplar] = { id: props.selectedRowKeys[0], status: 2, user_id: values.user_id_created, docs: base64 ? base64 : [], report: values.report }\r\n                        console.log('variables-------123', variables)\r\n                        update({ variables })\r\n                    }}\r\n                />\r\n\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible2}\r\n                width={600}\r\n                onCancel={() => { setVisible2(false); setViewMode(true) }}\r\n                footer={null}\r\n            >\r\n                <UpdateForm2\r\n                    document={documentData2?.documents[0]}\r\n                    initialValues={data2}\r\n                    form={form2}\r\n                    onFinish={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = [];\r\n                        if (values?.files?.fileList) {\r\n                            await uploadDocuments(values.files.fileList).then(result => {\r\n                                base64 = result\r\n                            });\r\n                        };\r\n                        setVisible2(false)\r\n                        variables[GQL.exemplar] = { id: props.selectedRowKeys[0], status: 2, user_id: values.user_id_created, docs: base64 ? base64 : [], report: values.report }\r\n                        console.log('variables-------123', variables)\r\n                        update({ variables })\r\n                    }}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible3}\r\n                width={900}\r\n                onCancel={() => { setVisible3(false); setViewMode(true) }}\r\n                footer={null}\r\n            >\r\n                <UpdateForm3\r\n                    document={documentData3?.documents[0]}\r\n                    initialValues={data3}\r\n                    form={form3}\r\n                    onFinish={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = [];\r\n                        if (values?.files?.fileList) {\r\n                            await uploadDocuments(values.files.fileList).then(result => {\r\n                                base64 = result\r\n                            });\r\n                        };\r\n                        setVisible3(false)\r\n                        variables[GQL.exemplar] = { id: props.selectedRowKeys[0], status: 2, user_id: values.user_id_created, docs: base64 ? base64 : [], report: values.report }\r\n                        console.log('variables-------123', variables)\r\n                        update({ variables })\r\n                    }}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible4}\r\n                width={900}\r\n                onCancel={() => { setVisible4(false); setViewMode(true) }}\r\n                footer={null}\r\n            >\r\n                <UpdateForm4\r\n                    document={documentData4?.documents[0]}\r\n                    initialValues={data4}\r\n                    form={form4}\r\n                    onFinish={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = [];\r\n                        if (values?.files?.fileList) {\r\n                            await uploadDocuments(values.files.fileList).then(result => {\r\n                                base64 = result\r\n                            });\r\n                        };\r\n                        setVisible4(false)\r\n                        variables[GQL.exemplar] = { id: props.selectedRowKeys[0], status: 2, user_id: values.user_id_created, docs: base64 ? base64 : [], report: values.report }\r\n                        console.log('variables-------123', variables)\r\n                        update({ variables })\r\n                    }}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible5}\r\n                width={900}\r\n                onCancel={() => { setVisible5(false); setViewMode(true) }}\r\n                footer={null}\r\n            >\r\n                <UpdateForm5\r\n                    document={documentData5?.documents[0]}\r\n                    initialValues={data5}\r\n                    form={form5}\r\n                    onFinish={async (values) => {\r\n                        let variables = {};\r\n                        let base64 = [];\r\n                        if (values?.files?.fileList) {\r\n                            await uploadDocuments(values.files.fileList).then(result => {\r\n                                base64 = result\r\n                            });\r\n                        };\r\n                        setVisible5(false)\r\n                        variables[GQL.exemplar] = { id: props.selectedRowKeys[0], status: 2, user_id: values.user_id_created, docs: base64 ? base64 : [], report: values.report }\r\n                        console.log('variables-------123', variables)\r\n                        update({ variables })\r\n                    }}\r\n                />\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ModalUpdate","import { Table } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nlet TableContainer = React.memo(({ GQL, ...props}) => {\r\n\r\n    let [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n    let itemKeys = [];\r\n\r\n    if (!props.loading) {\r\n        itemKeys = props.data.records.map((item) => {\r\n            return item.id\r\n        });\r\n    }\r\n\r\n    const [readTrue, { loading, error }] = useMutation(GQL.setTaskIsReadTrue, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    })\r\n\r\n    useEffect(() => {\r\n        setSelectedRowKeys(selectedRowKeys.filter((item) => {\r\n            for (var i = 0; i < itemKeys.length; i++) {\r\n                if (itemKeys[i] == item) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }));\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <Table\r\n            className='sd-tables-row-hover'\r\n            style={{ minHeight: 168 }}\r\n            loading={props.loading}\r\n            columns={props?.data?.dict}\r\n            dataSource={props?.data?.records}\r\n            scroll={{ y: 'calc(100vh - 231px)', minX: 500 }}\r\n            size='small'\r\n            title={props.title ? () => (props.title({ selectedRowKeys: selectedRowKeys })) : null}\r\n            bordered={props.bordered}\r\n            onRow={(record, rowIndex) => {\r\n                return {\r\n                    onClick: event => { \r\n                        setSelectedRowKeys([record.key, record.document_id])\r\n                        console.log(record.route_id)\r\n                    },\r\n                    onDoubleClick: event => {\r\n                        if (record?.document_tasks_logs?.is_read == false) {\r\n                            readTrue({ variables: { task: { id: record.document_tasks_logs.id,is_read:true} } });\r\n                            if (record.route_id == 10) {\r\n                                props.visibleModalUpdate[1](true)\r\n                            }\r\n                            if (record.route_id == 24) {\r\n                                props.visibleModalUpdate2[1](true)\r\n                            }\r\n                            if (record.route_id == 26) {\r\n                                props.visibleModalUpdate3[1](true)\r\n                            }\r\n                            if (record.route_id == 27) {\r\n                                props.visibleModalUpdate4[1](true)\r\n                            }\r\n                            if (record.route_id == 29) {\r\n                                props.visibleModalUpdate5[1](true)\r\n                            }\r\n                        }else{\r\n                            if (record.route_id == 10) {\r\n                                props.visibleModalUpdate[1](true)\r\n                            }\r\n                            if (record.route_id == 24) {\r\n                                props.visibleModalUpdate2[1](true)\r\n                            }\r\n                            if (record.route_id == 26) {\r\n                                props.visibleModalUpdate3[1](true)\r\n                            }\r\n                            if (record.route_id == 27) {\r\n                                props.visibleModalUpdate4[1](true)\r\n                            }\r\n                            if (record.route_id == 29) {\r\n                                props.visibleModalUpdate5[1](true)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }}\r\n            pagination={{\r\n                pageSize: 50,\r\n                showSizeChanger: false\r\n            }}\r\n            rowClassName={(record, index) => {\r\n                let className = ''\r\n                if (record?.document_tasks_logs?.is_read == false) {\r\n                    className += 'is_read_false'\r\n                }\r\n                if (record.key === selectedRowKeys[0]) {\r\n                    return 'ant-table-row ant-table-row-level-0 statusSelected';\r\n                }\r\n                return 'ant-table-row ant-table-row-level-0', className;\r\n            }}\r\n        />\r\n    )\r\n})\r\nexport default TableContainer","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport UploadFile from '../../../../modals/UploadFile';\r\nimport constants from '../../../../../../config/constants'\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                log_username: state.log_username,\r\n                report: props.initialValues.document_tasks[0].report ? props.initialValues.document_tasks[0].report : '',\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files ? props.initialValues.document_tasks[0].document_tasks_files : [],\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        values.type = 1\r\n        values.user_id_created = state.user_id_created\r\n        props.onFinish(values)\r\n        console.log('values2222', values)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col> <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование ТРУ: </Col> <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.supllier == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Поставщик ТРУ: </Col> <Col span={12}>{props?.document?.data_one[0]?.supllier}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Основание: </Col> <Col span={12}>{props?.document?.data_one[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора: </Col> <Col span={12}>{props?.document?.data_one[0]?.price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            {\r\n                (state.status != 2) ?\r\n                    <>\r\n                        <Form.Item\r\n                            name='report'\r\n                            className='font-form-header'\r\n                            label='Отчёт'\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"files\"\r\n                            className='font-form-header'\r\n                            label=\"Файлы\"\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <UploadFile\r\n                                showUploadList={true}\r\n                                action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/for-execution-inbox\"}\r\n                                multiple={true}\r\n                                maxCount={50}\r\n                                onChange={(info) => {\r\n                                    const { status } = info.file;\r\n                                    if (status !== 'uploading') {\r\n                                        console.log('info.file', info.file, info.fileList);\r\n                                    }\r\n                                    if (status === 'done') {\r\n                                        message.success(`${info.file.name} - загружен успешно.`);\r\n                                    } else if (status === 'error') {\r\n                                        message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                    </>\r\n                    : \r\n                    <div>\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report?state.report:''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                        <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            {props?.initialValues?.document_tasks[0]?.document_tasks_files.map((item) => {\r\n                                return (<>\r\n                                    <Col span={24} className='document-view-wrap'>\r\n                                        <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                    </Col>\r\n                                </>)\r\n                            })}\r\n                        </Row>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            {/* <Form.Item\r\n                name='report'\r\n                className='font-form-header'\r\n                label='Отчёт'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/for-execution-inbox\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item> */}\r\n\r\n            {(state?.status == 1) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update1","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport UploadFile from '../../../../modals/UploadFile';\r\nimport constants from '../../../../../../config/constants'\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                log_username: state.log_username,\r\n                report: props.initialValues.document_tasks[0].report ? props.initialValues.document_tasks[0].report : '',\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files ? props.initialValues.document_tasks[0].document_tasks_files : [],\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        values.type = 1\r\n        values.user_id_created = state.user_id_created\r\n        props.onFinish(values)\r\n        console.log('values2222', values)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col> <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование контрагента: </Col> <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Предмет договора: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора в валюте цены договора: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.currency_price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора в тенге, по курсу НБ РК: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.currency_price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_name_division == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.executor_name_division}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.sider_signatures_date == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.sider_signatures_date}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.sider_signatures_date == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Дата получение проекта договора, способ получения от контрагента: </Col> <Col span={12}>{props?.document?.data_agreement_list[0]?.received_from_counteragent_date}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            {\r\n                (state.status != 2) ?\r\n                    <>\r\n                        <Form.Item\r\n                            name='report'\r\n                            className='font-form-header'\r\n                            label='Отчёт'\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"files\"\r\n                            className='font-form-header'\r\n                            label=\"Файлы\"\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <UploadFile\r\n                                showUploadList={true}\r\n                                action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/for-execution-inbox\"}\r\n                                multiple={true}\r\n                                maxCount={50}\r\n                                onChange={(info) => {\r\n                                    const { status } = info.file;\r\n                                    if (status !== 'uploading') {\r\n                                        console.log('info.file', info.file, info.fileList);\r\n                                    }\r\n                                    if (status === 'done') {\r\n                                        message.success(`${info.file.name} - загружен успешно.`);\r\n                                    } else if (status === 'error') {\r\n                                        message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                    </>\r\n                    : \r\n                    <div>\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report?state.report:''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                        <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            {props?.initialValues?.document_tasks[0]?.document_tasks_files.map((item) => {\r\n                                return (<>\r\n                                    <Col span={24} className='document-view-wrap'>\r\n                                        <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                    </Col>\r\n                                </>)\r\n                            })}\r\n                        </Row>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            {/* <Form.Item\r\n                name='report'\r\n                className='font-form-header'\r\n                label='Отчёт'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо загрузить хотя бы один файл.',\r\n                    }\r\n                ]}\r\n            >\r\n                <UploadFile\r\n                    showUploadList={true}\r\n                    action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/for-execution-inbox\"}\r\n                    multiple={true}\r\n                    maxCount={50}\r\n                    onChange={(info) => {\r\n                        const { status } = info.file;\r\n                        if (status !== 'uploading') {\r\n                            console.log('info.file', info.file, info.fileList);\r\n                        }\r\n                        if (status === 'done') {\r\n                            message.success(`${info.file.name} - загружен успешно.`);\r\n                        } else if (status === 'error') {\r\n                            message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                        }\r\n                    }}\r\n                />\r\n            </Form.Item> */}\r\n\r\n            {(state?.status == 1) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update2","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport UploadFile from '../../../../modals/UploadFile';\r\nimport constants from '../../../../../../config/constants'\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                log_username: state.log_username,\r\n                report: props.initialValues.document_tasks[0].report ? props.initialValues.document_tasks[0].report : '',\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files ? props.initialValues.document_tasks[0].document_tasks_files : [],\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        values.type = 1\r\n        values.user_id_created = state.user_id_created\r\n        props.onFinish(values)\r\n        console.log('values2222', values)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col>\r\n                    <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование контрагента: </Col>\r\n                        <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Предмет договора: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_production[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_production[0]?.price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.currency == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Валюта платежа: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_production[0]?.currency}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_name_division == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_production[0]?.executor_name_division}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_phone_number == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Телефон исполнителя: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_production[0]?.executor_phone_number}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.counteragent_contacts == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Контакты контрагента: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_production[0]?.counteragent_contacts}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            {\r\n                (state.status != 2) ?\r\n                    <>\r\n                        <Form.Item\r\n                            name='report'\r\n                            className='font-form-header'\r\n                            label='Отчёт'\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"files\"\r\n                            className='font-form-header'\r\n                            label=\"Файлы\"\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <UploadFile\r\n                                showUploadList={true}\r\n                                action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/for-execution-inbox\"}\r\n                                multiple={true}\r\n                                maxCount={50}\r\n                                onChange={(info) => {\r\n                                    const { status } = info.file;\r\n                                    if (status !== 'uploading') {\r\n                                        console.log('info.file', info.file, info.fileList);\r\n                                    }\r\n                                    if (status === 'done') {\r\n                                        message.success(`${info.file.name} - загружен успешно.`);\r\n                                    } else if (status === 'error') {\r\n                                        message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report ? state.report : ''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                            <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {props?.initialValues?.document_tasks[0]?.document_tasks_files.map((item) => {\r\n                                    return (<>\r\n                                        <Col span={24} className='document-view-wrap'>\r\n                                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                        </Col>\r\n                                    </>)\r\n                                })}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n            }\r\n\r\n            {(state?.status == 1) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport UploadFile from '../../../../modals/UploadFile';\r\nimport constants from '../../../../../../config/constants'\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                log_username: state.log_username,\r\n                report: props.initialValues.document_tasks[0].report ? props.initialValues.document_tasks[0].report : '',\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files ? props.initialValues.document_tasks[0].document_tasks_files : [],\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        values.type = 1\r\n        values.user_id_created = state.user_id_created\r\n        props.onFinish(values)\r\n        console.log('values2222', values)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col>\r\n                    <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование контрагента: </Col>\r\n                        <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Предмет договора: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Общая сумма договора: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.price}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.currency == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Валюта платежа: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.currency}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_name_division == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.executor_name_division}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.executor_phone_number == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Телефон исполнителя: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.executor_phone_number}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.counteragent_contacts == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Контакты контрагента: </Col>\r\n                        <Col span={12}>{props?.document?.data_agreement_list_internal_needs[0]?.counteragent_contacts}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            {\r\n                (state.status != 2) ?\r\n                    <>\r\n                        <Form.Item\r\n                            name='report'\r\n                            className='font-form-header'\r\n                            label='Отчёт'\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"files\"\r\n                            className='font-form-header'\r\n                            label=\"Файлы\"\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <UploadFile\r\n                                showUploadList={true}\r\n                                action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/for-execution-inbox\"}\r\n                                multiple={true}\r\n                                maxCount={50}\r\n                                onChange={(info) => {\r\n                                    const { status } = info.file;\r\n                                    if (status !== 'uploading') {\r\n                                        console.log('info.file', info.file, info.fileList);\r\n                                    }\r\n                                    if (status === 'done') {\r\n                                        message.success(`${info.file.name} - загружен успешно.`);\r\n                                    } else if (status === 'error') {\r\n                                        message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report ? state.report : ''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                            <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {props?.initialValues?.document_tasks[0]?.document_tasks_files.map((item) => {\r\n                                    return (<>\r\n                                        <Col span={24} className='document-view-wrap'>\r\n                                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                        </Col>\r\n                                    </>)\r\n                                })}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n            }\r\n\r\n            {(state?.status == 1) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4","import { EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Typography, Space, Divider, Row, Col, Steps, Collapse, Table, Input, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\nimport UploadFile from '../../../../modals/UploadFile';\r\nimport constants from '../../../../../../config/constants'\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const { Link } = Typography;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    let tasksFilesMap = state?.task_files?.map((item) => {\r\n        return item.toString()\r\n    })\r\n\r\n    const result = props?.document?.files?.filter(i => tasksFilesMap?.includes(i.id));\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.document_tasks[0].id,\r\n                document_id: props.initialValues.document_tasks[0].document_id,\r\n                status: props.initialValues.document_tasks[0].status,\r\n                is_cancelled: props.initialValues.document_tasks[0].is_cancelled,\r\n                note: props.initialValues.document_tasks[0].note,\r\n                deadline: props.initialValues.document_tasks[0].deadline,\r\n                date_created: props.initialValues.document_tasks[0].date_created,\r\n                fio_created: props.initialValues.document_tasks[0].fio_created,\r\n                user_id_created: props.initialValues.document_tasks[0].user_id_created,\r\n                user_id_receiver: props.initialValues.document_tasks[0].user_id_receiver,\r\n                fio_receiver: props.initialValues.document_tasks[0].fio_receiver,\r\n                route_id: props.initialValues.document_tasks[0].route_id,\r\n                document_options: props.initialValues.document_tasks[0].document_options,\r\n                task_files: props.initialValues.document_tasks[0].task_files,\r\n                log_username: state.log_username,\r\n                report: props.initialValues.document_tasks[0].report ? props.initialValues.document_tasks[0].report : '',\r\n                document_tasks_files: props.initialValues.document_tasks[0].document_tasks_files ? props.initialValues.document_tasks[0].document_tasks_files : [],\r\n                task_statuses: props.initialValues.document_tasks[0].task_statuses\r\n            });\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let onFinish = (values) => {\r\n        values.type = 1\r\n        values.user_id_created = state.user_id_created\r\n        props.onFinish(values)\r\n        console.log('values2222', values)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n        >\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>ФИО поручителя: </Col> <Col span={12}>{state.fio_created}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Задание: </Col> <Col span={12}>{state.note}</Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Информация о договоре</b></h3>\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Тип договора: </Col>\r\n                    <Col span={12}>{props?.document?.route_id?.name}</Col>\r\n                </Row>\r\n            </div>\r\n            {(state?.document_options?.title == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Наименование: </Col>\r\n                        <Col span={12}>{props?.document?.title}</Col>\r\n                    </Row>\r\n                </div> : ''\r\n            }\r\n            {(state?.document_options?.subject == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Основание: </Col>\r\n                        <Col span={12}>{props?.document?.data_custom[0]?.subject}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            {(state?.document_options?.price == true) ?\r\n                <div className='form-item-wrap'>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={12}>Примечание: </Col>\r\n                        <Col span={12}>{props?.document?.data_custom[0]?.remark}</Col>\r\n                    </Row>\r\n                </div>\r\n                : ''\r\n            }\r\n            <Divider type={'horizontal'} />\r\n\r\n            <h3 className='marginTop'><b>Файлы прикреплённые отправителем</b></h3>\r\n\r\n            {result?.map((file) => {\r\n                return (<>\r\n                    <div className='document-view-wrap'>\r\n                        <Link><a data-fileid={file.id} onClick={download}>{file.filename}</a></Link> <Button onClick={() => { OpenDocument(file) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                    </div>\r\n                </>)\r\n            })}\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            {\r\n                (state.status != 2) ?\r\n                    <>\r\n                        <Form.Item\r\n                            name='report'\r\n                            className='font-form-header'\r\n                            label='Отчёт'\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"files\"\r\n                            className='font-form-header'\r\n                            label=\"Файлы\"\r\n                            labelCol={{ span: 24 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Необходимо загрузить хотя бы один файл.',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <UploadFile\r\n                                showUploadList={true}\r\n                                action={\"https://\" + constants.host + \":\" + constants.port + \"/document-control/for-execution-inbox\"}\r\n                                multiple={true}\r\n                                maxCount={50}\r\n                                onChange={(info) => {\r\n                                    const { status } = info.file;\r\n                                    if (status !== 'uploading') {\r\n                                        console.log('info.file', info.file, info.fileList);\r\n                                    }\r\n                                    if (status === 'done') {\r\n                                        message.success(`${info.file.name} - загружен успешно.`);\r\n                                    } else if (status === 'error') {\r\n                                        message.error(`${info.file.name} - ошибка при загрузке.`);\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <h3><b>Отчёт</b></h3>\r\n                        {state.report ? state.report : ''}\r\n                        <Divider type={'horizontal'} />\r\n                        <div>\r\n                            <h3 className='font-form-header'><b>Файлы прикреплённые исполнителем</b></h3>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                {props?.initialValues?.document_tasks[0]?.document_tasks_files.map((item) => {\r\n                                    return (<>\r\n                                        <Col span={24} className='document-view-wrap'>\r\n                                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                                        </Col>\r\n                                    </>)\r\n                                })}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n            }\r\n\r\n            {(state?.status == 1) ?\r\n                <><Divider type={'horizontal'} />\r\n                    <Button type='primary' htmlType=\"submit\">Завершить</Button></>\r\n                : ''\r\n            }\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Popconfirm } from 'antd';\r\nimport React, { useEffect, useState, useLayoutEffect, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../../core/functions';\r\nimport ModalUpdate from './modals/ModalUpdate';\r\nimport TableContainer from './tableContainers/TableContainer';\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport test from \"../../../../core/functions/test\";\r\n\r\n\r\nimport Update1 from './forms/1/Update1';\r\nimport Update2 from './forms/2/Update2';\r\nimport Update3 from './forms/3/Update3';\r\nimport Update4 from './forms/4/Update4';\r\nimport Update5 from './forms/5/Update5';\r\n\r\n\r\nlet ForExecutionInbox = React.memo((props) => {\r\n    let user = useUser();\r\n    let userVariable = user.id;\r\n    let positionsVariable = user.positions.toString();\r\n\r\n    let documents = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: { documents_for_receiver: userVariable, ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                reason\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                \r\n                document_tasks{\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                \r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                }\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    reason\r\n                    status_id\r\n                    document_tasks{\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                    \r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n    mutation setIsReadTrue($document: JSON) {\r\n    setIsReadTrue(document: $document) {\r\n        type\r\n        message\r\n    }\r\n}\r\n`\r\n    };\r\n\r\n    let DocumentTasks = {\r\n        exemplar: 'document_tasks',\r\n        table: 'document_tasks',\r\n        options: {\r\n            all: {\r\n                variables: { document_tasks: { global: { user_id_receiver: `=${userVariable}`, ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'standby'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n                query document_tasks ($document_tasks: JSON){\r\n                    document_tasks(document_tasks: $document_tasks){\r\n                        id\r\n                        document_id\r\n                        status\r\n                        is_cancelled\r\n                        note\r\n                        deadline\r\n                        date_created\r\n                        user_id_created\r\n                        fio_created\r\n                        user_id_receiver\r\n                        fio_receiver\r\n                        route_id\r\n                        document_options\r\n                        task_files\r\n                        task_statuses{\r\n                            id\r\n                            name\r\n                        }\r\n                        document_tasks_logs{\r\n                            id\r\n                            task_id\r\n                            is_read\r\n                            type\r\n                            user_id\r\n                        }\r\n                        report\r\n                    }\r\n                }\r\n            `,\r\n            one: gql`\r\n            query document_tasks ($document_tasks: JSON){\r\n                document_tasks(document_tasks: $document_tasks){\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    route_id\r\n                    document_options\r\n                    task_files\r\n                    document_tasks_logs{\r\n                        id\r\n                        task_id\r\n                        is_read\r\n                        type\r\n                        user_id\r\n                    }\r\n                    task_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    document_tasks_files{\r\n                        id\r\n                        filename\r\n                        data_file\r\n                        task_id\r\n                    }\r\n                    report\r\n                }\r\n            }\r\n            `\r\n        },\r\n        subscription: {\r\n            all: gql`\r\n            subscription document_tasks ($document_tasks: JSON) {\r\n                document_tasks(document_tasks: $document_tasks) {\r\n                    id\r\n                    document_id\r\n                    status\r\n                    is_cancelled\r\n                    note\r\n                    deadline\r\n                    date_created\r\n                    user_id_created\r\n                    fio_created\r\n                    user_id_receiver\r\n                    fio_receiver\r\n                    document_options\r\n                    task_files\r\n                    document_tasks_logs{\r\n                        id\r\n                        task_id\r\n                        is_read\r\n                        type\r\n                        user_id\r\n                    }\r\n                    task_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    report\r\n                }\r\n            }\r\n        `\r\n        },\r\n        update: gql`\r\n        mutation updateDocumentTasks($document_tasks: JSON) {\r\n            updateDocumentTasks(document_tasks: $document_tasks) {\r\n            type\r\n            message\r\n        }\r\n        }\r\n        `,\r\n        setTaskIsReadTrue: gql`\r\n        mutation setTaskIsReadTrue($task: JSON) {\r\n            setTaskIsReadTrue(task: $task){\r\n                type\r\n                message\r\n            }\r\n        }\r\n        `\r\n    }\r\n\r\n    // const onVisibilityChange = () => {\r\n    //     if (document.visibilityState === 'visible') {\r\n    //         console.log(\"Tab visible, refetch the data!\");\r\n    //     };\r\n    //     if (document.visibilityState === 'hidden') {\r\n    //         console.log(\"Tab hidden, refetch the data!\");\r\n    //     };\r\n\r\n    // };\r\n    // useLayoutEffect(() => {\r\n    //     document.addEventListener(\"visibilitychange\", onVisibilityChange);\r\n    // }, []);\r\n\r\n    // const count = useRef(0);\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false)\r\n    const visibleModalUpdate3 = useState(false)\r\n    const visibleModalUpdate4 = useState(false)\r\n    const visibleModalUpdate5 = useState(false)\r\n\r\n    const { loading: loadingTasks, data: dataTasks, refetch: refetchTasks } = handlerQuery(DocumentTasks, 'all')();\r\n\r\n    // useEffect(() => { refetch() }, [])\r\n\r\n    useEffect(() => { refetchTasks() }, []);\r\n\r\n    let list = (dataTasks && dataTasks[Object.keys(dataTasks)[0]] != null) ? dataTasks[Object.keys(dataTasks)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            document_id: item.document_id,\r\n            status: item.status,\r\n            is_cancelled: item.is_cancelled,\r\n            note: item.note,\r\n            deadline: item.deadline,\r\n            date_created: item.date_created,\r\n            user_id_created: item.user_id_created,\r\n            fio_created: item.fio_created,\r\n            user_id_receiver: item.user_id_receiver,\r\n            fio_receiver: item.fio_receiver,\r\n            route_id: item.route_id ? item.route_id : 10,\r\n            document_options: item.document_options,\r\n            task_files: item.task_files ? item.task_files : {},\r\n            task_statuses: item.task_statuses.name,\r\n            document_tasks_logs: item.document_tasks_logs ? item.document_tasks_logs[item.document_tasks_logs.findIndex(item => item.user_id == user.id)] : []\r\n        }\r\n    }) : []\r\n\r\n    let listFiltered = list.filter((el) => {\r\n        return el.status_id == 4\r\n    });\r\n    window.localStorage['rows_approved'] = listFiltered.length;\r\n\r\n    let dict = test([\r\n        { title: 'ФИО поручителя', dataIndex: 'fio_created', width: '214px', type: 'search', tooltip: true, sorter: (a, b) => a.fio_created.localeCompare(b.fio_created) },\r\n        { title: 'Дата создания', dataIndex: 'date_created', width: '300px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_created) - new Date(b.date_created) },\r\n        { title: 'Выполнить до', dataIndex: 'deadline', width: '214px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.deadline) - new Date(b.deadline) },\r\n        { title: 'Статус', dataIndex: 'task_statuses', width: '114px', tooltip: true },\r\n        { title: 'Задача', dataIndex: 'note', width: '214px' },\r\n    ]);\r\n\r\n\r\n    let titleMenu = (tableProps) => {\r\n\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <ModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} UpdateForm={Update1}\r\n                    visibleModalUpdate2={visibleModalUpdate2} UpdateForm2={Update2}\r\n                    visibleModalUpdate3={visibleModalUpdate3} UpdateForm3={Update3}\r\n                    visibleModalUpdate4={visibleModalUpdate4} UpdateForm4={Update4}\r\n                    visibleModalUpdate5={visibleModalUpdate5} UpdateForm5={Update5}\r\n                    GQL={DocumentTasks} title='Просмотр задания' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainer\r\n            data={{ dict, records: list }}\r\n            loading={loadingTasks}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            visibleModalUpdate2={visibleModalUpdate2}\r\n            visibleModalUpdate3={visibleModalUpdate3}\r\n            visibleModalUpdate4={visibleModalUpdate4}\r\n            visibleModalUpdate5={visibleModalUpdate5}\r\n            GQL={DocumentTasks}\r\n        />\r\n    )\r\n});\r\n\r\nexport default ForExecutionInbox;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues.documents[0].reason ? dataProps.initialValues.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward()\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues.documents[0].reason ? dataProps.initialValues.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues.documents[0].reason ? dataProps.initialValues.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward()\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues.documents[0].reason ? dataProps.initialValues.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps.form.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\n//pop confirm\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    console.log(\"PROPS UPDATE DOC\", props)\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n                \r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                reason:props.initialValues.documents[0].reason,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                document_logs: props.initialValues.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues', props.initialValues)\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    //confirmations\r\n    const [reasonText, setReasonText] = useState(props?.initialValues?.documents[0]?.reason); \r\n    const ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <b>От:</b> {props?.initialValues?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование ТРУ: </Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Поставщик ТРУ: </Col> <Col span={12}>{state.supllier}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание: </Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user}/>\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user}/>\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user}/>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" />\r\n                {props?.initialValues?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={() => { props.HandleComment(props.form)}} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update1;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues2.documents[0].reason ? dataProps.initialValues2.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward2()\r\n        dataProps.form2.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues2.documents[0].reason ? dataProps.initialValues2.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form2.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues2.documents[0].reason ? dataProps.initialValues2.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward2()\r\n        dataProps?.form2?.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues2.documents[0].reason ? dataProps.initialValues2.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps?.form2?.submit()\r\n    };\r\n    console.log('dataProps FORM2222', dataProps)\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.form2.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                reason: props.initialValues2.documents[0].reason,\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                document_logs: props.initialValues2.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    const [reasonText, setReasonText] = useState(props?.initialValues?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: '1' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: '2' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: '3' },\r\n        { label: 'Совместная деятельность', value: '4' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: '5' },\r\n        { label: 'Прочие обязательства', value: '6' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(props?.initialValues2?.documents[0]?.data_agreement_list[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE2 values', allValues) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues2?.documents[0].fio} <br />\r\n            <b>Должность:</b> {props?.initialValues2?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора в валюте цены договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора в тенге, по курсу НБ РК:</Col> <Col span={12}>{state.currency_price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента:</Col> <Col span={12}>{state.sider_signatures_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Дата получение проекта договора, способ получения от контрагента:</Col> <Col span={12}>{state.received_from_counteragent_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input disabled={props.disabled} onChange={ReasonInputChange} placeholder=\"Замечание\" />\r\n                {props?.initialValues2?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update2;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues3.documents[0].reason ? dataProps.initialValues3.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward3()\r\n        dataProps.form3.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues3.documents[0].reason ? dataProps.initialValues3.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form3.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues3.documents[0].reason ? dataProps.initialValues3.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward3()\r\n        dataProps.form3.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues3.documents[0].reason ? dataProps.initialValues3.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps?.form3?.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.form3.setFieldsValue(state);\r\n        console.log(\"state3 form\", state)\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n                position: props.initialValues3.documents[0].position,\r\n                username: props.initialValues3.documents[0].username,\r\n                fio: props.initialValues3.documents[0].fio,\r\n\r\n                price: props.initialValues3.documents[0].data_agreement_list_production[0].price,\r\n                subject: props.initialValues3.documents[0].data_agreement_list_production[0].subject,\r\n                currency: props.initialValues3.documents[0].data_agreement_list_production[0].currency,\r\n                executor_name_division: props.initialValues3.documents[0].data_agreement_list_production[0].executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0].data_agreement_list_production[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0].data_agreement_list_production[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues3.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues3.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                route: props.initialValues3.documents[0].route_data,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                signatures: props.initialValues3.documents[0].signatures,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues3.documents[0].step })\r\n            setRoutesList(props.initialValues3.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    const [reasonText, setReasonText] = useState(props?.initialValues3?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues3?.documents[0]?.data_agreement_list_production[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n        form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE3 values',allValues)}}\r\n        \r\n        >\r\n            <b>От:</b> {props?.initialValues3?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues3?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" />\r\n                {props?.initialValues3?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues4.documents[0].reason ? dataProps.initialValues4.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward4()\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues4.documents[0].reason ? dataProps.initialValues4.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps?.initialValues4?.documents[0].reason ? dataProps?.initialValues4?.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward4()\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues4.documents[0].reason ? dataProps.initialValues4.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps.form4.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        props.form4.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n                position: props.initialValues4.documents[0].position,\r\n                username: props.initialValues4.documents[0].username,\r\n                fio: props.initialValues4.documents[0].fio,\r\n\r\n                price: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].price,\r\n                subject: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].subject,\r\n                currency: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].currency,\r\n                executor_name_division: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues4.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues4.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                route: props.initialValues4.documents[0].route_data,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                signatures: props.initialValues4.documents[0].signatures,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues4.documents[0].step })\r\n            setRoutesList(props.initialValues4.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n    }\r\n    const [reasonText, setReasonText] = useState(props?.initialValues4?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues4?.documents[0]?.data_agreement_list_internal_needs[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n        form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE4 values',allValues)}}\r\n        \r\n        >\r\n            <b>От:</b> {props?.initialValues4?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues4?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" />\r\n                {props?.initialValues4?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ApproveConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues5.documents[0].reason ? dataProps.initialValues5.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteForward5()\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите согласовать договор?');\r\n                    }\r\n                }}>\r\n                Согласовать\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ApproveConfirm;","import { Popconfirm, Button, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet RejectConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [rejectVisible, setRejectVisible] = useState(false)\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите согласовать договор?');\r\n\r\n    const rejectConfirm = () => {\r\n        setState(prevState => {\r\n            let old = Object.assign({}, prevState);\r\n            old.reason = null;\r\n            old.reason = dataProps.initialValues5.documents[0].reason ? dataProps.initialValues5.documents[0].reason : [];\r\n            old.reason.push({ text: 'Отклонено: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n            return old;\r\n        });\r\n        dataProps.handleStatusCancelled();\r\n        setRejectVisible(false);\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            visible={rejectVisible}\r\n            onCancel={() => { setRejectVisible(false) }}\r\n            onConfirm={rejectConfirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button type=\"primary\" disabled={dataProps.disabled} onClick={() => {\r\n                if (reasonText == null || reasonText.length == 0) {\r\n                    setRejectVisible(false)\r\n                    message.error('Для отклонения договора нужно указать замечание')\r\n                }\r\n                else {\r\n                    setRejectVisible(true)\r\n                    setConfirmText('Вы уверены что хотите отклонить договор?');\r\n                }\r\n            }}>\r\n                Отклонить\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default RejectConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnStepBackConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps?.initialValues5?.documents[0].reason ? dataProps?.initialValues5?.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteBackward5()\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на шаг назад?');\r\n                    }\r\n                }}>\r\n                Вернуть назад\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnStepBackConfirm;","import { Popconfirm, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet ReturnToSenderConfirm = React.memo(({ reasonText, dataProps, setState, user, ...props }) => {\r\n\r\n    const [confirmText, setConfirmText] = useState('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n\r\n    const confirm = () => {\r\n        if (reasonText != null || reasonText?.length > 0) {\r\n            setState(prevState => {\r\n                let old = Object.assign({}, prevState);\r\n                old.reason = null;\r\n                old.reason = dataProps.initialValues5.documents[0].reason ? dataProps.initialValues5.documents[0].reason : [];\r\n                old.reason.push({ text: 'Замечание: ' + reasonText, userId: user.id, userFio: user.fio, userPosition: user.position_names[0], userName: user.username });\r\n                return old;\r\n            });\r\n        };\r\n        dataProps.handleRouteReturnToSender()\r\n        dataProps.form5.submit()\r\n    };\r\n\r\n    return (\r\n        <Popconfirm\r\n            title={confirmText}\r\n            placement=\"topLeft\"\r\n            disabled={dataProps.disabled}\r\n            onConfirm={confirm}\r\n            okText=\"Да\"\r\n            cancelText=\"Нет\">\r\n            <Button\r\n                disabled={dataProps.disabled}\r\n                type='primary'\r\n                onClick={() => {\r\n                    if (reasonText == null || reasonText.length == 0) {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку без замечаний?')\r\n                    }\r\n                    else {\r\n                        setConfirmText('Вы уверены что хотите вернуть текущий договор на доработку исполнителю?');\r\n                    }\r\n                }}>\r\n                Вернуть на доработку\r\n            </Button>\r\n        </Popconfirm>\r\n    )\r\n});\r\n\r\nexport default ReturnToSenderConfirm;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../../../core/functions';\r\n\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update5 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user: Number(user.id), item: item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        props.form5.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n                position: props.initialValues5.documents[0].position,\r\n                username: props.initialValues5.documents[0].username,\r\n                fio: props.initialValues5.documents[0].fio,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues5.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues5.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                route: props.initialValues5.documents[0].route_data,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                signatures: props.initialValues5.documents[0].signatures,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues5.documents[0].step })\r\n            setRoutesList(props.initialValues5.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish5(state);\r\n    }\r\n    const [reasonText, setReasonText] = useState(props?.initialValues5?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues5?.documents[0]?.data_custom[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n        form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE4 values',allValues)}}\r\n        \r\n        >\r\n            <b>От:</b> {props?.initialValues5?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues5?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Другой</h4>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Примечание:</Col> <Col span={12}>{state.remark}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" />\r\n                {props?.initialValues5?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update5","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Popconfirm, Typography, Steps } from 'antd';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../../core/functions';\r\nimport ModalUpdate from '../../modals/ModalUpdate';\r\nimport TableContainer from '../../tableContainers/TableContainer';\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport test from \"../../../../core/functions/test\";\r\n\r\nimport Update1 from './forms/1/Update1';\r\nimport Update2 from './forms/2/Update2';\r\nimport Update3 from './forms/3/Update3';\r\nimport Update4 from './forms/4/Update4';\r\nimport Update5 from './forms/5/Update5';\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\n\r\nlet AdminPageAll = React.memo((props) => {\r\n    let user = useUser();\r\n    let positionsVariable = user.positions.toString();\r\n    console.log('positionsVariable', positionsVariable)\r\n\r\n    let documents = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: { ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    reason\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    reason\r\n                    data_one{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        supllier\r\n                    }\r\n                    data_custom{\r\n                        id\r\n                        document_id\r\n                        subject\r\n                        remark\r\n                    }\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n\r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    data_agreement_list_production{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    data_agreement_list_internal_needs{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n                        currency\r\n                        executor_name_division\r\n                        executor_phone_number\r\n                        counteragent_contacts\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                reason\r\n                price\r\n                supllier\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        setIsReadTrue: gql`\r\n        mutation setIsReadTrue($document: JSON) {\r\n        setIsReadTrue(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n    };\r\n\r\n\r\n    //subscriptions\r\n    const count = useRef(0);\r\n    /*const { } = useSubscription(\r\n        documents.subscription.all[0],\r\n        {\r\n            variables: { document_logs: { global: { is_read: '=false', user_id: user.id, ORDER_BY: ['date_created desc'] } } },\r\n            onSubscriptionData: ({ subscriptionData: { data } }) => {\r\n                if (data.documents.length > count.current) {\r\n                    count.current = data.documents.length;\r\n                    console.log('notification', data, count.current)\r\n                    sendNotification();\r\n                    notifyMe('Есть новые входящие сообщения 11111');\r\n                }\r\n            }\r\n        }\r\n    );*/\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false);\r\n    const visibleModalUpdate3 = useState(false);\r\n    const visibleModalUpdate4 = useState(false);\r\n    const visibleModalUpdate5 = useState(false);\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(documents.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(documents, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        count.current = data.documents.length;\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            user_info: item.fio + ' ' + item.position,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route_id: item.route_id.id,\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data ? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step: item.step,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            //step_name:console.log('DDDDDD',item.step)\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            document_logs: item.document_logs[item.document_logs.findIndex(item => item.user_id == user.id)]\r\n            //step_name: item.route_id?.routes ? item.route_id.routes[item.route_id.routes.findIndex(item => item.positionId == item.step)].positionName : ''\r\n        }\r\n    }) : [];\r\n\r\n    //console.log('list2', list2)\r\n\r\n    /*let listFiltered = list.filter((el) => {\r\n        return el.step == el.route_step && el.status_id != 4\r\n    });*/\r\n\r\n\r\n    //console.log('newArray', newArray)\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '214px', type: 'search', tooltip: true, sorter: (a, b) => a.title.localeCompare(b.title) },\r\n        { title: 'От кого', dataIndex: 'user_info', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.user_info.localeCompare(b.user_info) },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.route.localeCompare(b.route) },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: (a, b) => a.status.localeCompare(b.status) },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n        // { title: 'шаг п.', dataIndex: 'route_step', width: '55px' }\r\n    ]);\r\n\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <ModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} GQL={documents} UpdateForm={Update1}\r\n                    visibleModalUpdate2={visibleModalUpdate2} GQL2={documents} UpdateForm2={Update2}\r\n                    visibleModalUpdate3={visibleModalUpdate3} GQL3={documents} UpdateForm3={Update3}\r\n                    visibleModalUpdate4={visibleModalUpdate4} GQL4={documents} UpdateForm4={Update4}\r\n                    visibleModalUpdate5={visibleModalUpdate5} GQL5={documents} UpdateForm5={Update5}\r\n                    title='Согласование договора' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n                <Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[documents.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    {user.documentControl.delete ?\r\n                        <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 2}><DeleteOutlined />Удалить</Button> : null}\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainer\r\n            data={{ dict, records: list }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            visibleModalUpdate2={visibleModalUpdate2}\r\n            visibleModalUpdate3={visibleModalUpdate3}\r\n            visibleModalUpdate4={visibleModalUpdate4}\r\n            visibleModalUpdate5={visibleModalUpdate5}\r\n            GQL={documents}\r\n            />\r\n    )\r\n});\r\n\r\nexport default AdminPageAll;","import { DeleteOutlined, QuestionCircleOutlined, FileImageOutlined } from '@ant-design/icons';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Form, Input, Popconfirm, Typography, Space, Divider, Row, Col, Steps, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser, formatDate } from '../../../core/functions';\r\nimport ModalUpdate from '../modals/ModalUpdate';\r\nimport TableContainer from '../tableContainers/TableContainer';\r\nimport TitleMenu from '../../../core/TitleMenu';\r\nimport test from \"../../../core/functions/test\";\r\n\r\nconst { Title, Link } = Typography;\r\nconst { Step } = Steps;\r\n\r\nlet RejectedDocuments = React.memo((props) => {\r\n    let user = useUser();\r\n    let positionsVariable = user.positions.toString();\r\n    console.log('positionsVariable', positionsVariable)\r\n\r\n    let documents = {\r\n        exemplar: 'document',\r\n        table: 'documents',\r\n        options: {\r\n            all: {\r\n                variables: { documents: { global: { positions: positionsVariable, ORDER_BY: ['date_created desc'] } } },\r\n                fetchPolicy: 'cache-only'\r\n            },\r\n            one: {\r\n                fetchPolicy: 'standby'\r\n            }\r\n        },\r\n        select: {\r\n            all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                description\r\n                price\r\n                supllier\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n            one: gql`\r\n            query documents ($documents: JSON) {\r\n                documents(documents:$documents) {\r\n                    id\r\n                    title\r\n                    user_id\r\n                    username\r\n                    position\r\n                    fio\r\n                    description\r\n                    price\r\n                    supllier\r\n                    subject\r\n                    date_created\r\n                    date_modified\r\n                    status_id\r\n                    data_agreement_list{\r\n                        id\r\n                        document_id\r\n                        price\r\n                        subject\r\n    \r\n                        currency_price\r\n                        executor_name_division\r\n                        sider_signatures_date\r\n                        received_from_counteragent_date\r\n                    }\r\n                    document_logs{\r\n                        id\r\n                        document_id\r\n                        is_read\r\n                        user_id\r\n                    }\r\n                    document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                    route_id{\r\n                        id\r\n                        name\r\n                        routes\r\n                        status_in_process\r\n                        status_cancelled\r\n                        status_finished\r\n                    }\r\n                    files{\r\n                        id\r\n                        filename\r\n                    }\r\n                    signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                        fio\r\n                    }\r\n                    step\r\n                    route_data\r\n                }\r\n            }\r\n        `\r\n        },\r\n        subscription: {\r\n            all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n            ]\r\n        },\r\n        insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n        delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n    };\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false)\r\n\r\n    const [remove, { loading: loadingRemove }] = handlerMutation(useMutation(documents.delete))();\r\n\r\n    const { loading, data, refetch } = handlerQuery(documents, 'all')();\r\n    useEffect(() => { refetch() }, []);\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route_id: item.route_id.id,\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data ? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step: item.step,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            document_logs: item.document_logs[item.document_logs.findIndex(item=>item.user_id==user.id)],\r\n            //step_name:console.log('DDDDDD',item.step)\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            //step_name: item.route_id?.routes ? item.route_id.routes[item.route_id.routes.findIndex(item => item.positionId == item.step)].positionName : ''\r\n        }\r\n    }) : [];\r\n\r\n    //console.log('list2', list2)\r\n\r\n    let listFiltered = list.filter((el) => {\r\n        return el.status_id == 2\r\n    });\r\n\r\n    //console.log('newArray', newArray)\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '214px', type: 'search', tooltip: true, sorter: true },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: true },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: true },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n        // { title: 'шаг п.', dataIndex: 'route_step', width: '55px' }\r\n    ]);\r\n\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <ModalUpdate visibleModalUpdate={visibleModalUpdate} visibleModalUpdate2={visibleModalUpdate2} title='Редактирование документа' selectedRowKeys={tableProps.selectedRowKeys}\r\n                    GQL={documents} GQL2={documents} UpdateForm={DocumentsFormUpdate} UpdateForm2={DocumentsFormUpdate2} update={true} width={750} />,\r\n                <Popconfirm\r\n                    title=\"Вы уверены?\"\r\n                    onConfirm={() => { let variables = {}; variables[documents.exemplar] = { id: Number(tableProps.selectedRowKeys[0]), log_username: user.username }; remove({ variables }) }}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                    icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n                    disabled={tableProps.selectedRowKeys.length !== 1}\r\n                >\r\n                    <Button key=\"remove\" type=\"dashed\" danger loading={loadingRemove} disabled={tableProps.selectedRowKeys.length !== 1}><DeleteOutlined />Удалить</Button>\r\n                </Popconfirm>\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    };\r\n\r\n    return (\r\n        <TableContainer\r\n            data={{ dict, records: listFiltered }}\r\n            loading={loading}\r\n            title={titleMenu}\r\n            visibleModalUpdate={visibleModalUpdate}\r\n            visibleModalUpdate2={visibleModalUpdate2}\r\n            GQL={documents}\r\n        />\r\n    )\r\n});\r\n\r\nconst price_pattern= /^\\d+$/;\r\n\r\nlet DocumentsFormUpdate = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n                description: props.initialValues.documents[0].description,\r\n                price: props.initialValues.documents[0].price,\r\n                supllier: props.initialValues.documents[0].supllier,\r\n                subject: props.initialValues.documents[0].subject,\r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                document_logs: props.initialValues.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues', props.initialValues)\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование ТРУ'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Наименование ТРУ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"supllier\"\r\n                label='Поставщик ТРУ'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Поставщик ТРУ\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='\"Основание'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Основание\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label='\"Общая сумма договора'\r\n                labelCol={{ span: 24 }}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} placeholder=\"Общая сумма договора\" />\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].files.map((item) => {\r\n                    let blolbFile = new Blob([`${item.data_file}`], { type: 'data:application/vnd.openxmlformats-officedocument.wordprocessingml.document' })\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download} >{item.filename} <FileImageOutlined /></a></Link> <br/>\r\n                            {/* <Link><a href={`/uploads/${item.filename}`} data-fileid={item.id} onClick={download} >{item.filename} <FileImageOutlined /></a></Link> <br/> */}\r\n                            <Button onClick={() => { OpenDocument(item) }}>Просмотр</Button> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteForward}>\r\n                        Согласовать\r\n                    </Button>\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteBackward}>Вернуть на доработку</Button>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleStatusCancelled}>Отклонить</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\nlet DocumentsFormUpdate2 = React.memo((props) => {\r\n    let user = useUser();\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { item }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form2.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    console.log(\"PROPS UPDATE DOC 2\",props)\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                description: props.initialValues2.documents[0].data_agreement_list[0].description,\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                document_logs: props.initialValues2.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues2?.documents[0]?.data_agreement_list[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues2?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues2?.documents[0].position}\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <Form.Item\r\n                name=\"title\"\r\n                label='Наименование контрагента'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} className='form-input' placeholder=\"Наименование контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label='Предмет договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Radio.Group disabled={props.disabled} onChange={RadioOnChange} options={radioOptions} className='form-radio' value={radioState}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"price\"\r\n                label='Общая сумма договора'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                    {\r\n                        pattern: price_pattern,\r\n                        message: 'Можно использовать только цифры!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} className='form-input' placeholder=\"В валюте цены договора\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"currency_price\"\r\n                label='Общая сумма договора'\r\n                labelCol={{span:24}}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required:true,\r\n                        message:'Необходимо для заполнения!'\r\n                    }\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} className='form-input' placeholder=\"В тенге, по курсу НБ РК\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"executor_name_division\"\r\n                label='Наименование подразделения, фамилия ответственного исполнителя'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} className='form-input' placeholder=\"Наименование подразделения, фамилия ответственного исполнителя\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"sider_signatures_date\"\r\n                label='Подписанный сторонами оригинал договора получен'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} className='form-input' placeholder=\"Дата, способ получения от контрагента\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"received_from_counteragent_date\"\r\n                label='Дата получение проекта договора, способ получения от контрагента'\r\n                labelCol={{ span: 24 }}\r\n                className='form-input-label'\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Необходимо для заполнения!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input disabled={props.disabled} className='form-input' placeholder=\"Дата, способ получения от контрагента\" />\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].files.map((item) => {\r\n                    let blolbFile = new Blob([`${item.data_file}`], { type: 'data:application/vnd.openxmlformats-officedocument.wordprocessingml.document' })\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download} >{item.filename} <FileImageOutlined /></a></Link> <br/>\r\n                            {/* <Link><a href={`/uploads/${item.filename}`} data-fileid={item.id} onClick={download} >{item.filename} <FileImageOutlined /></a></Link> <br/> */}\r\n                            <Button onClick={() => { OpenDocument(item) }}>Просмотр</Button> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteForward2}>\r\n                        Согласовать\r\n                    </Button>\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleRouteBackward2}>Вернуть на доработку</Button>\r\n                        <Divider type={'vertical'} />\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={props.handleStatusCancelled}>Отклонить</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button>\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default RejectedDocuments;","import { Layout } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useUser, accessRedirect } from '../../core/functions';\r\nimport Header1 from '../../core/Header1';\r\nimport SiderMenu from './SiderMenu';\r\n//import { Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Redirect, Route, useLocation, withRouter } from 'react-router-dom';\r\nimport Orders from './/pages/Orders/Orders';\r\n\r\n//user\r\nimport RevisedPageUser from './pages/RevisedPageUser/RevisedPageUser';\r\nimport ApprovedPageUser from './pages/ApprovedPageUser/ApprovedPageUser';\r\nimport RejectedDocumentsUser from './pages/RejectedDocumentsUser/RejectedDocumentsUser'\r\n\r\n//Approver\r\nimport OnApprovalDocuments from './pages/OnApprovalDocuments/OnApprovalDocuments';\r\nimport OnApprovalDocumentsList from './pages/OnApprovalDocumentsList/OnApprovalDocumentsList';\r\n\r\n//Executioner\r\nimport ForExecutionInbox from './pages/ForExecutionInbox/ForExecutionInbox.js';\r\n\r\n//Admin\r\nimport AdminAllPage from './pages/XAdminPageAll/AdminPageAll';\r\nimport RejectedDocuments from './pages/RejectedDocuments'\r\n\r\n\r\n\r\n\r\nconst { Content } = Layout\r\n\r\nlet DocumentControl = (props) => {\r\n    let { pathname } = useLocation();\r\n    const user = useUser();\r\n\r\n    const [headerTitle, setHeaderTitle] = useState('Test');\r\n\r\n    const [countManager, setCountManager] = useState({\r\n        revised: \"0\",\r\n        approved: \"0\",\r\n        rejected: \"0\",\r\n        onaproval: \"0\",\r\n        type: \"count\"\r\n    });\r\n    const [countFunction, setCountFunction] = useState(null);\r\n\r\n    useEffect(() => {\r\n        console.log('dc effect', countFunction)\r\n    }, [countFunction]);\r\n\r\n    useEffect(() => {\r\n        console.log('dc2 effect', countManager)\r\n        if (countFunction?.setValue && typeof (countFunction.setValue) == 'function') {\r\n            countFunction.setValue(prev => {\r\n                let old = Object.assign({}, prev);\r\n                old.revised= prev.revised - countManager.revised;\r\n                old.approved = prev.approved - countManager.approved;\r\n                old.rejected = prev.rejected - countManager.rejected;\r\n                old.onaproval = prev.onaproval - countManager.onaproval;\r\n                return old;\r\n            })\r\n        };\r\n    }, [countManager]);\r\n\r\n    if (pathname === '/document-control/' || pathname === '/document-control') {\r\n        if (user.documentControl.orders.select) {\r\n            return <Redirect to='/document-control/orders' />;\r\n        }\r\n    };\r\n\r\n    const countF = (stateSetter) => {\r\n        console.log('Setter', stateSetter);\r\n        console.log('Setter2', countF);\r\n        const setValue = (value) => {\r\n            stateSetter(value)\r\n        }\r\n        setCountFunction({ setValue: setValue, stateSetter: stateSetter });\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Header1 title={headerTitle} user={user} />\r\n            <Layout>\r\n                <SiderMenu setHeaderTitle={setHeaderTitle} setCountManager={setCountManager} countF={countF} />\r\n                <Layout className=\"content-layout\">\r\n                    <Content className=\"site-layout-background\"\r\n                        style={{\r\n                            padding: 24,\r\n                            margin: 0,\r\n                            minHeight: 280\r\n                        }}>\r\n\r\n                        <Route path={'/document-control/orders'} component={accessRedirect(Orders)} />\r\n                            <Route path={'/document-control/reviseduser'} component={accessRedirect(RevisedPageUser)} />\r\n                            <Route path={'/document-control/approveduser'} component={accessRedirect(ApprovedPageUser)} />\r\n                            <Route path={'/document-control/rejecteduser'} component={accessRedirect(RejectedDocumentsUser)} />\r\n\r\n                        \r\n                        <Route exact path=\"/document-control/on-approval\" render={(props) => <OnApprovalDocuments {...props} title={`Props through render`} />} setCountManager={setCountManager}/>\r\n                        <Route path={'/document-control/on-approval-list'} component={accessRedirect(OnApprovalDocumentsList)} />\r\n\r\n                        <Route path={'/document-control/approved'} component={accessRedirect(AdminAllPage)} />\r\n                        <Route path={'/document-control/rejected'} component={accessRedirect(RejectedDocuments)} />\r\n\r\n                        <Route path={'/document-control/for-execution-inbox'} component={accessRedirect(ForExecutionInbox)} />\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n            </Layout>\r\n    )\r\n}\r\n\r\nexport default withRouter(DocumentControl);","import {\r\n    CrownOutlined,\r\n    LogoutOutlined,\r\n    ArrowLeftOutlined, \r\n    UserOutlined, \r\n    ReadOutlined,\r\n    BellFilled\r\n} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n// import '../index.css';\r\nimport { Grid, Dropdown, Menu, Col, Layout, Row, Space, PageHeader, Avatar, Popover, Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n// import notification from \"./img/notification.png\"\r\n\r\nconst { Header } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nlet Header1 = React.memo(({ title, user, ...props }) => {\r\n    const screens = useBreakpoint();\r\n    let history = useHistory();\r\n\r\n    let { pathname } = useLocation();\r\n    const text = <span>Title</span>;\r\n    const content = (\r\n        <div>\r\n            <p>Content</p>\r\n            <p>Content</p>\r\n        </div>\r\n    );\r\n    return <div>\r\n        <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}>\r\n            <Row justify=\"space-between\" align=\"middle\" style={{ paddingLeft: 46 }}>\r\n                <Col flex=\"auto\" style={{ color: \"c40c46\" }}>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n                        // onBack={() => null}\r\n                        backIcon={<ArrowLeftOutlined style={{ color: \"white\" }} />}\r\n                        onBack={pathname === '/' ? null : () => { history.push('/') }}\r\n                        title={<div style={{ color: \"white\" }}>Согласование договоров</div>}\r\n\r\n                    // subTitle=\"This is a subtitle\"\r\n                    />\r\n                </Col>\r\n                {screens.sm ? <Col flex=\"auto\">\r\n                    <h1 style={{ color: 'white' }}>{title}</h1>\r\n                </Col> : <></>}\r\n\r\n                {/*<Col>\r\n                    <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                        <span className='notificationDot'></span>\r\n                        <BellFilled className='notification' />\r\n                         <Avatar shape=\"square\" size=\"small\" icon={<BellOutlined className='notification'/>} /> \r\n                    </Popover>\r\n                </Col>*/}\r\n                <Col><Avatar shape=\"square\" size=\"small\" icon={<UserOutlined />} /></Col>\r\n\r\n                <Col flex=\"70px\" style={{ marginRight: \"30px\" }}>\r\n                    <Space direction=\"vertical\" align=\"center\" style={{ width: '100%' }}>\r\n\r\n                        {/*<Button type=\"primary\"><a href=\"/logout\">Выйти</a></Button>*/}\r\n                        <Dropdown overlay={<Menu>\r\n                            {user.admin &&\r\n                                <Menu.Item danger onClick={() => { history.push('/admin/') }} style={{ textAlign: 'center' }}>\r\n                                    <CrownOutlined />ADMIN\r\n                                </Menu.Item>}\r\n\r\n                            {user.admin && <Menu.Item danger onClick={() => {\r\n\r\n                                let a = document.createElement('a');\r\n                                a.target = '_blank';\r\n                                a.title = 'IUPC-WEB';\r\n                                a.href = '/help/admin';\r\n                                a.click();\r\n                            }} style={{ textAlign: 'center' }}><ReadOutlined />Справка</Menu.Item>}\r\n\r\n                            {user.technicalDepartment && !user.admin && <Menu.Item danger onClick={() => {\r\n\r\n                                let a = document.createElement('a');\r\n                                a.target = '_blank';\r\n                                a.title = 'ZIK-СКУД';\r\n                                a.href = '/help/hr';\r\n                                a.click();\r\n                            }} style={{ textAlign: 'center' }}><ReadOutlined />Справка</Menu.Item>}\r\n\r\n                            <Menu.Item danger onClick={() => { window.location.href = '/account/' }} style={{ textAlign: 'center' }}><UserOutlined />Аккаунт</Menu.Item>\r\n                            <Menu.Item danger onClick={() => { window.location.href = '/logout/' }} style={{ textAlign: 'center' }}><LogoutOutlined />Выйти</Menu.Item>\r\n                        </Menu>} placement=\"bottomCenter\" trigger={['click']}>\r\n                            <a className=\"ant-dropdown-link userName\" onClick={e => e.preventDefault()} style={{ fontSize: 21 }}>\r\n                                {user.username}\r\n                            </a>\r\n                        </Dropdown>\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Header>\r\n    </div>\r\n});\r\n\r\nexport default Header1;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { useMutation,useQuery,gql } from '@apollo/client';\r\nimport { Button, Form, Modal, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { handlerQuery, handlerMutation, useUser } from '../../../core/functions';\r\n\r\nconst insertComment = gql`\r\n       mutation insertComment($comment: JSON) {\r\n        insertComment(comment: $comment) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nconst insertSignature = gql`\r\n       mutation insertSignature($signature: JSON) {\r\n        insertSignature(signature: $signature) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nconst deleteSignature = gql`\r\n       mutation deleteSignature($signature: JSON) {\r\n        deleteSignature(signature: $signature) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n`;\r\nconst deleteFile = gql`\r\n        mutation deleteFile($document_files :JSON){\r\n            deleteFile(document_files:$document_files){\r\n                type\r\n                message\r\n            }\r\n        }`\r\n\r\nconst comments = gql`\r\n        query document_comments($document_comments: JSON) {\r\n            document_comments(document_comments:$document_comments) {\r\n                id\r\n                comment\r\n                document_id\r\n                user_id\r\n                position\r\n                username\r\n                fio\r\n                date\r\n            }\r\n        }\r\n    `;\r\n\r\n\r\n\r\nlet ModalUpdate = React.memo(({ GQL, GQL2, GQL3, GQL4, GQL5, UpdateForm, UpdateForm2, UpdateForm3, UpdateForm4, UpdateForm5, ...props }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [form2] = Form.useForm();\r\n    const [form3] = Form.useForm();\r\n    const [form4] = Form.useForm();\r\n    const [form5] = Form.useForm();\r\n\r\n    const [visible, setVisible] = props.visibleModalUpdate ? props.visibleModalUpdate:[];\r\n    const [visible2, setVisible2] = props.visibleModalUpdate2 ? props.visibleModalUpdate2:[];\r\n    const [visible3, setVisible3] = props.visibleModalUpdate3 ? props.visibleModalUpdate3:[];\r\n    const [visible4, setVisible4] = props.visibleModalUpdate4 ? props.visibleModalUpdate4:[];\r\n    const [visible5, setVisible5] = props.visibleModalUpdate5 ? props.visibleModalUpdate5:[];\r\n    const [viewMode, setViewMode] = useState(true);\r\n\r\n    const user = useUser();\r\n\r\n    //-------modal handling\r\n    let modalCancelHandler = () => {\r\n        setVisible(false); setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false)\r\n        setViewMode(true)\r\n    }\r\n\r\n    let modalEnableEditHandler = () => {\r\n        setViewMode(false);\r\n    }\r\n\r\n    const { confirm } = Modal;\r\n    function showSendConfirm() {\r\n        confirm({\r\n            title: 'Вы действительно хотите отправить документ?',\r\n            content: `test`,\r\n            okText: 'Отправить',\r\n            cancelText: 'Отмена',\r\n            onOk() { },\r\n            onCancel() { },\r\n        });\r\n    }\r\n\r\n    //---------------------------------------------------------------------------data view handling\r\n    let variables1 = {}; variables1[GQL.table] = GQL.table ?{ global: { id: `= ${props.selectedRowKeys[0]}` } } : {};\r\n    let variables2 = {}; variables2[GQL2.table] = GQL2.table ? { global: { id: `= ${props.selectedRowKeys[0]}` } } : {};\r\n    let variables3 = {}; variables3[GQL3?.table ? GQL3.table : {}] = { global: { id: `= ${props.selectedRowKeys[0]}` } };\r\n    let variables4 = {}; variables4[GQL4?.table ? GQL4.table : {}] = { global: { id: `= ${props.selectedRowKeys[0]}` } };\r\n    let variables5 = {}; variables5[GQL5?.table ? GQL5.table : {}] = { global: { id: `= ${props.selectedRowKeys[0]}` } };\r\n\r\n    const { loading: loadingOne, data, refetch } = handlerQuery(GQL, 'one', { variables1 })();\r\n    const { loading: loadingTwo, data: data2, refetch: refetch2 } = handlerQuery(GQL2, 'one', { variables2 })();\r\n    const { loading: loadingThree, data: data3, refetch: refetch3 } = handlerQuery(GQL3, 'one', { variables3 })();\r\n    const { loading: loadingFour, data: data4, refetch: refetch4 } = handlerQuery(GQL4, 'one', { variables4 })();\r\n    const { loading: loadingFive, data: data5, refetch: refetch5 } = handlerQuery(GQL5, 'one', { variables5 })();\r\n\r\n    useEffect(() => {if (data) {form.resetFields() } }, [data]);\r\n    useEffect(() => {if (data2) {form2.resetFields() } }, [data2]);\r\n    useEffect(() => {if (data3) {form3.resetFields() } }, [data3]);\r\n    useEffect(() => {if (data4) {form4.resetFields() } }, [data4]);\r\n    useEffect(() => {if (data5) {form5.resetFields() } }, [data5]);\r\n\r\n    useEffect(() => { if (visible) { refetch(variables1) }; }, [visible]);\r\n    useEffect(() => { if (visible2) { refetch2(variables2); } }, [visible2]);\r\n    useEffect(() => { if (visible3) { refetch3(variables3); } }, [visible3]);\r\n    useEffect(() => { if (visible4) { refetch4(variables4); } }, [visible4]);\r\n    useEffect(() => { if (visible5) { refetch5(variables5); } }, [visible5]);\r\n    //-----------------------------------------------------------------------------------------------------\r\n\r\n    //-------------mutations\r\n    const [update, { loading: loadingUpdate }] = handlerMutation(useMutation(GQL.update), () => { setVisible(false); setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false); setViewMode(true); })();\r\n\r\n    //---------comments\r\n    const [commentText, setCommentText] = useState();\r\n    let commentVariables = props?.selectedRowKeys[0] ? { variables: { document_comments: { global: { document_id: `= ${props.selectedRowKeys[0]}`, ORDER_BY: ['date'] } } } } : {};\r\n    const { loading: loadingComments, data: dataComments, refetch: refetchComments } = useQuery(comments, commentVariables);\r\n    useEffect(() => { if (visible) { refetchComments(commentVariables) } }, [visible]);\r\n    let commentsList = (dataComments && dataComments[Object.keys(dataComments)[0]] != null) ? dataComments[Object.keys(dataComments)[0]].map((item) => {\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            comment: item.comment ? item.comment : '',\r\n            position: item.position ? item.position: '',\r\n            document_id: item.document_id ? item.document_id : '',\r\n            user_id: item.user_id ? item.user_id : '',\r\n            username: item.username,\r\n            fio: item.fio,\r\n            date: item.date ? item.date : ''\r\n        }\r\n    }) : [];\r\n    //console.log('commentsdata', dataComments)\r\n\r\n    const [dataComment, { loading: loadingMutation, error: errorMutation }] = useMutation(insertComment, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n    let handleComment = (form) => {\r\n        dataComment({ variables: { comment: { user_id: user.id, username: user.username, fio: user.fio, document_id: props.selectedRowKeys[0], position: user.position_names[0], comment: commentText } } });\r\n        refetchComments(commentVariables);\r\n        form.resetFields([\"comments\"]);\r\n    };\r\n    let HandleCommentOnChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setCommentText(all.target.value)\r\n        }\r\n    }\r\n\r\n    //----------signatures\r\n    const [step, setStep] = useState();\r\n    const [status, setStatus] = useState();\r\n    const [routeData, setRouteData] = useState();\r\n    const [dataSignature, { loading: loadingSignature, error: errorSignature }] = useMutation(insertSignature, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n    const [dataSignatureDelete, { loading: loadingSignatureDelete, error: errorSignatureDelete }] = useMutation(deleteSignature, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n\r\n    //--------------------------------------------approve processes\r\n    let handleRouteForward = () => {\r\n\r\n        let routeFinishIndex = data.documents[0].route_data.length;\r\n        let routeCurrentIndex = data.documents[0].step;\r\n\r\n        // SEARCH POSITION ID\r\n        setRouteData(data.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1);\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data.documents[0].signatures.filter(e => e.document_id == data.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data.documents[0].signatures.filter(e => e.document_id == data.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n\r\n    };\r\n    let handleRouteForward2 = () => {\r\n\r\n        let routeFinishIndex = data2.documents[0].route_data.length;\r\n        let routeCurrentIndex = data2.documents[0].step;\r\n\r\n        setRouteData(data2.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1)\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data2.documents[0].signatures.filter(e => e.document_id == data2.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data2.documents[0].signatures.filter(e => e.document_id == data2.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n    }\r\n    let handleRouteForward3 = () => {\r\n\r\n        let routeFinishIndex = data3.documents[0].route_data.length;\r\n        let routeCurrentIndex = data3.documents[0].step;\r\n\r\n        setRouteData(data3.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1)\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data3.documents[0].signatures.filter(e => e.document_id == data3.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data3.documents[0].signatures.filter(e => e.document_id == data3.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n    }\r\n    let handleRouteForward4 = () => {\r\n\r\n        let routeFinishIndex = data4.documents[0].route_data.length;\r\n        let routeCurrentIndex = data4.documents[0].step;\r\n\r\n        setRouteData(data4.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1)\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data4.documents[0].signatures.filter(e => e.document_id == data4.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data4.documents[0].signatures.filter(e => e.document_id == data4.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n    }\r\n    let handleRouteForward5 = () => {\r\n\r\n        let routeFinishIndex = data5.documents[0].route_data.length;\r\n        let routeCurrentIndex = data5.documents[0].step;\r\n\r\n        setRouteData(data5.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex + 1 }))\r\n        if (routeCurrentIndex < routeFinishIndex) {\r\n            setStep(routeCurrentIndex + 1)\r\n            if (status != 5) setStatus(5);\r\n            const signatureFilter = data5.documents[0].signatures.filter(e => e.document_id == data5.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n        else if (routeCurrentIndex = routeFinishIndex) {\r\n            setStep(routeCurrentIndex);\r\n            setStatus(4);\r\n            const signatureFilter = data5.documents[0].signatures.filter(e => e.document_id == data5.documents[0].id && e.user_id == user.id);\r\n            if (signatureFilter.filter(e => e.user_id == user.id).length == 0) {\r\n                dataSignature({ variables: { signature: { user_id: user.id, username: user.username, position: user.position_names[0], fio: user.fio, document_id: props.selectedRowKeys[0] } } });\r\n            }\r\n        }\r\n    }\r\n\r\n    const showInfoMessageRouteUnavailable = () => {\r\n        message.info('Нельзя возвратить документ на нулевой уровень, достигнуто начало маршрута.', 10);\r\n    };\r\n    let handleRouteBackward = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data.documents[0].step;\r\n\r\n        setRouteData(data.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n            showInfoMessageRouteUnavailable();\r\n        }\r\n    }\r\n    let handleRouteBackward2 = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data2.documents[0].step;\r\n\r\n        setRouteData(data2.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n            showInfoMessageRouteUnavailable();\r\n        }\r\n    };\r\n    let handleRouteBackward3 = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data3.documents[0].step;\r\n\r\n        setRouteData(data3.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n            showInfoMessageRouteUnavailable();\r\n        }\r\n    };\r\n    let handleRouteBackward4 = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data4.documents[0].step;\r\n\r\n        setRouteData(data4.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n            showInfoMessageRouteUnavailable();\r\n        }\r\n    };\r\n    let handleRouteBackward5 = () => {\r\n\r\n        let routeFirstIndex = 1;\r\n        let routeCurrentIndex = data5.documents[0].step;\r\n\r\n        setRouteData(data5.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex - 1 }))\r\n        if (routeCurrentIndex > routeFirstIndex) {\r\n            setStep(routeCurrentIndex - 1)\r\n        }\r\n        else if (routeCurrentIndex = routeFirstIndex) {\r\n            setStep(routeCurrentIndex);\r\n        }\r\n    };\r\n\r\n    let handleRouteReturnToSender = () => {\r\n        //setStep(0); doe not work\r\n        setStatus(7);\r\n    };\r\n\r\n    let handleRouteFromUserEditToApprove = () => { //user send to approve\r\n        let routeCurrentIndex = data.documents[0].step;\r\n\r\n        setRouteData(data.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex}))\r\n        setStatus(5);\r\n    }\r\n    let handleRouteFromUserEditToApprove2 = () => { //user send to approve\r\n        let routeCurrentIndex = data2.documents[0].step;\r\n\r\n        setRouteData(data2.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex}))\r\n        setStatus(5);\r\n    }\r\n    let handleRouteFromUserEditToApprove3 = () => { //user send to approve\r\n        let routeCurrentIndex = data3.documents[0].step;\r\n\r\n        setRouteData(data3.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex}))\r\n        setStatus(5);\r\n    }\r\n    let handleRouteFromUserEditToApprove4 = () => { //user send to approve\r\n        let routeCurrentIndex = data4.documents[0].step;\r\n\r\n        setRouteData(data4.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex}))\r\n        setStatus(5);\r\n    }\r\n    let handleRouteFromUserEditToApprove5 = () => { //user send to approve\r\n        let routeCurrentIndex = data5.documents[0].step;\r\n\r\n        setRouteData(data5.documents[0].route_data.filter((el) => { return el.step == routeCurrentIndex}))\r\n        setStatus(5);\r\n    }\r\n    //------------------document statuses\r\n    let handleStatusCancelled=() => {\r\n        setStatus(2);\r\n    };\r\n\r\n\r\n    //---------------------------------------debug\r\n    // useEffect(() => { console.log('loadingOne status:', loadingOne) }, [loadingOne]);\r\n    // useEffect(() => { console.log('loadingTwo status:', loadingTwo) }, [loadingTwo]);\r\n    // useEffect(() => { console.log('loadingThree status:', loadingThree) }, [loadingThree]);\r\n    // useEffect(() => { console.log('loadingFour status:', loadingFour) }, [loadingFour]);\r\n\r\n    console.log('route_data', routeData)\r\n    console.log('data', data)\r\n\r\n\r\n    let HandleDeleteFile = (file) => {\r\n        console.log('CLIIIICK',file)\r\n        fileDelete({variables:{document_files:{id:file.id}}})\r\n    }\r\n    const [fileDelete, { loading: loadingFileDelete, error: errorDileDelete }] = useMutation(deleteFile, {\r\n        onCompleted: (data) => console.log(\"Data from mutation\", data),\r\n        onError: (error) => console.error(\"Error creating a post\", error)\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                disabled={props.selectedRowKeys.length !== 2}\r\n                onClick={() => { setVisible(true) }}\r\n            >\r\n                <EyeOutlined />Просмотр\r\n            </Button>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible}\r\n\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form.submit() }}\r\n                onCancel={() => { setVisible(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward={handleRouteForward}\r\n                    handleRouteBackward={handleRouteBackward}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove={handleRouteFromUserEditToApprove}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form={form}\r\n                    onFinish={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 10;\r\n                        variables[GQL.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues={data}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible2}\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form2.submit() }}\r\n                onCancel={() => { setVisible2(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm2\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward2={handleRouteForward2}\r\n                    handleRouteBackward2={handleRouteBackward2}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    handleRouteFromUserEditToApprove2={handleRouteFromUserEditToApprove2}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form2={form2}\r\n                    onFinish2={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 24;\r\n                        variables[GQL2.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues2={data2}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible3}\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form3.submit() }}\r\n                onCancel={() => { setVisible3(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm3\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward3={handleRouteForward3}\r\n                    handleRouteBackward3={handleRouteBackward3}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove3={handleRouteFromUserEditToApprove3}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form3={form3}\r\n                    onFinish3={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 26;\r\n                        variables[GQL3.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues3={data3}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible4}\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form4.submit() }}\r\n                onCancel={() => { setVisible4(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm4\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward4={handleRouteForward4}\r\n                    handleRouteBackward4={handleRouteBackward4}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove4={handleRouteFromUserEditToApprove4}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form4={form4}\r\n                    onFinish4={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 27;\r\n                        variables[GQL.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues4={data4}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible5}\r\n                centered\r\n                // width={props.width?props.width:450}\r\n                width={900}\r\n                onOk={() => { form5.submit() }}\r\n                onCancel={() => { setVisible5(false); setViewMode(true) }}\r\n\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                footer={null}\r\n            >\r\n                <UpdateForm5\r\n                    commentsList={commentsList}\r\n                    HandleComment={handleComment}\r\n                    HandleCommentOnChange={HandleCommentOnChange}\r\n\r\n                    handleRouteForward5={handleRouteForward5}\r\n                    handleRouteBackward5={handleRouteBackward5}\r\n\r\n                    HandleDeleteFile={HandleDeleteFile}\r\n\r\n                    handleRouteReturnToSender={handleRouteReturnToSender}\r\n\r\n                    handleRouteFromUserEditToApprove5={handleRouteFromUserEditToApprove5}\r\n\r\n                    handleStatusCancelled={handleStatusCancelled}\r\n\r\n                    modalCancelHandler={modalCancelHandler}\r\n                    modalEnableEditHandler={modalEnableEditHandler}\r\n\r\n                    form5={form5}\r\n                    onFinish5={(values) => {\r\n                        let variables = {};\r\n                        console.log('values on finish', values);\r\n                        if (step) { values.step = step };\r\n                        if (status) { values.status_id = status };\r\n                        values.is_read = false\r\n                        if (routeData && routeData[0]?.positionId) { values.positionId = routeData[0].positionId }\r\n                        values.route_id = 29;\r\n                        variables[GQL.exemplar] = values;\r\n                        update({ variables })\r\n                    }}\r\n                    initialValues5={data5}\r\n                    disabled={viewMode}\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ModalUpdate;","\r\nimport { Table } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nlet TableContainer = React.memo((props) => {\r\n    let [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n    let itemKeys = [];\r\n\r\n    if (!props.loading) {\r\n        itemKeys = props.data.records.map((item) => {\r\n            return item.id\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSelectedRowKeys(selectedRowKeys.filter((item) => {\r\n            for (var i = 0; i < itemKeys.length; i++) {\r\n                if (itemKeys[i] == item) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }));\r\n    }, [props.data]);\r\n\r\n    //console.log('props TableContainer', props)\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                className='sd-tables-row-hover'\r\n                loading={props.loading}\r\n                style={{minHeight: 168}}\r\n                // bordered={true}\r\n                columns={props.data.dict}\r\n                dataSource={props.data.records}\r\n                scroll={{ y: 'calc(100vh - 231px)', minX: 500 }}\r\n                size='small'\r\n                title={props.title ? () => (props.title({ selectedRowKeys: selectedRowKeys })) : null}\r\n                bordered={props.bordered}\r\n                onChange={props.onChange}\r\n                onRow={(record, rowIndex) => {\r\n                    return {\r\n                        onClick: event => { setSelectedRowKeys([record.key, record.route_id]);console.log('SelectedRowKeys', selectedRowKeys) },\r\n                        onDoubleClick: event => {\r\n                            if(record.route_id == 10){\r\n                                props.visibleModalUpdate[1](true)\r\n                            }\r\n                            if(record.route_id == 24){\r\n                                props.visibleModalUpdate2[1](true)\r\n                            }\r\n                            if(record.route_id == 26){\r\n                                props.visibleModalUpdate3[1](true)\r\n                            }\r\n                            if(record.route_id == 27){\r\n                                props.visibleModalUpdate4[1](true)\r\n                            }\r\n                            if(record.route_id == 29){\r\n                                props.visibleModalUpdate5[1](true)\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                pagination={{\r\n                    // simple: true,\r\n                    pageSize: 50,\r\n\t\t\t\t\t//defaultCurrent=6, - to check both commented\r\n\t\t\t\t\t//total={props.data.records.length},\r\n                    showSizeChanger: false\r\n                }}\r\n                rowClassName={(record, index) => {\r\n                    let className = ''\r\n                    if (record.is_read == false){\r\n                        className += 'is_read_false'\r\n                    }\r\n                    if (record.key === selectedRowKeys[0]) {\r\n                        return 'ant-table-row ant-table-row-level-0 statusSelected';\r\n                    }\r\n                    return 'ant-table-row ant-table-row-level-0', className;\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default TableContainer\r\n","import {Button, Input, Space} from \"antd\";\r\nimport {SearchOutlined} from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport React from \"react\";\r\n\r\nconst getColumnSearchTextProps = (dataIndex, placeholder, render = (text)=>{return text}) => {\r\n    let searchInput;\r\n    let searchText = '';\r\n    let searchedColumn = '';\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        searchText = selectedKeys[0];\r\n        searchedColumn = dataIndex;\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        searchText = '';\r\n    };\r\n\r\n    return {\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        searchInput = node;\r\n                    }}\r\n                    placeholder={placeholder}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Найти\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Сброс\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: (text, record) =>\r\n            searchedColumn === dataIndex ? (\r\n                render(<Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />, record)\r\n            ) : (\r\n                render(text, record)\r\n            ),\r\n    }};\r\n\r\nexport default getColumnSearchTextProps;","import getColumnSearchTextProps from \"./getColumnSearchTextProps\";\r\nimport React from \"react\";\r\nimport {Tooltip} from \"antd\";\r\n\r\nlet withoutWordWrap = (minWidth = 10) =>{\r\n    return text =>\r\n        <div style={{ whiteSpace:'pre',overflow: 'hidden', minWidth: minWidth -16, textOverflow: 'ellipsis'}}>{text}</div>\r\n}\r\nlet withoutWordWrapWithTooltip = (minWidth = 10) =>{\r\n    return text =>\r\n        <Tooltip title={text} color={'grey'}>\r\n            <div style={{ whiteSpace:'pre',overflow: 'hidden', minWidth: minWidth -16, textOverflow: 'ellipsis'}}>{text}</div>\r\n        </Tooltip>\r\n}\r\n\r\n\r\nlet test1 = ({title, dataIndex,  width,  render = (text) => {return text}, filters, onFilter,type, tooltip, children, ...object }) => {\r\n    if (children) {\r\n        return {title, dataIndex,  width,  render, filters, onFilter,type, tooltip, children, ...object };\r\n    }\r\n    let textRender = withoutWordWrap;\r\n    if (tooltip) {\r\n        textRender = withoutWordWrapWithTooltip;\r\n    }\r\n\r\n    const getProps = (type) => {\r\n        switch (type) {\r\n            case 'search':\r\n                return getColumnSearchTextProps(dataIndex, title, (text, record)=>{ return textRender(width)(render(text, record))})\r\n            case 'filter':\r\n                return {\r\n\r\n                }\r\n            default:\r\n                return {\r\n                    render : (text, record)=>{return textRender(width)(render(text, record))}\r\n                }\r\n        }\r\n    }\r\n    return {\r\n        title: withoutWordWrap(width)(title),\r\n        dataIndex,\r\n        width,\r\n        filters,\r\n        onFilter,\r\n        ...object,\r\n        ...getProps(type)\r\n    }\r\n}\r\n\r\nconst test = (columns) => {\r\n\r\n    return columns.map((object)=>{\r\n        return test1(object)\r\n    })\r\n};\r\n\r\nexport default test;","import { gql } from '@apollo/client';\r\nlet variables = {};\r\n\r\nlet gqlMain = {\r\n    exemplar: 'document',\r\n    table: 'documents',\r\n    options: {\r\n        all: {\r\n            variables: variables,\r\n            fetchPolicy: 'cache-only'\r\n        },\r\n        one: {\r\n            fetchPolicy: 'standby'\r\n        }\r\n    },\r\n    select: {\r\n        all: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }`,\r\n        one: gql`\r\n        query documents ($documents: JSON) {\r\n            documents(documents:$documents) {\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                position\r\n                fio\r\n                price\r\n                supllier\r\n                subject\r\n                date_created\r\n                date_modified\r\n                status_id\r\n                reason\r\n                data_one{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    supllier\r\n                }\r\n                data_custom{\r\n                    id\r\n                    document_id\r\n                    subject\r\n                    remark\r\n                }\r\n                data_agreement_list{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n\r\n                    currency_price\r\n                    executor_name_division\r\n                    sider_signatures_date\r\n                    received_from_counteragent_date\r\n                }\r\n                data_agreement_list_production{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                data_agreement_list_internal_needs{\r\n                    id\r\n                    document_id\r\n                    price\r\n                    subject\r\n                    currency\r\n                    executor_name_division\r\n                    executor_phone_number\r\n                    counteragent_contacts\r\n                }\r\n                document_logs{\r\n                    id\r\n                    document_id\r\n                    is_read\r\n                    user_id\r\n                }\r\n                document_statuses{\r\n                    id\r\n                    name\r\n                }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                files{\r\n                    id\r\n                    filename\r\n                }\r\n                signatures{\r\n                    id\r\n                    document_id\r\n                    user_id\r\n                    username\r\n                    date_signature\r\n                    position\r\n                    fio\r\n                }\r\n                step\r\n                route_data\r\n            }\r\n        }\r\n        `\r\n    },\r\n    subscription: {\r\n        all: [gql`\r\n        subscription documents ($documents: JSON){\r\n            documents(documents: $documents){\r\n                id\r\n                title\r\n                user_id\r\n                username\r\n                fio\r\n                position\r\n                date_created\r\n                reason\r\n                date_modified\r\n                status_id\r\n                document_statuses{\r\n                        id\r\n                        name\r\n                    }\r\n                route_id{\r\n                    id\r\n                    name\r\n                    routes\r\n                    status_in_process\r\n                    status_cancelled\r\n                    status_finished\r\n                }\r\n                signatures{\r\n                        id\r\n                        document_id\r\n                        user_id\r\n                        username\r\n                        date_signature\r\n                        position\r\n                    }\r\n                step\r\n                route_data\r\n            }\r\n        }`\r\n        ]\r\n    },\r\n    insert: gql`\r\n       mutation insertDocument($document: JSON) {\r\n        insertDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    update: gql`\r\n        mutation updateDocument($document: JSON) {\r\n        updateDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `,\r\n    delete: gql`\r\n        mutation deleteDocument($document: JSON) {\r\n        deleteDocument(document: $document) {\r\n            type\r\n            message\r\n        }\r\n    }\r\n    `\r\n};\r\n\r\nexport default gqlMain;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../core/functions';\r\n\r\n//pop confirm\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update1 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => { props.form.setFieldsValue(state) }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    console.log(\"PROPS UPDATE DOC\", props)\r\n    useEffect(() => {\r\n        if (props.initialValues) {\r\n            setState({\r\n                id: props.initialValues.documents[0].id,\r\n                title: props.initialValues.documents[0].title,\r\n                position: props.initialValues.documents[0].position,\r\n                username: props.initialValues.documents[0].username,\r\n                fio: props.initialValues.documents[0].fio,\r\n\r\n                price: props.initialValues.documents[0].data_one[0].price,\r\n                supllier: props.initialValues.documents[0].data_one[0].supllier,\r\n                subject: props.initialValues.documents[0].data_one[0].subject,\r\n                \r\n                date_created: props.initialValues.documents[0].date_created,\r\n                date_modified: props.initialValues.documents[0].date_modified,\r\n                route_id: props.initialValues.documents[0].route_id.id,\r\n                status_in_process: props.initialValues.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues.documents[0].status_id,\r\n                reason:props.initialValues.documents[0].reason,\r\n                route: props.initialValues.documents[0].route_data,\r\n                step: props.initialValues.documents[0].step,\r\n                comments: props.initialValues.documents[0].comments,\r\n                signatures: props.initialValues.documents[0].signatures,\r\n                files: props.initialValues.documents[0].files,\r\n                document_logs: props.initialValues.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            console.log('props.initialValues', props.initialValues)\r\n            setStepCount({ step: props.initialValues.documents[0].step })\r\n            setRoutesList(props.initialValues.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    //confirmations\r\n    const [reasonText, setReasonText] = useState(props?.initialValues?.documents[0]?.reason); \r\n    const ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form}\r\n            name=\"DocumentsForm\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })) }}\r\n        >\r\n            <b>От:</b> {props?.initialValues?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Закуп ТРУ</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование ТРУ: </Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Поставщик ТРУ: </Col> <Col span={12}>{state.supllier}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание: </Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0]?.files?.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues?.documents[0]?.signatures?.map((item) => {  //remove commentsList\r\n                    return (<> \r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                     </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    {/* <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user}/>\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user}/>\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user}/>\r\n                    </Space> */}\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    {/* <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button> */}\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {/* <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" /> */}\r\n                {props?.initialValues?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={() => { props.HandleComment(props.form)}} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update1;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../core/functions';\r\n\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update2 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.form2.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues2) {\r\n            setState({\r\n                id: props.initialValues2.documents[0].id,\r\n                title: props.initialValues2.documents[0].title,\r\n                position: props.initialValues2.documents[0].position,\r\n                username: props.initialValues2.documents[0].username,\r\n                fio: props.initialValues2.documents[0].fio,\r\n\r\n                price: props.initialValues2.documents[0].data_agreement_list[0].price,\r\n                subject: props.initialValues2.documents[0].data_agreement_list[0].subject,\r\n\r\n                currency_price: props.initialValues2.documents[0].data_agreement_list[0].currency_price,\r\n                executor_name_division: props.initialValues2.documents[0].data_agreement_list[0].executor_name_division,\r\n                sider_signatures_date: props.initialValues2.documents[0].data_agreement_list[0].sider_signatures_date,\r\n                received_from_counteragent_date: props.initialValues2.documents[0].data_agreement_list[0].received_from_counteragent_date,\r\n\r\n                reason: props.initialValues2.documents[0].reason,\r\n                date_created: props.initialValues2.documents[0].date_created,\r\n                date_modified: props.initialValues2.documents[0].date_modified,\r\n                route_id: props.initialValues2.documents[0].route_id.id,\r\n                status_in_process: props.initialValues2.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues2.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues2.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues2.documents[0].status_id,\r\n                route: props.initialValues2.documents[0].route_data,\r\n                step: props.initialValues2.documents[0].step,\r\n                comments: props.initialValues2.documents[0].comments,\r\n                signatures: props.initialValues2.documents[0].signatures,\r\n                files: props.initialValues2.documents[0].files,\r\n                document_logs: props.initialValues2.documents[0].document_logs,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues2.documents[0].step })\r\n            setRoutesList(props.initialValues2.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues2]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish2(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    const [reasonText, setReasonText] = useState(props?.initialValues?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        { label: 'Закупки товаров, работ и услуг', value: '1' },\r\n        { label: 'Поставка продукции (выполнение работ, оказание услуг) заказчикам', value: '2' },\r\n        { label: 'Передача имущества в аренду (бесплатное пользование)', value: '3' },\r\n        { label: 'Совместная деятельность', value: '4' },\r\n        { label: 'Финансирование (кредитование, обеспечение исполнения обязательств)', value: '5' },\r\n        { label: 'Прочие обязательства', value: '6' }\r\n    ]\r\n    const [radioState, setRadioState] = useState(props?.initialValues2?.documents[0]?.data_agreement_list[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={props.form2}\r\n            name=\"DocumentsForm2\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE2 values', allValues) }}\r\n\r\n        >\r\n            <b>От:</b> {props?.initialValues2?.documents[0].fio} <br />\r\n            <b>Должность:</b> {props?.initialValues2?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n\r\n            <Divider type={'horizontal'} />\r\n\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора в валюте цены договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора в тенге, по курсу НБ РК:</Col> <Col span={12}>{state.currency_price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Подписанный сторонами оригинал договора получен, дата, способ получения от контрагента:</Col> <Col span={12}>{state.sider_signatures_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Дата получение проекта договора, способ получения от контрагента:</Col> <Col span={12}>{state.received_from_counteragent_date}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />} /> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues2?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    {/* <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space> */}\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    {/* <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button> */}\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {/* <Input disabled={props.disabled} onChange={ReasonInputChange} placeholder=\"Замечание\" /> */}\r\n                {props?.initialValues2?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n});\r\n\r\nexport default Update2;","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../core/functions';\r\n\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update3 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        // setBtnLoad(true)\r\n        console.log(\"PROPS\", item.id)\r\n        // console.log('RECORD',props.record)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.form3.setFieldsValue(state);\r\n        console.log(\"state3 form\", state)\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues3) {\r\n            setState({\r\n                id: props.initialValues3.documents[0].id,\r\n                title: props.initialValues3.documents[0].title,\r\n                position: props.initialValues3.documents[0].position,\r\n                username: props.initialValues3.documents[0].username,\r\n                fio: props.initialValues3.documents[0].fio,\r\n\r\n                price: props.initialValues3.documents[0].data_agreement_list_production[0].price,\r\n                subject: props.initialValues3.documents[0].data_agreement_list_production[0].subject,\r\n                currency: props.initialValues3.documents[0].data_agreement_list_production[0].currency,\r\n                executor_name_division: props.initialValues3.documents[0].data_agreement_list_production[0].executor_name_division,\r\n                executor_phone_number: props.initialValues3.documents[0].data_agreement_list_production[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues3.documents[0].data_agreement_list_production[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues3.documents[0].date_created,\r\n                date_modified: props.initialValues3.documents[0].date_modified,\r\n                route_id: props.initialValues3.documents[0].route_id.id,\r\n                status_in_process: props.initialValues3.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues3.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues3.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues3.documents[0].status_id,\r\n                route: props.initialValues3.documents[0].route_data,\r\n                step: props.initialValues3.documents[0].step,\r\n                comments: props.initialValues3.documents[0].comments,\r\n                signatures: props.initialValues3.documents[0].signatures,\r\n                files: props.initialValues3.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues3.documents[0].step })\r\n            setRoutesList(props.initialValues3.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues3]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish3(state);\r\n        console.log('+++++++++++++++++++++++', values);\r\n    }\r\n\r\n    const [reasonText, setReasonText] = useState(props?.initialValues3?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues3?.documents[0]?.data_agreement_list_production[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n        form={props.form3}\r\n            name=\"DocumentsForm3\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE3 values',allValues)}}\r\n        \r\n        >\r\n            <b>От:</b> {props?.initialValues3?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues3?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues3?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    {/* <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space> */}\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    {/* <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button> */}\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {/* <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" /> */}\r\n                {props?.initialValues3?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update3","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../core/functions';\r\n\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update4 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        props.form4.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues4) {\r\n            setState({\r\n                id: props.initialValues4.documents[0].id,\r\n                title: props.initialValues4.documents[0].title,\r\n                position: props.initialValues4.documents[0].position,\r\n                username: props.initialValues4.documents[0].username,\r\n                fio: props.initialValues4.documents[0].fio,\r\n\r\n                price: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].price,\r\n                subject: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].subject,\r\n                currency: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].currency,\r\n                executor_name_division: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].executor_name_division,\r\n                executor_phone_number: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].executor_phone_number,\r\n                counteragent_contacts: props.initialValues4.documents[0].data_agreement_list_internal_needs[0].counteragent_contacts,\r\n\r\n                date_created: props.initialValues4.documents[0].date_created,\r\n                date_modified: props.initialValues4.documents[0].date_modified,\r\n                route_id: props.initialValues4.documents[0].route_id.id,\r\n                status_in_process: props.initialValues4.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues4.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues4.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues4.documents[0].status_id,\r\n                route: props.initialValues4.documents[0].route_data,\r\n                step: props.initialValues4.documents[0].step,\r\n                comments: props.initialValues4.documents[0].comments,\r\n                signatures: props.initialValues4.documents[0].signatures,\r\n                files: props.initialValues4.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues4.documents[0].step })\r\n            setRoutesList(props.initialValues4.documents[0].route_data)\r\n        }\r\n    }, [props.initialValues4]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish4(state);\r\n    }\r\n    const [reasonText, setReasonText] = useState(props?.initialValues4?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues4?.documents[0]?.data_agreement_list_internal_needs[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n        form={props.form4}\r\n            name=\"DocumentsForm4\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, })); console.log('UPDATE4 values',allValues)}}\r\n        \r\n        >\r\n            <b>От:</b> {props?.initialValues4?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues4?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Лист согласования на реализацию готовой продукции</h4>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование контрагента:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Предмет договора:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Общая сумма договора:</Col> <Col span={12}>{state.price}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Валюта платежа:</Col> <Col span={12}>{state.currency}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование подразделения, фамилия ответственного исполнителя:</Col> <Col span={12}>{state.executor_name_division}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Телефон исполнителя:</Col> <Col span={12}>{state.executor_phone_number}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Контакты контрагента:</Col> <Col span={12}>{state.counteragent_contacts}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues4?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    {/* <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space> */}\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    {/* <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button> */}\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {/* <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" /> */}\r\n                {props?.initialValues4?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update4","import { EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Typography, Space, Divider, Row, Col, Steps, Checkbox, Popconfirm, message, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useUser, formatDate } from '../../../../core/functions';\r\n\r\n\r\nimport ApproveConfirm from './dialogs/ApproveConfirm';\r\nimport RejectConfirm from './dialogs/RejectConfirm';\r\nimport ReturnStepBackConfirm from './dialogs/ReturnStepBackConfirm';\r\nimport ReturnToSenderConfirm from './dialogs/ReturnToSenderConfirm';\r\n\r\n\r\nlet Update5 = React.memo((props) => {\r\n    let user = useUser();\r\n    const price_pattern = /^\\d+$/;\r\n    const { Title, Link } = Typography;\r\n    const { Step } = Steps;\r\n\r\n    const [state, setState] = useState({\r\n        log_username: user.username,\r\n    });\r\n\r\n    let OpenDocument = async (item) => {\r\n        console.log(\"PROPS\", item.id)\r\n        const tmp = await fetch('/api/files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                { user:Number(user.id),item:item.id }\r\n            )\r\n        })\r\n        const content = await tmp.json();\r\n        if (content != undefined) {\r\n            console.log(\"RESULT\", content)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        props.form5.setFieldsValue(state);\r\n    }, [state]);\r\n    let [routesList, setRoutesList] = useState([{ positionName: 'Тип договора не выбран.' }])\r\n    let [stepCount, setStepCount] = useState({ step: '0' })\r\n    useEffect(() => {\r\n        if (props.initialValues5) {\r\n            setState({\r\n                id: props.initialValues5.documents[0].id,\r\n                title: props.initialValues5.documents[0].title,\r\n                position: props.initialValues5.documents[0].position,\r\n                username: props.initialValues5.documents[0].username,\r\n                fio: props.initialValues5.documents[0].fio,\r\n\r\n                subject: props.initialValues5.documents[0].data_custom[0].subject,\r\n                remark: props.initialValues5.documents[0].data_custom[0].remark,\r\n\r\n                date_created: props.initialValues5.documents[0].date_created,\r\n                date_modified: props.initialValues5.documents[0].date_modified,\r\n                route_id: props.initialValues5.documents[0].route_id.id,\r\n                status_in_process: props.initialValues5.documents[0].route_id.status_in_process,\r\n                status_cancelled: props.initialValues5.documents[0].route_id.status_cancelled,\r\n                status_finished: props.initialValues5.documents[0].route_id.status_finished,\r\n                status_id: props.initialValues5.documents[0].status_id,\r\n                route: props.initialValues5.documents[0].route_data,\r\n                step: props.initialValues5.documents[0].step,\r\n                comments: props.initialValues5.documents[0].comments,\r\n                signatures: props.initialValues5.documents[0].signatures,\r\n                files: props.initialValues5.documents[0].files,\r\n                log_username: state.log_username\r\n            });\r\n            setStepCount({ step: props.initialValues5.documents[0].step })\r\n            setRoutesList(props.initialValues5.documents[0].route_data)\r\n            console.log('----------------------------------',props)\r\n        }\r\n    }, [props.initialValues5]);\r\n\r\n    let download = async (e) => {\r\n        let id = e.target.dataset.fileid\r\n        await fetch(\"/get-file\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id: e.target.dataset.fileid }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            let result = response.result\r\n            let link = document.createElement('a')\r\n            link.href = result.data_file /*result.data_file.slice(result.data_file.indexOf(',')+1) */\r\n            link.download = result.filename\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    let onFinish = (values) => {\r\n        props.onFinish5(state);\r\n    }\r\n    const [reasonText, setReasonText] = useState(props?.initialValues5?.documents[0]?.reason);\r\n    let ReasonInputChange = (all, change) => {\r\n        if (all.target.value.length > 0) {\r\n            setReasonText(all.target.value)\r\n        } else {\r\n            setReasonText(all.target.value)\r\n        }\r\n    }\r\n\r\n    let radioOptions = [\r\n        {label:'Закупки товаров, работ и услуг', value:'1'},\r\n        {label:'Поставка продукции (выполнение работ, оказание услуг) заказчикам',value:'2'},\r\n        {label:'Передача имущества в аренду (бесплатное пользование)',value:'3'},\r\n        {label:'Совместная деятельность',value:'4'},\r\n        {label:'Финансирование (кредитование, обеспечение исполнения обязательств)',value:'5'},\r\n        {label:'Прочие обязательства',value:'6'}\r\n    ]\r\n    const[radioState, setRadioState] = useState(props?.initialValues5?.documents[0]?.data_custom[0]?.subject);\r\n\r\n    const RadioOnChange = (radioValue) => {\r\n        setRadioState(radioValue.target.value);\r\n    };\r\n\r\n    return(\r\n        <Form\r\n        form={props.form5}\r\n            name=\"DocumentsForm5\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            autoComplete=\"off\"\r\n\r\n            onValuesChange={(changedValues, allValues) => { setState(Object.assign({}, state, { ...allValues, }))}}\r\n        \r\n        >\r\n            <b>От:</b> {props?.initialValues5?.documents[0].fio} <br/>\r\n            <b>Должность:</b> {props?.initialValues5?.documents[0].position}\r\n            <h4><b>Тип договора:</b> Другой</h4>\r\n            <Divider type={'horizontal'} />\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Наименование:</Col> <Col span={12}>{state.title}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Примечание:</Col> <Col span={12}>{state.remark}</Col>\r\n                </Row>\r\n            </div>\r\n            <div className='form-item-wrap'>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12}>Основание:</Col> <Col span={12}>{state.subject}</Col>\r\n                </Row>\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                name=\"files\"\r\n                className='font-form-header'\r\n                label=\"Файлы\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].files.map((item) => {\r\n                    return (<>\r\n                        <div className='document-view-wrap'>\r\n                            <Link><a data-fileid={item.id} onClick={download}>{item.filename}</a></Link> <Button onClick={() => { OpenDocument(item) }} shape=\"circle\" icon={<EyeOutlined />}/> <br />\r\n                        </div>\r\n                    </>)\r\n                })}\r\n            </Form.Item>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"signatures\"\r\n                label=\"Подписи\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {props?.initialValues5?.documents[0].signatures.map((item) => {  //remove commentsList\r\n                    return (<>\r\n                        <div className='signature-view-wrap'>\r\n                            <span className='signature-view-position'>\r\n                                {item.position}\r\n                            </span>\r\n                            <span className='signature-view-username'>\r\n                                {item.fio}\r\n                            </span>\r\n                            <span className='signature-view-date'>\r\n                                {formatDate(item.date_signature)}\r\n                            </span>\r\n                        </div>\r\n                    </>)\r\n                })}\r\n                <Steps labelPlacement=\"vertical\" size=\"small\" current={stepCount.step - 1} className=\"steps-form-update\">\r\n                    {\r\n                        routesList.map((item) => {\r\n                            return (\r\n                                <Step title={item.positionName} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Steps>\r\n            </Form.Item>\r\n            <Row>\r\n            <Col span={24}>\r\n                    <Divider type={'horizontal'} />\r\n                    {/* <ApproveConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    <Divider type={'vertical'} />\r\n                    <Space>\r\n                        <Divider type={'vertical'} />\r\n                        <ReturnToSenderConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <ReturnStepBackConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                        <Divider type={'vertical'} />\r\n                        <RejectConfirm reasonText={reasonText} dataProps={props} setState={setState} user={user} />\r\n                    </Space> */}\r\n                </Col>\r\n                <Col span={24} className=\"marginTop\">\r\n                    <Button onClick={props.modalCancelHandler}>\r\n                        Отменить\r\n                    </Button>\r\n                    {/* <Divider type={'vertical'} />\r\n                    <Button onClick={props.modalEnableEditHandler}>\r\n                        Редактировать\r\n                    </Button> */}\r\n                </Col>\r\n            </Row>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"reason\"\r\n                label=\"Замечание\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n            </Form.Item>\r\n            <div>\r\n                {/* <Input\r\n                    disabled={props.disabled}\r\n                    onChange={ReasonInputChange}\r\n                    placeholder=\"Замечание\" /> */}\r\n                {props?.initialValues5?.documents[0]?.reason?.map((item) => {\r\n                    return (<span>\r\n                        <span>{item.text + '-' + item.userPosition}</span><br />\r\n                    </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Divider type={'horizontal'} />\r\n            <Form.Item\r\n                className='font-form-header'\r\n                name=\"comments\"\r\n                label=\"Комментарии\"\r\n                labelCol={{ span: 24 }}\r\n            >\r\n                {/* <Input.TextArea rows={7} name='comment' onChange={props.HandleCommentOnChange} disabled={props.disabled} />\r\n                <Button disabled={props.disabled} onClick={props.HandleComment} className=\"marginTop\">Оставить комментарий</Button> */}\r\n                {props.commentsList.map((item) => {\r\n                    return (\r\n                        <div className='comments'>\r\n                            <li className='comment-item'>\r\n                                <span className='user-position-comment'>{item.position}</span>\r\n                                <span className='user-name-comment'> ({item.fio}) </span>\r\n                                <span className='user-date-time-comment'>{item.date}</span><br />\r\n                                <span className='comment'>{item.comment}</span>\r\n                            </li>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"date_created\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"route_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"status_id\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"step\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"log_username\"\r\n                hidden={true}\r\n            >\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default Update5","import { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Button, Popconfirm, Col, Row, Select, DatePicker, Form, Input } from 'antd';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useUser, accessRedirect, handlerQuery, download, getDDMMYYY } from '../../../../core/functions'\r\nimport ModalUpdate from '../../modals/ModalUpdate'\r\nimport TableContainer from '../../tableContainers/TableContainer'\r\nimport test from '../../../../core/test'\r\nimport TitleMenu from '../../../../core/TitleMenu';\r\nimport 'moment/locale/ru';\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\nimport moment from 'moment';\r\nimport format from 'date-fns/format';\r\n\r\nimport gqlMain from '../../gql/gqlMain'\r\n\r\nimport Update1 from '../../forms/1/Update1'\r\nimport Update2 from '../../forms/2/Update2'\r\nimport Update3 from '../../forms/3/Update3'\r\nimport Update4 from '../../forms/4/Update4'\r\nimport Update5 from '../../forms/5/Update5'\r\n\r\nconst { Option } = Select;\r\n\r\nlet Search = React.memo((props) => {\r\n    let user = useUser();\r\n    let positionsVariable = user.positions.toString();\r\n    const { RangePicker } = DatePicker;\r\n\r\n    let filterForm = Form.useForm()\r\n\r\n    const visibleModalUpdate = useState(false);\r\n    const visibleModalUpdate2 = useState(false);\r\n    const visibleModalUpdate3 = useState(false);\r\n    const visibleModalUpdate4 = useState(false);\r\n    const visibleModalUpdate5 = useState(false);\r\n\r\n    const [variables, setVariables] = useState()\r\n\r\n    const [filters, set_filters] = useState([]);\r\n    const [currentTableData, setCurrentTableData] = useState();\r\n\r\n    const { loading, data, refetch } = handlerQuery(gqlMain, 'all', { variables })();\r\n\r\n    let list = (data && data[Object.keys(data)[0]] != null) ? data[Object.keys(data)[0]].map((item) => {\r\n        let price = 0\r\n        let title = '-'\r\n        let counteragent_name = '-'\r\n\r\n        if (item.data_one.length != 0) {\r\n            price = item.data_one[0].price\r\n            title = item.title\r\n            counteragent_name = item.data_one[0].supllier\r\n        }\r\n        if (item.data_agreement_list.length != 0) {\r\n            price = item.data_agreement_list[0].price\r\n            counteragent_name = item.title\r\n        }\r\n        if (item.data_agreement_list_production.length != 0) {\r\n            price = item.data_agreement_list_production[0].price\r\n            counteragent_name = item.title\r\n        }\r\n        if (item.data_agreement_list_internal_needs.length != 0) {\r\n            price = item.data_agreement_list_internal_needs[0].price\r\n            counteragent_name = item.title\r\n        }\r\n        if (item.data_custom.length != 0) {\r\n            title = item.title\r\n        }\r\n        return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: title,\r\n            user_info: item.fio + ' ' + item.position,\r\n            date_created: item.date_created,\r\n            date_modified: item.date_modified,\r\n            status_id: item.status_id,\r\n            status: item.document_statuses?.name ? item.document_statuses.name : 'Без статуса',\r\n            route: item.route_id?.name ? item.route_id.name : 'Не задан',\r\n            route_data: item.route_data,\r\n            route_step: item.route_data ? item.route_data.findIndex(item => item.positionId == positionsVariable) + 1 : [],\r\n            step: item.step,\r\n            route_id: item.route_id.id,\r\n            step_count: item.step + ' из ' + item.route_data?.length,\r\n            step_name: item.route_data?.length > 0 ? item.route_data[item.step - 1].positionName : '',\r\n            price: price,\r\n            counteragent_name: counteragent_name\r\n        }\r\n    }) : [];\r\n\r\n    const [searchVariables, setSearchVariables] = useState()\r\n\r\n    let getDocuments = async (values) => {\r\n        console.log('values', values)\r\n        if (values.dateFrom == undefined && values.dateTo == undefined) {\r\n            console.log('undefined')\r\n        } else if(values.dateFrom != undefined && values.dateTo != undefined) {\r\n            let date1 = values.dateFrom._d\r\n            let date2 = values.dateTo._d\r\n            // let documentStatus = values.documentStatus ? documentStatus = values.documentStatus : ''\r\n            // let documentType = values.documentType ? documentType = values.documentType : ''\r\n            setVariables({\r\n                documents: {\r\n                    global: {\r\n                        date_created: `::date<= date'${format(date2, 'dd-MM-yyyy')}' and date_created::date>=date'${format(date1, 'dd-MM-yyyy')}'`,\r\n                        ORDER_BY: ['date_created desc'],\r\n                        // status_id:`=${documentStatus}`,\r\n                        // route_id: {id:`=${documentType}`}\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        refetch()\r\n    }\r\n\r\n    let dict = test([\r\n        { title: 'Наименование договора', dataIndex: 'title', width: '134px', type: 'search', tooltip: true, sorter: (a, b) => a.title.localeCompare(b.title), sortDirections: ['ascend', 'descend'] },\r\n        { title: 'Имя контрагента', dataIndex: 'counteragent_name', width: '130px', type: 'search', tooltip: true, sorter: (a, b) => a.counteragent_name.localeCompare(b.counteragent_name), sortDirections: ['ascend', 'descend']  },\r\n        { title: 'Цена', dataIndex: 'price', width: '55px', tooltip: true, sorter: (a, b) => a.price-b.price, sortDirections: ['ascend', 'descend'] },\r\n        { title: 'Дата и время создания', dataIndex: 'date_created', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_created) - new Date(b.date_created) },\r\n        { title: 'Последние изменение', dataIndex: 'date_modified', width: '114px', type: 'search', tooltip: true, sorter: true, sorter: (a, b) => new Date(a.date_modified) - new Date(b.date_modified) },\r\n        { title: 'Тип договора', dataIndex: 'route', width: '114px', type: 'search', tooltip: true, sorter: (a, b) => a.route.localeCompare(b.route), sortDirections: ['ascend', 'descend'] },\r\n        { title: 'Статус', dataIndex: 'status', width: '80px', tooltip: true, sorter: (a, b) => a.status.localeCompare(b.status), sortDirections: ['ascend', 'descend'] },\r\n        { title: 'На подписи', dataIndex: 'step_name', width: '114px' },\r\n        { title: 'Этап', dataIndex: 'step_count', width: '55px' },\r\n    ]);\r\n\r\n    let titleMenu = (tableProps) => {\r\n        return (<TitleMenu\r\n            buttons={[\r\n                <Button onClick={getExcel}>Выгрузить в таблицу в Excel</Button>,\r\n                <ModalUpdate\r\n                    visibleModalUpdate={visibleModalUpdate} GQL={gqlMain} UpdateForm={Update1}\r\n                    visibleModalUpdate2={visibleModalUpdate2} GQL2={gqlMain} UpdateForm2={Update2}\r\n                    visibleModalUpdate3={visibleModalUpdate3} GQL3={gqlMain} UpdateForm3={Update3}\r\n                    visibleModalUpdate4={visibleModalUpdate4} GQL4={gqlMain} UpdateForm4={Update4}\r\n                    visibleModalUpdate5={visibleModalUpdate5} GQL5={gqlMain} UpdateForm5={Update5}\r\n                    title='Согласование договора' selectedRowKeys={tableProps.selectedRowKeys} update={true} width={750} />,\r\n            ]}\r\n            selectedRowKeys={tableProps.selectedRowKeys}\r\n        />)\r\n    }\r\n    let getExcel = () =>{\r\n        console.log('currentTableData Excel //////////',currentTableData)\r\n        fetch('/api/tabledata',{\r\n            method: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(\r\n\t\t\t\t{currentTableData}\r\n\t\t\t\t)\r\n        });\r\n        (async () => {\r\n            await download('/api/tabledata',\"Список договоров \"+getDDMMYYY(new Date())+\".xlsx\");\t\r\n        })();\r\n    }\r\n\r\n    const dateFormat = 'YYYY-MM-DD HH:mm:ss';\r\n\r\n    let onChange = (pagination, filters, sorter, extra) => {\r\n        setCurrentTableData(extra.currentDataSource);\r\n        set_filters(filters)\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            <Form\r\n                onFinish={getDocuments}\r\n                // form={filterForm}\r\n                name='filterForm'\r\n                onValuesChange={(changedValues, allValues) => { setSearchVariables(Object.assign({}, searchVariables, { ...allValues, }))}}\r\n            >\r\n                <Row style={{ paddingLeft: '10px', paddingRight: '10px', marginBottom: '15px', marginTop: '15px' }}>\r\n                    <Col span={2} style={{ marginRight: '25px' }}>\r\n                        От:\r\n                        <Form.Item\r\n                            name='dateFrom'\r\n                        >\r\n                            <DatePicker format={dateFormat} locale={locale} style={{ width: '100%' }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={2} style={{ marginRight: '25px' }}>\r\n                        До:\r\n                        <Form.Item\r\n                            name='dateTo'\r\n                        >\r\n                            <DatePicker format={dateFormat} locale={locale} style={{ width: '100%' }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={4} style={{ marginRight: '25px' }}>\r\n                        Выберите тип договора:\r\n                        <Form.Item\r\n                            name='documentType'\r\n                        >\r\n                            <Select style={{ width: '100%' }}>\r\n                                <Option value={10}>Закуп ТРУ</Option>\r\n                                <Option value={24}>Реализация готовой продукции</Option>\r\n                                <Option value={26}>Лист согласования на закуп ТРУ для производства продукции</Option>\r\n                                <Option value={27}>Лист согласования на закуп ТРУ для внутризаводских нужд и капитальных затрат</Option>\r\n                                <Option value={29}>Другой</Option>\r\n                                <Option value={undefined}></Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={4} style={{ marginRight: '25px' }}>\r\n                        Выберите статус договора:\r\n                        <Form.Item\r\n                            name='documentStatus'\r\n                        >\r\n                            <Select style={{ width: '100%' }}>\r\n                                <Option value={5}>В работе</Option>\r\n                                <Option value={4}>Утверждён</Option>\r\n                                <Option value={2}>Отклонён</Option>\r\n                                <Option value={7}>На доработке</Option>\r\n                                <Option value={undefined}></Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={2} style={{ marginRight: '25px' }}>\r\n                        Цена от:\r\n                        <Form.Item\r\n                            name='priceFrom'\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={2} style={{ marginRight: '25px' }}>\r\n                        Цена до:\r\n                        <Form.Item\r\n                            name='priceTo'\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={2} style={{ marginRight: '25px', marginTop: '20px' }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Найти</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            <TableContainer\r\n                data={{ dict, records: list }}\r\n                loading={loading ? loading : false}\r\n                title={titleMenu}\r\n                onChange={onChange}\r\n                visibleModalUpdate={visibleModalUpdate}\r\n                visibleModalUpdate2={visibleModalUpdate2}\r\n                visibleModalUpdate3={visibleModalUpdate3}\r\n                visibleModalUpdate4={visibleModalUpdate4}\r\n                visibleModalUpdate5={visibleModalUpdate5}\r\n            />\r\n        </span>\r\n    )\r\n\r\n})\r\n\r\nexport default Search","import React, { useEffect, useState, useRef } from 'react';\r\n\r\nimport { Layout } from 'antd';\r\nimport { useHistory, useLocation, Redirect, Route, withRouter } from \"react-router-dom\";\r\nimport Header1 from './common/Header1';\r\nimport { useUser, accessRedirect, handlerQuery } from '../../core/functions';\r\n\r\nimport Search from './pages/Search/Search'\r\n\r\nconst { Header } = Layout\r\n\r\nconst { Content } = Layout\r\n\r\nlet DocumentSearch = React.memo((props) => {\r\n    const user = useUser();\r\n    let { pathname } = useLocation();\r\n\r\n    const [headerTitle, setHeaderTitle] = useState('Поиск');\r\n\r\n\r\n    if (pathname === '/document-search/' || pathname === '/document-search') {\r\n        if (user.documentSearch.search.select) {\r\n            return <Redirect to='/document-search/search' />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout className=\"site-layout-background\" style={{\r\n            padding: 24,\r\n            margin: 0,\r\n            minHeight: 280\r\n        }}>\r\n            <Header1 title={headerTitle} user={user} />\r\n            <Layout>\r\n                <Layout className=\"content-layout\">\r\n                    <Content className=\"site-layout-background\"\r\n                        style={{\r\n                            padding: 24,\r\n                            margin: 0,\r\n                            minHeight: 280\r\n                        }}>\r\n                            <Route path={'/document-search/search'} component={accessRedirect(Search)} />\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n});\r\n\r\nexport default withRouter(DocumentSearch)","import React from 'react';\nimport 'antd/dist/antd.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport constants from \"./config/constants\";\n\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport {\n\tDesktopOutlined,\n\tBarChartOutlined,\n\tDatabaseOutlined,\n\tClockCircleOutlined\n} from '@ant-design/icons';\nimport { ApolloLink } from '@apollo/client';\nimport { onError } from \"@apollo/client/link/error\";\n\nimport { split, HttpLink } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { setContext } from '@apollo/client/link/context';\n\nimport { ConfigProvider, Layout, Row, notification, Button, Tooltip, Col } from 'antd';\nimport ru_RU from 'antd/lib/locale/ru_RU';\nimport {  Route, Redirect, Switch, BrowserRouter, useLocation, NavLink  } from 'react-router-dom';\nimport { accessRedirect, useUser } from \"./core/functions\";\nimport Header1 from \"./core/Header1\";\nimport Error404 from \"./modules/Error404\";\nimport Login from './modules/Login';\nimport AdminPanel from \"./components/adminPanel/AdminPanel\";\nimport Account from \"./components/account/Account\";\nimport DocumentControl from './components/DocumentControl/DocumentControl';\nimport DocumentSearch from './components/DocumentSearch/DocumentSearch'\n\n\nlet { host, port, graphql } = constants;\nlet host1;\n\nconsole.log(\"Starting SD Client. Host is \" + window.SERVER_DATA);\n\n// настройка Apollo Client\n//// для запросов\nconst httpLink = new HttpLink({\n\turi: `https://` + window.SERVER_DATA + `:${port}${graphql.path}`\n});\n//// для подписок\nconst wsLink = new WebSocketLink({\n\turi: `wss://` + window.SERVER_DATA + `:${port}${graphql.path}`,\n\toptions: {\n\t\treconnect: true\n\t}\n});\nconst { Header, Content, Sider } = Layout;\n// errors of above\nconst errorLink = onError(({ graphQLErrors, networkError,operation,response }) => {\n\tif (graphQLErrors)\n\t\tgraphQLErrors.map(({ message, locations, path }) => {\n\t\t\tconsole.log(\n\t\t\t\t`[GraphQL error]: Message: ${message}, Location: ${JSON.stringify(locations)}, Path: ${path}. \\n`,\n\t\t\t\t`[Details]: operation: ${JSON.stringify(operation.variables)}. \\n`,\n\t\t\t\t`[Details]: operationName: ${JSON.stringify(operation.operationName)}. \\n`\n\t\t\t)\n\t\t}\n\n\n\t\t);\n\n\tif (networkError) {\n\t\tconsole.log(`[Network error]: ${JSON.stringify(networkError)}`);\n\t\tnotification['info']({\n\t\t\tmessage: <div id=\"ant_notification\">Ошибка соединения с сервером ZiK-Договора.<br />Обновите страницу. Если проблема не устранилась через 5 минут, свяжитесь с вашей службой IT.</div>,\n\t\t\tduration: 10, placement: 'bottomRight'\n\t\t})\n\t}\n});\n\n//// добавдение данных в заголовок запроса(POST)\nconst authLink = setContext((_, { headers }) => {\n\t// get the authentication token from local storage if it exists\n\tconst token = localStorage.getItem('token');\n\t// return the headers to the context so httpLink can read them\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : \"\",\n\t\t}\n\t}\n});\n//// объединение вышеперечисленного\nconst splitLink = split(\n\t({ query }) => {\n\t\tconst definition = getMainDefinition(query);\n\t\treturn (\n\t\t\tdefinition.kind === 'OperationDefinition' &&\n\t\t\tdefinition.operation === 'subscription'\n\t\t);\n\t},\n\twsLink,\n\tauthLink.concat(httpLink),\n);\n// инициализация клиента\nconst client = new ApolloClient({\n\tlink: ApolloLink.from([errorLink, splitLink]),\n\tcache: new InMemoryCache()\n});\n\n\n\n\nconst documentControlP =\n\t<Col className='main-menu-col'>\n\t\t<Tooltip placement=\"rightTop\" title=\"Документооборот\">\n\t\t\t<Button type='solid' className=\"main-menu-button\"><NavLink to=\"document-control\" style={{ fontSize: \"25px\" }}> <DesktopOutlined style={{ marginRight: 7 }} /> Договора <p className='page-desc'>Организовывает движение документа</p></NavLink></Button>\n\t\t</Tooltip>\n\t</Col>\nconst documentReportP =\n\t<Col className='main-menu-col'>\n\t\t<Tooltip placement=\"rightTop\" title=\"Отчеты\">\n\t\t\t<Button type='solid' className=\"main-menu-button\"><NavLink to=\"document-report\" style={{ fontSize: \"25px\" }}> <BarChartOutlined style={{ marginRight: 7 }} /> Отчеты <p className='page-desc'>Получение отчетности по разделам</p></NavLink></Button>\n\t\t</Tooltip>\n\t</Col>\nconst documentHistoryP =\n\t<Col className='main-menu-col'>\n\t\t<Tooltip placement=\"rightTop\" title=\"Просмотр истории\">\n\t\t\t<Button type='solid' className=\"main-menu-button\"><NavLink to=\"document-history\" style={{ fontSize: \"25px\" }}> <ClockCircleOutlined style={{ marginRight: 7 }} />  История <p className='page-desc'>Просмотр истории</p></NavLink></Button>\n\t\t</Tooltip>\n\t</Col>\nconst documentSearchP =\n\t<Col className='main-menu-col'>\n\t\t<Tooltip placement=\"rightTop\" title=\"Поиск по документам\">\n\t\t\t<Button type='solid' className=\"main-menu-button\"><NavLink to=\"document-search\" style={{ fontSize: \"25px\" }}><DatabaseOutlined style={{ marginRight: 7 }} /> Поиск <p className='page-desc'>Поиск по документам</p></NavLink></Button>\n\t\t</Tooltip>\n\t</Col>\n\n\n\nlet StartPage = React.memo(() => {\n\tlet { pathname } = useLocation();\n\tconst user = useUser();\n\tconsole.log('user',user)\n\treturn (\n\t\t<Layout>\n\t\t\t<Header1 title={''} user={user} />\n\t\t\t<Layout>\n\t\t\t\t{/* <SiderMenu /> */}\n\t\t\t\t<Layout className=\"content-layout\">\n\t\t\t\t\t<Content className=\"site-layout-background\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\tminHeight: 280\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<div style={{ paddingTop: 50}}>\n\t\t\t\t\t\t\t<Row justify='center' style={{margin:\"0\",top:\"50%\", transform:\"translate(0,-50%)\",position:\"absolute\", width:\"99%\"}}>\n\t\t\t\t\t\t\t\t{user.documentControl.select ?\n\t\t\t\t\t\t\t\t\tdocumentControlP\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{user.documentReport.select ?\n\t\t\t\t\t\t\t\t\tdocumentReportP\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{user.documentHistory.select ?\n\t\t\t\t\t\t\t\t\tdocumentHistoryP\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{user.documentSearch.select ?\n\t\t\t\t\t\t\t\t\tdocumentSearchP\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <Switch>\n\t\t\t\t\t\t\t<Route exact path={\"/\"} component={InputDocuments} />\n\t\t\t\t\t\t\t<Route path={\"/my/\"} component={UserDocuments} />\n\t\t\t\t\t\t</Switch> */}\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</Layout>\n\t)\n})\n\nlet App = () => {\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t<Route path=\"/logout\" component={() => { return <></> }} />\n\t\t\t<Route path=\"/\" exact component={StartPage} />\n\t\t\t<Route path=\"/document-control\" component={accessRedirect(DocumentControl)} />\n\t\t\t<Route path=\"/document-search\" component={accessRedirect(DocumentSearch)} />\n\t\t\t<Route path=\"/admin\" component={accessRedirect(AdminPanel)} />\n\t\t\t<Route path=\"/account\" component={accessRedirect(Account)} />\n\n\t\t\t<Route component={Error404} />\n\t\t\t</Switch>\n\t)\n};\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<ApolloProvider client={client}>\n\t\t\t<ConfigProvider locale={ru_RU}>\n\t\t\t\t<App />\n\t\t\t</ConfigProvider>\n\t\t</ApolloProvider>\n\t</BrowserRouter>, document.getElementById('root'))","import { notification } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport { useState } from \"react\";\r\nimport { useLocation, Redirect } from 'react-router-dom';\r\nimport Error404 from \"../modules/Error404\";\r\n\r\nimport notif_image from \"../images/duck.jpg\";\r\n\r\nexport const MergeRecursive = (obj1 = {}, obj2 = {}) => {\r\n    for (var p in obj2) {\r\n        try {\r\n            if (obj2[p].constructor === Object) {\r\n                obj1[p] = MergeRecursive(obj1[p], obj2[p]);\r\n            } else {\r\n                obj1[p] = obj2[p];\r\n            }\r\n        } catch (e) {\r\n            obj1[p] = obj2[p];\r\n        }\r\n    }\r\n    return obj1;\r\n}\r\n\r\nexport const checkObject = (object, data) => {\r\n    let request = ''\r\n    try {\r\n        request = eval(`object.${data}`);\r\n    } catch (e) {\r\n        return request;\r\n    }\r\n    if (request === undefined) {\r\n        return '';\r\n    }\r\n    return request;\r\n}\r\n\r\n\r\nexport const handlerQuery = (GQL, query, options, auth) => {\r\n    return () => {\r\n        let [subscribe, setSubscribe] = useState(false)\r\n        let reqQuery = useQuery(GQL.select[query], Object.assign({}, MergeRecursive((GQL.options && GQL.options[query]) ? GQL.options[query] : {}, options)))\r\n        useEffect(() => {\r\n            if (reqQuery.error) {\r\n                notification['error']({ message: reqQuery.error.message, duration: 0, placement: 'bottomRight' })\r\n            }\r\n        }, [reqQuery.error]);\r\n        useEffect(() => {\r\n            if (GQL.subscription[query] && reqQuery.data && !subscribe) {\r\n                if (GQL.subscription[query][0]) {\r\n                    for (let value in GQL.subscription[query]) {\r\n                        reqQuery.subscribeToMore({\r\n                            document: GQL.subscription[query][value],\r\n                            variables: Object.assign({}, MergeRecursive((GQL.options && GQL.options[query]) ? GQL.options[query] : {}, options)).variables,\r\n                            updateQuery: (prev, { subscriptionData }) => {\r\n                                if (auth) {\r\n                                    reqQuery.refetch();\r\n                                    return prev;\r\n                                }\r\n                                if (!subscriptionData.data) return prev;\r\n                                return Object.assign({}, prev, { ...prev, ...subscriptionData.data });\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    reqQuery.subscribeToMore({\r\n                        document: GQL.subscription[query],\r\n                        variables: Object.assign({}, MergeRecursive((GQL.options && GQL.options[query]) ? GQL.options[query] : {}, options)).variables,\r\n                        updateQuery: (prev, { subscriptionData }) => {\r\n                            if (auth) {\r\n                                reqQuery.refetch();\r\n                                return prev;\r\n                            }\r\n                            if (!subscriptionData.data) return prev;\r\n                            return Object.assign({}, prev, { ...prev, ...subscriptionData.data });\r\n                        }\r\n                    })\r\n                }\r\n                setSubscribe(true);\r\n            }\r\n        }, [reqQuery.data]);\r\n\r\n        return reqQuery;\r\n    }\r\n}\r\nexport const handlerMutation = ([fn, object], promissOK = () => { }) => {\r\n    return () => {\r\n        useEffect(() => {\r\n            if (!object.loading) {\r\n                if (object.error) {\r\n                    notification['error']({ message: object.error.message, duration: 0, placement: 'bottomRight' })\r\n                }\r\n            }\r\n        }, [object.error]);\r\n        useEffect(() => {\r\n            if (object.data) {\r\n                let request = object.data[Object.keys(object.data)[0]]\r\n                if (request.type == 'warning') {\r\n                    notification['warning']({ message: request.message, duration: 0, placement: 'bottomRight' })\r\n                } else {\r\n                    notification['success']({ message: request.message, duration: 10, placement: 'bottomRight' })\r\n                }\r\n                promissOK();\r\n            }\r\n        }, [object.data]);\r\n        return [fn, object]\r\n    }\r\n}\r\n\r\n\r\nexport const isAccessed = (user, accesses) => {\r\n    if (user.admin) {\r\n        return true\r\n    }\r\n    else {\r\n        return accesses.some(access => user.accesses.includes(access));\r\n    }\r\n}\r\n\r\n\r\nlet authMe = {\r\n    options: {\r\n        //one: { variables: { test: { test: 'test' } } }\r\n    },\r\n    select: {\r\n        one: gql`\r\n            query authMe($test: JSON) {\r\n                authMe(test: $test) {\r\n\t\t\t\t\tid\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                    position_names\r\n                    position_accesses\r\n                }\r\n            }\r\n        `\r\n    },\r\n    subscription: {\r\n        one: gql`\r\n            subscription authMe($test: JSON) {\r\n                authMe(test: $test) {\r\n\t\t\t\t\tid\r\n                    username\r\n                    admin\r\n                    accesses\r\n                    positions\r\n                    domain_username\r\n                    fio\r\n                    email\r\n                    position_names\r\n                }\r\n            }\r\n\r\n        `\r\n    }\r\n}\r\n\r\nlet positions = gql`\r\n            query positions ($positions: JSON) {\r\n                positions (positions: $positions) {\r\n                    id\r\n                    name\r\n                    accesses\r\n                }\r\n            }\r\n        `;\r\n\r\nexport const useUser = () => {\r\n\r\n    let variables = {};\r\n\r\n    let query = handlerQuery(authMe, 'one', { variables }, 'auth')();\r\n\r\n    const { loading: positionsLoading, data: positionsData, refetch: positionsRefetch } = useQuery(positions);\r\n\r\n    /*const { loading: positionsLoading, data: positionsData, refetch: positionsRefetch } = useQuery(\r\n        positions, {\r\n            onCompleted: (data) => {\r\n                setPos(data)\r\n            }\r\n    });*/\r\n\r\n    let user = query.data ? query.data.authMe[0] : undefined;\r\n    let positionNames = user ? query.data.authMe[0].position_names : [];\r\n\r\n    //let accesses = user ? query.data.authMe[0].accesses : [];\r\n    let accessesData = user && user.positions ? positionsData?.positions.filter((el) => { return el.id == user.positions[0] }) : [];\r\n    //let accesses = accessesData && accessesData[0] ? accessesData[0].accesses : [];\r\n    let accesses = user ? query.data.authMe[0].position_accesses : [];\r\n\r\n    let admin = user ? user.admin : undefined;\r\n    //console.log('positionNames', positionNames)\r\n    return {\r\n        query,\r\n        id: user ? user.id : undefined,\r\n        username: user ? user.username : undefined,\r\n        domain_username: user ? user.domain_username : undefined,\r\n        fio: user ? user.fio : undefined,\r\n        email: user ? user.email : undefined,\r\n        admin: user ? user.admin : undefined,\r\n        role_id: user ? user.role_id : undefined,\r\n        positions: admin ? [1, 2, 3, 4, 5, 6] : user?.positions,\r\n        position_names: positionNames,\r\n        documentControl: {\r\n            select: admin ? true : accesses.includes('/document-control-p/select'),\r\n            insert: admin ? true : accesses.includes('/document-control-p/insert'),\r\n            update: admin ? true : accesses.includes('/document-control-p/update'),\r\n            delete: admin ? true : accesses.includes('/document-control-p/delete'),\r\n            orders: {\r\n                select: admin ? true : accesses.includes('/document-control-p/orders-p/select')\r\n            },\r\n            revisedUser: {\r\n                select: admin ? true : accesses.includes('/document-control-p/reviseduser-p/select')\r\n            },\r\n            approvedUser: {\r\n                select: admin ? true : accesses.includes('/document-control-p/approveduser-p/select')\r\n            },\r\n            rejectedUser: {\r\n                select: admin ? true : accesses.includes('/document-control-p/rejecteduser-p/select')\r\n            },\r\n            onApproval: {\r\n                select: admin ? true : accesses.includes('/document-control-p/on-approval-p/select')\r\n            },\r\n            onApprovalList: {\r\n                select: admin ? true : accesses.includes('/document-control-p/on-approval-list-p/select')\r\n            },\r\n            forExecutionInbox: {\r\n                select: admin ? true : accesses.includes('/document-control-p/for-execution-inbox-p/select')\r\n            },\r\n            approved: {\r\n                select: admin ? true : accesses.includes('/document-control-p/approved-p/select')\r\n            },\r\n            rejected: {\r\n                select: admin ? true : accesses.includes('/document-control-p/rejected-p/select')\r\n            },\r\n            isDocumentStatusChangeAllowed: admin ? true : accesses.includes('/document-control-p/document-status-change'),\r\n            isItemStatusChangeAllowed: admin ? true : accesses.includes('/document-control-p/item-status-change'),\r\n        },\r\n        documentReport: {\r\n            select: admin ? true : accesses.includes('/document-report-p/select'),\r\n            insert: admin ? true : accesses.includes('/document-report-p/insert'),\r\n            update: admin ? true : accesses.includes('/document-report-p/update'),\r\n            delete: admin ? true : accesses.includes('/document-report-p/delete'),\r\n            isDocumentStatusChangeAllowed: admin ? true : accesses.includes('/document-report-p/document-status-change'),\r\n            isItemStatusChangeAllowed: admin ? true : accesses.includes('/document-report-p/item-status-change'),\r\n        },\r\n        documentHistory: {\r\n            select: admin ? true : accesses.includes('/document-history-p/select'),\r\n            insert: admin ? true : accesses.includes('/document-history-p/insert'),\r\n            update: admin ? true : accesses.includes('/document-history-p/update'),\r\n            delete: admin ? true : accesses.includes('/document-history-p/delete'),\r\n            isDocumentStatusChangeAllowed: admin ? true : accesses.includes('/document-history-p/document-status-change'),\r\n            isItemStatusChangeAllowed: admin ? true : accesses.includes('/document-history-p/item-status-change'),\r\n        },\r\n        documentSearch: {\r\n            select: admin ? true : accesses.includes('/document-search-p/select'),\r\n            insert: admin ? true : accesses.includes('/document-search-p/insert'),\r\n            update: admin ? true : accesses.includes('/document-search-p/update'),\r\n            delete: admin ? true : accesses.includes('/document-search-p/delete'),\r\n            search:{\r\n                select: admin ? true : accesses.includes('/document-search-p/search-p/select')\r\n            },\r\n            isDocumentStatusChangeAllowed: admin ? true : accesses.includes('/document-search-p/document-status-change'),\r\n            isItemStatusChangeAllowed: admin ? true : accesses.includes('/document-search-p/item-status-change'),\r\n        },\r\n        adminDepartment: {\r\n            select: admin ? true : accesses.includes('/admin-p/select'),\r\n            insert: admin ? true : accesses.includes('/admin-p/insert'),\r\n            update: admin ? true : accesses.includes('/admin-p/update'),\r\n            delete: admin ? true : accesses.includes('/admin-p/delete'),\r\n            isDocumentStatusChangeAllowed: admin ? true : accesses.includes('/admin-p/document-status-change'),\r\n            isItemStatusChangeAllowed: admin ? true : accesses.includes('/admin-p/item-status-change'),\r\n        }\r\n    }\r\n};\r\n\r\nexport const accessRedirect = (Component) => {\r\n    let accessRedirect = (props) => {\r\n        let { pathname } = (() => { return useLocation() })();\r\n        let user = (() => { return useUser() })();\r\n\r\n        //console.log(pathname);\r\n        const path_test = pathname.split(\"/\");\r\n        //console.log('path_test',path_test);\r\n        if (user.query.loading) { return <>Loading...</> }\r\n        switch (pathname) {\r\n            case '/':\r\n                if (!user.username) { return <Redirect to='/login' /> } break;\r\n            case '/login': case '/login/':\r\n                if (user.username) { return <Redirect to='/' /> } break;\r\n            case '/logout': case '/logout/':\r\n                if (!user.username) { return <Redirect to='/' /> } break;\r\n            // Account\r\n            case '/account': case '/account/':\r\n                if (!user.username) { return <Redirect to='/account' /> } break;\r\n\r\n            // admin\r\n            case '/admin': case '/admin/':\r\n                if (!user.admin) { return <Redirect /> } break;\r\n            case '/graphql': case '/graphql/':\r\n                if (!user.admin) { return <Redirect /> } break;\r\n            case '/admin/registration': case '/admin/registration/':\r\n                if (!user.admin) { return <Redirect /> } break;\r\n            case '/admin/positions-page': case '/admin/positions-page/':\r\n                if (!user.admin) { return <Redirect /> } break;\r\n            case '/admin/document-statuses-page': case '/admin/document-statuses-page/':\r\n                if (!user.admin) { return <Redirect /> } break;\r\n            case '/admin/document-routes-page': case '/admin/document-routes-page/':\r\n                if (!user.admin) { return <Redirect /> } break;\r\n            case '/admin/forms-settings-page': case '/admin/forms-settings-page/':\r\n                if (!user.admin) { return <Redirect /> } break;\r\n\r\n            //components\r\n            case '/document-control': case '/document-control/':\r\n                if (!user.documentControl.select) { return <Redirect /> } break;\r\n            case '/document-control/orders': case '/document-control/orders/':\r\n                if (!user.documentControl.orders.select) { return <Redirect /> } break;\r\n            case '/document-control/reviseduser': case '/document-control/reviseduser/':\r\n                if (!user.documentControl.approvedUser.select) { return <Redirect /> } break;\r\n            case '/document-control/approveduser': case '/document-control/approveduser/':\r\n                if (!user.documentControl.approvedUser.select) { return <Redirect /> } break;\r\n            case '/document-control/rejecteduser': case '/document-control/rejecteduser/':\r\n                if (!user.documentControl.rejectedUser.select) { return <Redirect /> } break;\r\n\r\n            case '/document-control/on-approval': case '/document-control/on-approval/':\r\n                if (!user.documentControl.onApproval.select) { return <Redirect /> } break;\r\n            case '/document-control/on-approval-list': case '/document-control/on-approval-list/':\r\n                if (!user.documentControl.onApprovalList.select) { return <Redirect /> } break;\r\n\r\n            case '/document-control/for-execution-inbox': case '/document-control/for-execution-inbox/':\r\n                if (!user.documentControl.forExecutionInbox.select) { return <Redirect /> } break;\r\n\r\n            case '/document-control/approved': case '/document-control/approved/': \r\n                if (!user.documentControl.approved.select) { return <Redirect /> } break;\r\n            case '/document-control/rejected': case '/document-control/rejected/':\r\n                if (!user.documentControl.rejected.select) { return <Redirect /> } break;\r\n\r\n            case '/document-report': case '/document-report/':\r\n                if (!user.documentReport.select) { return <Redirect /> } break;\r\n            case '/document-history': case '/document-history/':\r\n                if (!user.documentHistory.select) { return <Redirect /> } break;\r\n            // case '/admin-department': case '/admin-department/': case '/admin-department/' + path_test[2]:\r\n            //     if (!user.adminDepartment.select) { return <Redirect /> } break;\r\n            case '/document-search': case '/document-search/':\r\n                if (!user.documentSearch.select) { return <Redirect /> } break;\r\n            case '/document-search/search': case '/document-search/search/': \r\n                if (!user.documentSearch.search.select) { return <Redirect /> } break;\r\n\r\n            default:\r\n                return <Error404 />;\r\n        }\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return accessRedirect;\r\n}\r\n\r\n\r\nexport const download = async (url, filename) => {\r\n    let response = await fetch(url, {\r\n        mode: 'no-cors'\r\n        /*\r\n        * ALTERNATIVE MODE {\r\n        mode: 'cors'\r\n        }\r\n        *\r\n        */\r\n    });\r\n    try {\r\n        let data = await response.blob();\r\n        let elm = document.createElement('a');  // CREATE A LINK ELEMENT IN DOM\r\n        elm.href = URL.createObjectURL(data);  // SET LINK ELEMENTS CONTENTS\r\n        elm.setAttribute('download', filename); // SET ELEMENT CREATED 'ATTRIBUTE' TO DOWNLOAD, FILENAME PARAM AUTOMATICALLY\r\n        elm.click();                             // TRIGGER ELEMENT TO DOWNLOAD\r\n        elm.remove();\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const getDDMMYYY = (date = new Date) => {\r\n    let today = new Date(date);\r\n    let dd = today.getDate();\r\n    let mm = today.getMonth() + 1; //January is 0!\r\n    let yyyy = today.getFullYear();\r\n\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n\r\n    today = dd + '-' + mm + '-' + yyyy;\r\n    return today;\r\n}\r\n\r\nexport const getDDMMYYYHHmm = (date = new Date) => {\r\n    let today = new Date(date);\r\n    let dd = today.getDate();\r\n    let mm = today.getMonth() + 1; //January is 0!\r\n    let yyyy = today.getFullYear();\r\n    let hours = today.getHours();\r\n    let minutes = today.getMinutes();\r\n\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n\r\n    function padTo2Digits(num) {\r\n        return String(num).padStart(2, '0');\r\n    }\r\n\r\n    today = dd + '-' + mm + '-' + yyyy + ' ' + padTo2Digits(hours) + ':' + padTo2Digits(minutes);\r\n    return today;\r\n}\r\n\r\nexport const getFirstMonthDate = (anydate = new Date) => {\r\n    let today_tmp = new Date(anydate);\r\n    let today = new Date(today_tmp.getTime() - today_tmp.getTimezoneOffset() * 60 * 1000);\r\n    let myDate = today;\r\n    myDate.setHours(0, 0, 0, 0); // начало текущего дня\r\n    myDate.setMonth(myDate.getMonth() + 1, 0); // февраль текущего года\r\n    myDate.setDate(1); // 1 число февраля текущего года\r\n    return myDate;\r\n}\r\n\r\nexport const formatDate = (timestamp = new Date) => {\r\n    let d = timestamp.split(/[^\\d]+/);\r\n    d = d[2] + \"-\" + d[1] + \"-\" + d[0] + \" \" + d[3] + \":\" + d[4] + \":\" + d[5];\r\n    return d;\r\n}\r\n\r\nexport const getDiffHours = (date1, date2) => {\r\n    let diff = (date2.getTime() - date1.getTime()) / 1000;\r\n    diff /= (60 * 60);\r\n    console.log('diff', diff)\r\n    if (diff < 1) return \"менее часа назад\";\r\n    if (diff < 12 && diff>=1) return Math.abs(Math.round(diff)) + \" ч. назад\";\r\n    if (diff > 12 && diff < 24) return \"Вчера\";\r\n    if (diff > 24) return Math.abs(Math.round(diff/24))+\" д. назад\";\r\n};\r\n\r\n\r\nexport const notifyMe = (text) => {\r\n    if (!window.Notification) {\r\n        console.log('Browser does not support notifications.');\r\n    } else if (text) {\r\n        // check if permission is already granted\r\n        if (Notification.permission === 'granted') {\r\n            // show notification here\r\n            let notify = new Notification('Согласование договоров', {\r\n                title: 'Тест',\r\n                body: text,\r\n                icon: notif_image,\r\n                requireInteraction: false\r\n            });\r\n            setTimeout(() => { notify.close() }, 3000)\r\n        } else {\r\n            // request permission from user\r\n            Notification.requestPermission().then(function (p) {\r\n                if (p === 'granted') {\r\n                    // show notification here\r\n                    let notify = new Notification('Согласование договоров', {\r\n                        title: 'Тест',\r\n                        body: text,\r\n                        icon: notif_image,\r\n                        requireInteraction: false\r\n                    });\r\n                    setTimeout(() => { notify.close() }, 3000)\r\n                } else {\r\n                    console.log('User blocked notifications.');\r\n                }\r\n            }).catch(function (err) {\r\n                console.error(err);\r\n            });\r\n        }\r\n    }\r\n};\r\nexport const sendAgentNotification = async (address) => {\r\n    const tmp = await fetch('/api/notifications', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n            { address: address }\r\n        )\r\n    })\r\n    const content = await tmp.json();\r\n};"],"sourceRoot":""}